
AlphaController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000004ca  00800100  00000b06  00000b9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b06  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  008005ca  008005ca  00001064  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001064  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001094  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  000010d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c1d  00000000  00000000  0000119c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007cb  00000000  00000000  00001db9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006c2  00000000  00000000  00002584  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000370  00000000  00000000  00002c48  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005d2  00000000  00000000  00002fb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006e5  00000000  00000000  0000358a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00003c6f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 45 00 	jmp	0x8a	; 0x8a <__ctors_end>
   4:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__vector_1>
   8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
   c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  10:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  14:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  18:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  1c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  20:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  24:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  28:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  2c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  30:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  34:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  38:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  3c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  40:	0c 94 a9 02 	jmp	0x552	; 0x552 <__vector_16>
  44:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  48:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  4c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  50:	0c 94 5a 02 	jmp	0x4b4	; 0x4b4 <__vector_20>
  54:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  58:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  5c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  60:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  64:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  68:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  6c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  70:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  74:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  78:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  7c:	92 00       	.word	0x0092	; ????
  7e:	9d 00       	.word	0x009d	; ????
  80:	a8 00       	.word	0x00a8	; ????
  82:	f4 00       	.word	0x00f4	; ????
  84:	40 01       	movw	r8, r0
  86:	8c 01       	movw	r16, r24
  88:	f6 01       	movw	r30, r12

0000008a <__ctors_end>:
  8a:	11 24       	eor	r1, r1
  8c:	1f be       	out	0x3f, r1	; 63
  8e:	cf ef       	ldi	r28, 0xFF	; 255
  90:	d0 e1       	ldi	r29, 0x10	; 16
  92:	de bf       	out	0x3e, r29	; 62
  94:	cd bf       	out	0x3d, r28	; 61

00000096 <__do_copy_data>:
  96:	15 e0       	ldi	r17, 0x05	; 5
  98:	a0 e0       	ldi	r26, 0x00	; 0
  9a:	b1 e0       	ldi	r27, 0x01	; 1
  9c:	e6 e0       	ldi	r30, 0x06	; 6
  9e:	fb e0       	ldi	r31, 0x0B	; 11
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <__do_copy_data+0x10>
  a2:	05 90       	lpm	r0, Z+
  a4:	0d 92       	st	X+, r0
  a6:	aa 3c       	cpi	r26, 0xCA	; 202
  a8:	b1 07       	cpc	r27, r17
  aa:	d9 f7       	brne	.-10     	; 0xa2 <__do_copy_data+0xc>

000000ac <__do_clear_bss>:
  ac:	25 e0       	ldi	r18, 0x05	; 5
  ae:	aa ec       	ldi	r26, 0xCA	; 202
  b0:	b5 e0       	ldi	r27, 0x05	; 5
  b2:	01 c0       	rjmp	.+2      	; 0xb6 <.do_clear_bss_start>

000000b4 <.do_clear_bss_loop>:
  b4:	1d 92       	st	X+, r1

000000b6 <.do_clear_bss_start>:
  b6:	ae 3c       	cpi	r26, 0xCE	; 206
  b8:	b2 07       	cpc	r27, r18
  ba:	e1 f7       	brne	.-8      	; 0xb4 <.do_clear_bss_loop>
  bc:	0e 94 64 00 	call	0xc8	; 0xc8 <main>
  c0:	0c 94 81 05 	jmp	0xb02	; 0xb02 <_exit>

000000c4 <__bad_interrupt>:
  c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c8 <main>:
    while (*s) {
        /* so lange *s != '\0' also ungleich dem "String-Endezeichen(Terminator)" */
        uart_sendc(*s);
        s++;
    }
}
  c8:	8f 92       	push	r8
  ca:	9f 92       	push	r9
  cc:	af 92       	push	r10
  ce:	bf 92       	push	r11
  d0:	cf 92       	push	r12
  d2:	df 92       	push	r13
  d4:	ef 92       	push	r14
  d6:	ff 92       	push	r15
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	cd b7       	in	r28, 0x3d	; 61
  de:	de b7       	in	r29, 0x3e	; 62
  e0:	78 94       	sei
  e2:	0e 94 85 03 	call	0x70a	; 0x70a <Init_Int0>
  e6:	0e 94 9f 03 	call	0x73e	; 0x73e <Init_Timer_0>
  ea:	0e 94 c3 03 	call	0x786	; 0x786 <USART_Init>
  ee:	84 e2       	ldi	r24, 0x24	; 36
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	2f ef       	ldi	r18, 0xFF	; 255
  f4:	fc 01       	movw	r30, r24
  f6:	20 83       	st	Z, r18
  f8:	80 91 be 05 	lds	r24, 0x05BE	; 0x8005be <mode>
  fc:	90 91 bf 05 	lds	r25, 0x05BF	; 0x8005bf <mode+0x1>
 100:	09 2e       	mov	r0, r25
 102:	00 0c       	add	r0, r0
 104:	aa 0b       	sbc	r26, r26
 106:	bb 0b       	sbc	r27, r27
 108:	41 e0       	ldi	r20, 0x01	; 1
 10a:	50 e0       	ldi	r21, 0x00	; 0
 10c:	26 e0       	ldi	r18, 0x06	; 6
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	84 1b       	sub	r24, r20
 112:	95 0b       	sbc	r25, r21
 114:	28 17       	cp	r18, r24
 116:	39 07       	cpc	r19, r25
 118:	78 f3       	brcs	.-34     	; 0xf8 <main+0x30>
 11a:	82 5c       	subi	r24, 0xC2	; 194
 11c:	9f 4f       	sbci	r25, 0xFF	; 255
 11e:	fc 01       	movw	r30, r24
 120:	0c 94 7b 05 	jmp	0xaf6	; 0xaf6 <__tablejump2__>
 124:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <SSR1off>
 128:	0e 94 0e 03 	call	0x61c	; 0x61c <SSR2off>
 12c:	0e 94 30 03 	call	0x660	; 0x660 <SSR3Aoff>
 130:	0e 94 52 03 	call	0x6a4	; 0x6a4 <SSR3Boff>
 134:	0e 94 74 03 	call	0x6e8	; 0x6e8 <SSR3Coff>
 138:	6f c1       	rjmp	.+734    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 13a:	0e 94 db 02 	call	0x5b6	; 0x5b6 <SSR1on>
 13e:	0e 94 fd 02 	call	0x5fa	; 0x5fa <SSR2on>
 142:	0e 94 1f 03 	call	0x63e	; 0x63e <SSR3Aon>
 146:	0e 94 41 03 	call	0x682	; 0x682 <SSR3Bon>
 14a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <SSR3Con>
 14e:	64 c1       	rjmp	.+712    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 150:	80 91 cc 05 	lds	r24, 0x05CC	; 0x8005cc <timerCounter>
 154:	90 91 cd 05 	lds	r25, 0x05CD	; 0x8005cd <timerCounter+0x1>
 158:	01 96       	adiw	r24, 0x01	; 1
 15a:	09 2e       	mov	r0, r25
 15c:	00 0c       	add	r0, r0
 15e:	aa 0b       	sbc	r26, r26
 160:	bb 0b       	sbc	r27, r27
 162:	bc 01       	movw	r22, r24
 164:	cd 01       	movw	r24, r26
 166:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__floatsisf>
 16a:	4b 01       	movw	r8, r22
 16c:	5c 01       	movw	r10, r24
 16e:	80 91 c0 05 	lds	r24, 0x05C0	; 0x8005c0 <ctrlVal1>
 172:	90 91 c1 05 	lds	r25, 0x05C1	; 0x8005c1 <ctrlVal1+0x1>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	80 50       	subi	r24, 0x00	; 0
 180:	9f 4f       	sbci	r25, 0xFF	; 255
 182:	fc 01       	movw	r30, r24
 184:	c0 80       	ld	r12, Z
 186:	d1 80       	ldd	r13, Z+1	; 0x01
 188:	e2 80       	ldd	r14, Z+2	; 0x02
 18a:	f3 80       	ldd	r15, Z+3	; 0x03
 18c:	80 91 bc 05 	lds	r24, 0x05BC	; 0x8005bc <netzT>
 190:	90 91 bd 05 	lds	r25, 0x05BD	; 0x8005bd <netzT+0x1>
 194:	09 2e       	mov	r0, r25
 196:	00 0c       	add	r0, r0
 198:	aa 0b       	sbc	r26, r26
 19a:	bb 0b       	sbc	r27, r27
 19c:	bc 01       	movw	r22, r24
 19e:	cd 01       	movw	r24, r26
 1a0:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__floatsisf>
 1a4:	dc 01       	movw	r26, r24
 1a6:	cb 01       	movw	r24, r22
 1a8:	9c 01       	movw	r18, r24
 1aa:	ad 01       	movw	r20, r26
 1ac:	c7 01       	movw	r24, r14
 1ae:	b6 01       	movw	r22, r12
 1b0:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__mulsf3>
 1b4:	dc 01       	movw	r26, r24
 1b6:	cb 01       	movw	r24, r22
 1b8:	20 e0       	ldi	r18, 0x00	; 0
 1ba:	30 e0       	ldi	r19, 0x00	; 0
 1bc:	48 e4       	ldi	r20, 0x48	; 72
 1be:	52 e4       	ldi	r21, 0x42	; 66
 1c0:	bc 01       	movw	r22, r24
 1c2:	cd 01       	movw	r24, r26
 1c4:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__divsf3>
 1c8:	dc 01       	movw	r26, r24
 1ca:	cb 01       	movw	r24, r22
 1cc:	9c 01       	movw	r18, r24
 1ce:	ad 01       	movw	r20, r26
 1d0:	c5 01       	movw	r24, r10
 1d2:	b4 01       	movw	r22, r8
 1d4:	0e 94 e5 04 	call	0x9ca	; 0x9ca <__gesf2>
 1d8:	18 16       	cp	r1, r24
 1da:	1c f4       	brge	.+6      	; 0x1e2 <main+0x11a>
 1dc:	0e 94 db 02 	call	0x5b6	; 0x5b6 <SSR1on>
 1e0:	1b c1       	rjmp	.+566    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 1e2:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <SSR1off>
 1e6:	18 c1       	rjmp	.+560    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 1e8:	80 91 cc 05 	lds	r24, 0x05CC	; 0x8005cc <timerCounter>
 1ec:	90 91 cd 05 	lds	r25, 0x05CD	; 0x8005cd <timerCounter+0x1>
 1f0:	01 96       	adiw	r24, 0x01	; 1
 1f2:	09 2e       	mov	r0, r25
 1f4:	00 0c       	add	r0, r0
 1f6:	aa 0b       	sbc	r26, r26
 1f8:	bb 0b       	sbc	r27, r27
 1fa:	bc 01       	movw	r22, r24
 1fc:	cd 01       	movw	r24, r26
 1fe:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__floatsisf>
 202:	4b 01       	movw	r8, r22
 204:	5c 01       	movw	r10, r24
 206:	80 91 c0 05 	lds	r24, 0x05C0	; 0x8005c0 <ctrlVal1>
 20a:	90 91 c1 05 	lds	r25, 0x05C1	; 0x8005c1 <ctrlVal1+0x1>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	88 5d       	subi	r24, 0xD8	; 216
 218:	9b 4f       	sbci	r25, 0xFB	; 251
 21a:	fc 01       	movw	r30, r24
 21c:	c0 80       	ld	r12, Z
 21e:	d1 80       	ldd	r13, Z+1	; 0x01
 220:	e2 80       	ldd	r14, Z+2	; 0x02
 222:	f3 80       	ldd	r15, Z+3	; 0x03
 224:	80 91 bc 05 	lds	r24, 0x05BC	; 0x8005bc <netzT>
 228:	90 91 bd 05 	lds	r25, 0x05BD	; 0x8005bd <netzT+0x1>
 22c:	09 2e       	mov	r0, r25
 22e:	00 0c       	add	r0, r0
 230:	aa 0b       	sbc	r26, r26
 232:	bb 0b       	sbc	r27, r27
 234:	bc 01       	movw	r22, r24
 236:	cd 01       	movw	r24, r26
 238:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__floatsisf>
 23c:	dc 01       	movw	r26, r24
 23e:	cb 01       	movw	r24, r22
 240:	9c 01       	movw	r18, r24
 242:	ad 01       	movw	r20, r26
 244:	c7 01       	movw	r24, r14
 246:	b6 01       	movw	r22, r12
 248:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__mulsf3>
 24c:	dc 01       	movw	r26, r24
 24e:	cb 01       	movw	r24, r22
 250:	20 e0       	ldi	r18, 0x00	; 0
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	48 e4       	ldi	r20, 0x48	; 72
 256:	52 e4       	ldi	r21, 0x42	; 66
 258:	bc 01       	movw	r22, r24
 25a:	cd 01       	movw	r24, r26
 25c:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__divsf3>
 260:	dc 01       	movw	r26, r24
 262:	cb 01       	movw	r24, r22
 264:	9c 01       	movw	r18, r24
 266:	ad 01       	movw	r20, r26
 268:	c5 01       	movw	r24, r10
 26a:	b4 01       	movw	r22, r8
 26c:	0e 94 e5 04 	call	0x9ca	; 0x9ca <__gesf2>
 270:	18 16       	cp	r1, r24
 272:	1c f4       	brge	.+6      	; 0x27a <main+0x1b2>
 274:	0e 94 db 02 	call	0x5b6	; 0x5b6 <SSR1on>
 278:	cf c0       	rjmp	.+414    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 27a:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <SSR1off>
 27e:	cc c0       	rjmp	.+408    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 280:	80 91 cc 05 	lds	r24, 0x05CC	; 0x8005cc <timerCounter>
 284:	90 91 cd 05 	lds	r25, 0x05CD	; 0x8005cd <timerCounter+0x1>
 288:	01 96       	adiw	r24, 0x01	; 1
 28a:	09 2e       	mov	r0, r25
 28c:	00 0c       	add	r0, r0
 28e:	aa 0b       	sbc	r26, r26
 290:	bb 0b       	sbc	r27, r27
 292:	bc 01       	movw	r22, r24
 294:	cd 01       	movw	r24, r26
 296:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__floatsisf>
 29a:	4b 01       	movw	r8, r22
 29c:	5c 01       	movw	r10, r24
 29e:	80 91 c0 05 	lds	r24, 0x05C0	; 0x8005c0 <ctrlVal1>
 2a2:	90 91 c1 05 	lds	r25, 0x05C1	; 0x8005c1 <ctrlVal1+0x1>
 2a6:	88 0f       	add	r24, r24
 2a8:	99 1f       	adc	r25, r25
 2aa:	88 0f       	add	r24, r24
 2ac:	99 1f       	adc	r25, r25
 2ae:	8c 56       	subi	r24, 0x6C	; 108
 2b0:	9d 4f       	sbci	r25, 0xFD	; 253
 2b2:	fc 01       	movw	r30, r24
 2b4:	c0 80       	ld	r12, Z
 2b6:	d1 80       	ldd	r13, Z+1	; 0x01
 2b8:	e2 80       	ldd	r14, Z+2	; 0x02
 2ba:	f3 80       	ldd	r15, Z+3	; 0x03
 2bc:	80 91 bc 05 	lds	r24, 0x05BC	; 0x8005bc <netzT>
 2c0:	90 91 bd 05 	lds	r25, 0x05BD	; 0x8005bd <netzT+0x1>
 2c4:	09 2e       	mov	r0, r25
 2c6:	00 0c       	add	r0, r0
 2c8:	aa 0b       	sbc	r26, r26
 2ca:	bb 0b       	sbc	r27, r27
 2cc:	bc 01       	movw	r22, r24
 2ce:	cd 01       	movw	r24, r26
 2d0:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__floatsisf>
 2d4:	dc 01       	movw	r26, r24
 2d6:	cb 01       	movw	r24, r22
 2d8:	9c 01       	movw	r18, r24
 2da:	ad 01       	movw	r20, r26
 2dc:	c7 01       	movw	r24, r14
 2de:	b6 01       	movw	r22, r12
 2e0:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__mulsf3>
 2e4:	dc 01       	movw	r26, r24
 2e6:	cb 01       	movw	r24, r22
 2e8:	20 e0       	ldi	r18, 0x00	; 0
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	48 e4       	ldi	r20, 0x48	; 72
 2ee:	52 e4       	ldi	r21, 0x42	; 66
 2f0:	bc 01       	movw	r22, r24
 2f2:	cd 01       	movw	r24, r26
 2f4:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__divsf3>
 2f8:	dc 01       	movw	r26, r24
 2fa:	cb 01       	movw	r24, r22
 2fc:	9c 01       	movw	r18, r24
 2fe:	ad 01       	movw	r20, r26
 300:	c5 01       	movw	r24, r10
 302:	b4 01       	movw	r22, r8
 304:	0e 94 e5 04 	call	0x9ca	; 0x9ca <__gesf2>
 308:	18 16       	cp	r1, r24
 30a:	1c f4       	brge	.+6      	; 0x312 <main+0x24a>
 30c:	0e 94 db 02 	call	0x5b6	; 0x5b6 <SSR1on>
 310:	83 c0       	rjmp	.+262    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 312:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <SSR1off>
 316:	80 c0       	rjmp	.+256    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 318:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <__data_end>
 31c:	90 91 cb 05 	lds	r25, 0x05CB	; 0x8005cb <__data_end+0x1>
 320:	9c 01       	movw	r18, r24
 322:	2f 5f       	subi	r18, 0xFF	; 255
 324:	3f 4f       	sbci	r19, 0xFF	; 255
 326:	80 91 c0 05 	lds	r24, 0x05C0	; 0x8005c0 <ctrlVal1>
 32a:	90 91 c1 05 	lds	r25, 0x05C1	; 0x8005c1 <ctrlVal1+0x1>
 32e:	88 0f       	add	r24, r24
 330:	99 1f       	adc	r25, r25
 332:	82 17       	cp	r24, r18
 334:	93 07       	cpc	r25, r19
 336:	1c f4       	brge	.+6      	; 0x33e <main+0x276>
 338:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <SSR1off>
 33c:	02 c0       	rjmp	.+4      	; 0x342 <main+0x27a>
 33e:	0e 94 db 02 	call	0x5b6	; 0x5b6 <SSR1on>
 342:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <__data_end>
 346:	90 91 cb 05 	lds	r25, 0x05CB	; 0x8005cb <__data_end+0x1>
 34a:	9c 01       	movw	r18, r24
 34c:	2f 5f       	subi	r18, 0xFF	; 255
 34e:	3f 4f       	sbci	r19, 0xFF	; 255
 350:	80 91 c2 05 	lds	r24, 0x05C2	; 0x8005c2 <ctrlVal2>
 354:	90 91 c3 05 	lds	r25, 0x05C3	; 0x8005c3 <ctrlVal2+0x1>
 358:	88 0f       	add	r24, r24
 35a:	99 1f       	adc	r25, r25
 35c:	82 17       	cp	r24, r18
 35e:	93 07       	cpc	r25, r19
 360:	1c f4       	brge	.+6      	; 0x368 <main+0x2a0>
 362:	0e 94 0e 03 	call	0x61c	; 0x61c <SSR2off>
 366:	02 c0       	rjmp	.+4      	; 0x36c <main+0x2a4>
 368:	0e 94 fd 02 	call	0x5fa	; 0x5fa <SSR2on>
 36c:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <__data_end>
 370:	90 91 cb 05 	lds	r25, 0x05CB	; 0x8005cb <__data_end+0x1>
 374:	9c 01       	movw	r18, r24
 376:	2f 5f       	subi	r18, 0xFF	; 255
 378:	3f 4f       	sbci	r19, 0xFF	; 255
 37a:	80 91 c4 05 	lds	r24, 0x05C4	; 0x8005c4 <ctrlVal3>
 37e:	90 91 c5 05 	lds	r25, 0x05C5	; 0x8005c5 <ctrlVal3+0x1>
 382:	88 0f       	add	r24, r24
 384:	99 1f       	adc	r25, r25
 386:	82 17       	cp	r24, r18
 388:	93 07       	cpc	r25, r19
 38a:	1c f4       	brge	.+6      	; 0x392 <main+0x2ca>
 38c:	0e 94 30 03 	call	0x660	; 0x660 <SSR3Aoff>
 390:	02 c0       	rjmp	.+4      	; 0x396 <main+0x2ce>
 392:	0e 94 1f 03 	call	0x63e	; 0x63e <SSR3Aon>
 396:	80 91 c6 05 	lds	r24, 0x05C6	; 0x8005c6 <intCounterPhaseA>
 39a:	90 91 c7 05 	lds	r25, 0x05C7	; 0x8005c7 <intCounterPhaseA+0x1>
 39e:	9c 01       	movw	r18, r24
 3a0:	2f 5f       	subi	r18, 0xFF	; 255
 3a2:	3f 4f       	sbci	r19, 0xFF	; 255
 3a4:	80 91 c4 05 	lds	r24, 0x05C4	; 0x8005c4 <ctrlVal3>
 3a8:	90 91 c5 05 	lds	r25, 0x05C5	; 0x8005c5 <ctrlVal3+0x1>
 3ac:	88 0f       	add	r24, r24
 3ae:	99 1f       	adc	r25, r25
 3b0:	82 17       	cp	r24, r18
 3b2:	93 07       	cpc	r25, r19
 3b4:	1c f4       	brge	.+6      	; 0x3bc <main+0x2f4>
 3b6:	0e 94 52 03 	call	0x6a4	; 0x6a4 <SSR3Boff>
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <main+0x2f8>
 3bc:	0e 94 41 03 	call	0x682	; 0x682 <SSR3Bon>
 3c0:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <intCounterPhaseB>
 3c4:	90 91 c9 05 	lds	r25, 0x05C9	; 0x8005c9 <intCounterPhaseB+0x1>
 3c8:	9c 01       	movw	r18, r24
 3ca:	2f 5f       	subi	r18, 0xFF	; 255
 3cc:	3f 4f       	sbci	r19, 0xFF	; 255
 3ce:	80 91 c4 05 	lds	r24, 0x05C4	; 0x8005c4 <ctrlVal3>
 3d2:	90 91 c5 05 	lds	r25, 0x05C5	; 0x8005c5 <ctrlVal3+0x1>
 3d6:	88 0f       	add	r24, r24
 3d8:	99 1f       	adc	r25, r25
 3da:	82 17       	cp	r24, r18
 3dc:	93 07       	cpc	r25, r19
 3de:	1c f4       	brge	.+6      	; 0x3e6 <main+0x31e>
 3e0:	0e 94 74 03 	call	0x6e8	; 0x6e8 <SSR3Coff>
 3e4:	19 c0       	rjmp	.+50     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3e6:	0e 94 63 03 	call	0x6c6	; 0x6c6 <SSR3Con>
 3ea:	16 c0       	rjmp	.+44     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3ec:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <__data_end>
 3f0:	90 91 cb 05 	lds	r25, 0x05CB	; 0x8005cb <__data_end+0x1>
 3f4:	9c 01       	movw	r18, r24
 3f6:	2f 5f       	subi	r18, 0xFF	; 255
 3f8:	3f 4f       	sbci	r19, 0xFF	; 255
 3fa:	80 91 c0 05 	lds	r24, 0x05C0	; 0x8005c0 <ctrlVal1>
 3fe:	90 91 c1 05 	lds	r25, 0x05C1	; 0x8005c1 <ctrlVal1+0x1>
 402:	88 0f       	add	r24, r24
 404:	99 1f       	adc	r25, r25
 406:	82 17       	cp	r24, r18
 408:	93 07       	cpc	r25, r19
 40a:	1c f4       	brge	.+6      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40c:	0e 94 db 02 	call	0x5b6	; 0x5b6 <SSR1on>
 410:	02 c0       	rjmp	.+4      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 412:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <SSR1off>
 416:	00 00       	nop
 418:	6f ce       	rjmp	.-802    	; 0xf8 <main+0x30>

0000041a <__vector_1>:
 41a:	1f 92       	push	r1
 41c:	0f 92       	push	r0
 41e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 422:	0f 92       	push	r0
 424:	11 24       	eor	r1, r1
 426:	8f 93       	push	r24
 428:	9f 93       	push	r25
 42a:	ef 93       	push	r30
 42c:	ff 93       	push	r31
 42e:	cf 93       	push	r28
 430:	df 93       	push	r29
 432:	cd b7       	in	r28, 0x3d	; 61
 434:	de b7       	in	r29, 0x3e	; 62
 436:	10 92 cd 05 	sts	0x05CD, r1	; 0x8005cd <timerCounter+0x1>
 43a:	10 92 cc 05 	sts	0x05CC, r1	; 0x8005cc <timerCounter>
 43e:	86 e4       	ldi	r24, 0x46	; 70
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	fc 01       	movw	r30, r24
 444:	10 82       	st	Z, r1
 446:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <__data_end>
 44a:	90 91 cb 05 	lds	r25, 0x05CB	; 0x8005cb <__data_end+0x1>
 44e:	01 96       	adiw	r24, 0x01	; 1
 450:	90 93 cb 05 	sts	0x05CB, r25	; 0x8005cb <__data_end+0x1>
 454:	80 93 ca 05 	sts	0x05CA, r24	; 0x8005ca <__data_end>
 458:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <__data_end>
 45c:	90 91 cb 05 	lds	r25, 0x05CB	; 0x8005cb <__data_end+0x1>
 460:	88 3c       	cpi	r24, 0xC8	; 200
 462:	91 05       	cpc	r25, r1
 464:	21 f4       	brne	.+8      	; 0x46e <__vector_1+0x54>
 466:	10 92 cb 05 	sts	0x05CB, r1	; 0x8005cb <__data_end+0x1>
 46a:	10 92 ca 05 	sts	0x05CA, r1	; 0x8005ca <__data_end>
 46e:	80 91 c6 05 	lds	r24, 0x05C6	; 0x8005c6 <intCounterPhaseA>
 472:	90 91 c7 05 	lds	r25, 0x05C7	; 0x8005c7 <intCounterPhaseA+0x1>
 476:	88 3c       	cpi	r24, 0xC8	; 200
 478:	91 05       	cpc	r25, r1
 47a:	21 f4       	brne	.+8      	; 0x484 <__vector_1+0x6a>
 47c:	10 92 c7 05 	sts	0x05C7, r1	; 0x8005c7 <intCounterPhaseA+0x1>
 480:	10 92 c6 05 	sts	0x05C6, r1	; 0x8005c6 <intCounterPhaseA>
 484:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <intCounterPhaseB>
 488:	90 91 c9 05 	lds	r25, 0x05C9	; 0x8005c9 <intCounterPhaseB+0x1>
 48c:	88 3c       	cpi	r24, 0xC8	; 200
 48e:	91 05       	cpc	r25, r1
 490:	21 f4       	brne	.+8      	; 0x49a <__vector_1+0x80>
 492:	10 92 c9 05 	sts	0x05C9, r1	; 0x8005c9 <intCounterPhaseB+0x1>
 496:	10 92 c8 05 	sts	0x05C8, r1	; 0x8005c8 <intCounterPhaseB>
 49a:	00 00       	nop
 49c:	df 91       	pop	r29
 49e:	cf 91       	pop	r28
 4a0:	ff 91       	pop	r31
 4a2:	ef 91       	pop	r30
 4a4:	9f 91       	pop	r25
 4a6:	8f 91       	pop	r24
 4a8:	0f 90       	pop	r0
 4aa:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 4ae:	0f 90       	pop	r0
 4b0:	1f 90       	pop	r1
 4b2:	18 95       	reti

000004b4 <__vector_20>:
 4b4:	1f 92       	push	r1
 4b6:	0f 92       	push	r0
 4b8:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 4bc:	0f 92       	push	r0
 4be:	11 24       	eor	r1, r1
 4c0:	2f 93       	push	r18
 4c2:	3f 93       	push	r19
 4c4:	4f 93       	push	r20
 4c6:	5f 93       	push	r21
 4c8:	6f 93       	push	r22
 4ca:	7f 93       	push	r23
 4cc:	8f 93       	push	r24
 4ce:	9f 93       	push	r25
 4d0:	af 93       	push	r26
 4d2:	bf 93       	push	r27
 4d4:	ef 93       	push	r30
 4d6:	ff 93       	push	r31
 4d8:	cf 93       	push	r28
 4da:	df 93       	push	r29
 4dc:	cd b7       	in	r28, 0x3d	; 61
 4de:	de b7       	in	r29, 0x3e	; 62
 4e0:	0e 94 c9 02 	call	0x592	; 0x592 <uart_getc>
 4e4:	88 2f       	mov	r24, r24
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	c0 97       	sbiw	r24, 0x30	; 48
 4ea:	88 0f       	add	r24, r24
 4ec:	99 1f       	adc	r25, r25
 4ee:	9c 01       	movw	r18, r24
 4f0:	22 0f       	add	r18, r18
 4f2:	33 1f       	adc	r19, r19
 4f4:	22 0f       	add	r18, r18
 4f6:	33 1f       	adc	r19, r19
 4f8:	82 0f       	add	r24, r18
 4fa:	93 1f       	adc	r25, r19
 4fc:	90 93 c1 05 	sts	0x05C1, r25	; 0x8005c1 <ctrlVal1+0x1>
 500:	80 93 c0 05 	sts	0x05C0, r24	; 0x8005c0 <ctrlVal1>
 504:	0e 94 c9 02 	call	0x592	; 0x592 <uart_getc>
 508:	88 2f       	mov	r24, r24
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	c0 97       	sbiw	r24, 0x30	; 48
 50e:	88 0f       	add	r24, r24
 510:	99 1f       	adc	r25, r25
 512:	9c 01       	movw	r18, r24
 514:	22 0f       	add	r18, r18
 516:	33 1f       	adc	r19, r19
 518:	22 0f       	add	r18, r18
 51a:	33 1f       	adc	r19, r19
 51c:	82 0f       	add	r24, r18
 51e:	93 1f       	adc	r25, r19
 520:	90 93 c3 05 	sts	0x05C3, r25	; 0x8005c3 <ctrlVal2+0x1>
 524:	80 93 c2 05 	sts	0x05C2, r24	; 0x8005c2 <ctrlVal2>
 528:	00 00       	nop
 52a:	df 91       	pop	r29
 52c:	cf 91       	pop	r28
 52e:	ff 91       	pop	r31
 530:	ef 91       	pop	r30
 532:	bf 91       	pop	r27
 534:	af 91       	pop	r26
 536:	9f 91       	pop	r25
 538:	8f 91       	pop	r24
 53a:	7f 91       	pop	r23
 53c:	6f 91       	pop	r22
 53e:	5f 91       	pop	r21
 540:	4f 91       	pop	r20
 542:	3f 91       	pop	r19
 544:	2f 91       	pop	r18
 546:	0f 90       	pop	r0
 548:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 54c:	0f 90       	pop	r0
 54e:	1f 90       	pop	r1
 550:	18 95       	reti

00000552 <__vector_16>:
 552:	1f 92       	push	r1
 554:	0f 92       	push	r0
 556:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 55a:	0f 92       	push	r0
 55c:	11 24       	eor	r1, r1
 55e:	8f 93       	push	r24
 560:	9f 93       	push	r25
 562:	cf 93       	push	r28
 564:	df 93       	push	r29
 566:	cd b7       	in	r28, 0x3d	; 61
 568:	de b7       	in	r29, 0x3e	; 62
 56a:	80 91 cc 05 	lds	r24, 0x05CC	; 0x8005cc <timerCounter>
 56e:	90 91 cd 05 	lds	r25, 0x05CD	; 0x8005cd <timerCounter+0x1>
 572:	01 96       	adiw	r24, 0x01	; 1
 574:	90 93 cd 05 	sts	0x05CD, r25	; 0x8005cd <timerCounter+0x1>
 578:	80 93 cc 05 	sts	0x05CC, r24	; 0x8005cc <timerCounter>
 57c:	00 00       	nop
 57e:	df 91       	pop	r29
 580:	cf 91       	pop	r28
 582:	9f 91       	pop	r25
 584:	8f 91       	pop	r24
 586:	0f 90       	pop	r0
 588:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 58c:	0f 90       	pop	r0
 58e:	1f 90       	pop	r1
 590:	18 95       	reti

00000592 <uart_getc>:
 592:	cf 93       	push	r28
 594:	df 93       	push	r29
 596:	cd b7       	in	r28, 0x3d	; 61
 598:	de b7       	in	r29, 0x3e	; 62
 59a:	00 00       	nop
 59c:	80 ec       	ldi	r24, 0xC0	; 192
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	fc 01       	movw	r30, r24
 5a2:	80 81       	ld	r24, Z
 5a4:	88 23       	and	r24, r24
 5a6:	d4 f7       	brge	.-12     	; 0x59c <uart_getc+0xa>
 5a8:	86 ec       	ldi	r24, 0xC6	; 198
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	fc 01       	movw	r30, r24
 5ae:	80 81       	ld	r24, Z
 5b0:	df 91       	pop	r29
 5b2:	cf 91       	pop	r28
 5b4:	08 95       	ret

000005b6 <SSR1on>:
void SSR1on () {
 5b6:	cf 93       	push	r28
 5b8:	df 93       	push	r29
 5ba:	cd b7       	in	r28, 0x3d	; 61
 5bc:	de b7       	in	r29, 0x3e	; 62
    PORTB |= (1<<PB0);		//set PB0 HIGH
 5be:	85 e2       	ldi	r24, 0x25	; 37
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	25 e2       	ldi	r18, 0x25	; 37
 5c4:	30 e0       	ldi	r19, 0x00	; 0
 5c6:	f9 01       	movw	r30, r18
 5c8:	20 81       	ld	r18, Z
 5ca:	21 60       	ori	r18, 0x01	; 1
 5cc:	fc 01       	movw	r30, r24
 5ce:	20 83       	st	Z, r18
}
 5d0:	00 00       	nop
 5d2:	df 91       	pop	r29
 5d4:	cf 91       	pop	r28
 5d6:	08 95       	ret

000005d8 <SSR1off>:
void SSR1off () {
 5d8:	cf 93       	push	r28
 5da:	df 93       	push	r29
 5dc:	cd b7       	in	r28, 0x3d	; 61
 5de:	de b7       	in	r29, 0x3e	; 62
    PORTB &= ~(1<<PB0);		//clear PB0 aka.  set PB0 LOW
 5e0:	85 e2       	ldi	r24, 0x25	; 37
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	25 e2       	ldi	r18, 0x25	; 37
 5e6:	30 e0       	ldi	r19, 0x00	; 0
 5e8:	f9 01       	movw	r30, r18
 5ea:	20 81       	ld	r18, Z
 5ec:	2e 7f       	andi	r18, 0xFE	; 254
 5ee:	fc 01       	movw	r30, r24
 5f0:	20 83       	st	Z, r18
}
 5f2:	00 00       	nop
 5f4:	df 91       	pop	r29
 5f6:	cf 91       	pop	r28
 5f8:	08 95       	ret

000005fa <SSR2on>:
void SSR2on () {
 5fa:	cf 93       	push	r28
 5fc:	df 93       	push	r29
 5fe:	cd b7       	in	r28, 0x3d	; 61
 600:	de b7       	in	r29, 0x3e	; 62
    PORTB |= (1<<PB1);		//set PB0 HIGH
 602:	85 e2       	ldi	r24, 0x25	; 37
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	25 e2       	ldi	r18, 0x25	; 37
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	f9 01       	movw	r30, r18
 60c:	20 81       	ld	r18, Z
 60e:	22 60       	ori	r18, 0x02	; 2
 610:	fc 01       	movw	r30, r24
 612:	20 83       	st	Z, r18
}
 614:	00 00       	nop
 616:	df 91       	pop	r29
 618:	cf 91       	pop	r28
 61a:	08 95       	ret

0000061c <SSR2off>:
void SSR2off () {
 61c:	cf 93       	push	r28
 61e:	df 93       	push	r29
 620:	cd b7       	in	r28, 0x3d	; 61
 622:	de b7       	in	r29, 0x3e	; 62
    PORTB &= ~(1<<PB1);		//clear PB0 aka.  set PB0 LOW
 624:	85 e2       	ldi	r24, 0x25	; 37
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	25 e2       	ldi	r18, 0x25	; 37
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	f9 01       	movw	r30, r18
 62e:	20 81       	ld	r18, Z
 630:	2d 7f       	andi	r18, 0xFD	; 253
 632:	fc 01       	movw	r30, r24
 634:	20 83       	st	Z, r18
}
 636:	00 00       	nop
 638:	df 91       	pop	r29
 63a:	cf 91       	pop	r28
 63c:	08 95       	ret

0000063e <SSR3Aon>:
void SSR3Aon () {
 63e:	cf 93       	push	r28
 640:	df 93       	push	r29
 642:	cd b7       	in	r28, 0x3d	; 61
 644:	de b7       	in	r29, 0x3e	; 62
    PORTB |= (1<<PB2);		//set PB0 HIGH
 646:	85 e2       	ldi	r24, 0x25	; 37
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	25 e2       	ldi	r18, 0x25	; 37
 64c:	30 e0       	ldi	r19, 0x00	; 0
 64e:	f9 01       	movw	r30, r18
 650:	20 81       	ld	r18, Z
 652:	24 60       	ori	r18, 0x04	; 4
 654:	fc 01       	movw	r30, r24
 656:	20 83       	st	Z, r18
}
 658:	00 00       	nop
 65a:	df 91       	pop	r29
 65c:	cf 91       	pop	r28
 65e:	08 95       	ret

00000660 <SSR3Aoff>:
void SSR3Aoff () {
 660:	cf 93       	push	r28
 662:	df 93       	push	r29
 664:	cd b7       	in	r28, 0x3d	; 61
 666:	de b7       	in	r29, 0x3e	; 62
    PORTB &= ~(1<<PB2);		//clear PB0 aka.  set PB0 LOW
 668:	85 e2       	ldi	r24, 0x25	; 37
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	25 e2       	ldi	r18, 0x25	; 37
 66e:	30 e0       	ldi	r19, 0x00	; 0
 670:	f9 01       	movw	r30, r18
 672:	20 81       	ld	r18, Z
 674:	2b 7f       	andi	r18, 0xFB	; 251
 676:	fc 01       	movw	r30, r24
 678:	20 83       	st	Z, r18
}
 67a:	00 00       	nop
 67c:	df 91       	pop	r29
 67e:	cf 91       	pop	r28
 680:	08 95       	ret

00000682 <SSR3Bon>:
void SSR3Bon () {
 682:	cf 93       	push	r28
 684:	df 93       	push	r29
 686:	cd b7       	in	r28, 0x3d	; 61
 688:	de b7       	in	r29, 0x3e	; 62
    PORTB |= (1<<PB3);		//set PB0 HIGH
 68a:	85 e2       	ldi	r24, 0x25	; 37
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	25 e2       	ldi	r18, 0x25	; 37
 690:	30 e0       	ldi	r19, 0x00	; 0
 692:	f9 01       	movw	r30, r18
 694:	20 81       	ld	r18, Z
 696:	28 60       	ori	r18, 0x08	; 8
 698:	fc 01       	movw	r30, r24
 69a:	20 83       	st	Z, r18
}
 69c:	00 00       	nop
 69e:	df 91       	pop	r29
 6a0:	cf 91       	pop	r28
 6a2:	08 95       	ret

000006a4 <SSR3Boff>:
void SSR3Boff () {
 6a4:	cf 93       	push	r28
 6a6:	df 93       	push	r29
 6a8:	cd b7       	in	r28, 0x3d	; 61
 6aa:	de b7       	in	r29, 0x3e	; 62
    PORTB &= ~(1<<PB3);		//clear PB0 aka.  set PB0 LOW
 6ac:	85 e2       	ldi	r24, 0x25	; 37
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	25 e2       	ldi	r18, 0x25	; 37
 6b2:	30 e0       	ldi	r19, 0x00	; 0
 6b4:	f9 01       	movw	r30, r18
 6b6:	20 81       	ld	r18, Z
 6b8:	27 7f       	andi	r18, 0xF7	; 247
 6ba:	fc 01       	movw	r30, r24
 6bc:	20 83       	st	Z, r18
}
 6be:	00 00       	nop
 6c0:	df 91       	pop	r29
 6c2:	cf 91       	pop	r28
 6c4:	08 95       	ret

000006c6 <SSR3Con>:
void SSR3Con () {
 6c6:	cf 93       	push	r28
 6c8:	df 93       	push	r29
 6ca:	cd b7       	in	r28, 0x3d	; 61
 6cc:	de b7       	in	r29, 0x3e	; 62
    PORTB |= (1<<PB4);		//set PB0 HIGH
 6ce:	85 e2       	ldi	r24, 0x25	; 37
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	25 e2       	ldi	r18, 0x25	; 37
 6d4:	30 e0       	ldi	r19, 0x00	; 0
 6d6:	f9 01       	movw	r30, r18
 6d8:	20 81       	ld	r18, Z
 6da:	20 61       	ori	r18, 0x10	; 16
 6dc:	fc 01       	movw	r30, r24
 6de:	20 83       	st	Z, r18
}
 6e0:	00 00       	nop
 6e2:	df 91       	pop	r29
 6e4:	cf 91       	pop	r28
 6e6:	08 95       	ret

000006e8 <SSR3Coff>:
void SSR3Coff () {
 6e8:	cf 93       	push	r28
 6ea:	df 93       	push	r29
 6ec:	cd b7       	in	r28, 0x3d	; 61
 6ee:	de b7       	in	r29, 0x3e	; 62
    PORTB &= ~(1<<PB4);		//clear PB0 aka.  set PB0 LOW
 6f0:	85 e2       	ldi	r24, 0x25	; 37
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	25 e2       	ldi	r18, 0x25	; 37
 6f6:	30 e0       	ldi	r19, 0x00	; 0
 6f8:	f9 01       	movw	r30, r18
 6fa:	20 81       	ld	r18, Z
 6fc:	2f 7e       	andi	r18, 0xEF	; 239
 6fe:	fc 01       	movw	r30, r24
 700:	20 83       	st	Z, r18
}
 702:	00 00       	nop
 704:	df 91       	pop	r29
 706:	cf 91       	pop	r28
 708:	08 95       	ret

0000070a <Init_Int0>:
void Init_Int0() {
 70a:	cf 93       	push	r28
 70c:	df 93       	push	r29
 70e:	cd b7       	in	r28, 0x3d	; 61
 710:	de b7       	in	r29, 0x3e	; 62
    EIMSK |= (1<<0);
 712:	8d e3       	ldi	r24, 0x3D	; 61
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	2d e3       	ldi	r18, 0x3D	; 61
 718:	30 e0       	ldi	r19, 0x00	; 0
 71a:	f9 01       	movw	r30, r18
 71c:	20 81       	ld	r18, Z
 71e:	21 60       	ori	r18, 0x01	; 1
 720:	fc 01       	movw	r30, r24
 722:	20 83       	st	Z, r18
    EICRA |= (1<<ISC00);
 724:	89 e6       	ldi	r24, 0x69	; 105
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	29 e6       	ldi	r18, 0x69	; 105
 72a:	30 e0       	ldi	r19, 0x00	; 0
 72c:	f9 01       	movw	r30, r18
 72e:	20 81       	ld	r18, Z
 730:	21 60       	ori	r18, 0x01	; 1
 732:	fc 01       	movw	r30, r24
 734:	20 83       	st	Z, r18
}
 736:	00 00       	nop
 738:	df 91       	pop	r29
 73a:	cf 91       	pop	r28
 73c:	08 95       	ret

0000073e <Init_Timer_0>:
void Init_Timer_0() {
 73e:	cf 93       	push	r28
 740:	df 93       	push	r29
 742:	cd b7       	in	r28, 0x3d	; 61
 744:	de b7       	in	r29, 0x3e	; 62
    TCCR0A = (1<<WGM01);	//ctc mode
 746:	84 e4       	ldi	r24, 0x44	; 68
 748:	90 e0       	ldi	r25, 0x00	; 0
 74a:	22 e0       	ldi	r18, 0x02	; 2
 74c:	fc 01       	movw	r30, r24
 74e:	20 83       	st	Z, r18
    TCCR0B |= (1<<CS01);	//prescaler 8
 750:	85 e4       	ldi	r24, 0x45	; 69
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	25 e4       	ldi	r18, 0x45	; 69
 756:	30 e0       	ldi	r19, 0x00	; 0
 758:	f9 01       	movw	r30, r18
 75a:	20 81       	ld	r18, Z
 75c:	22 60       	ori	r18, 0x02	; 2
 75e:	fc 01       	movw	r30, r24
 760:	20 83       	st	Z, r18
    OCR0A = 0x63;			//fill OCR0A with 99 for 50us angle steps
 762:	87 e4       	ldi	r24, 0x47	; 71
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	23 e6       	ldi	r18, 0x63	; 99
 768:	fc 01       	movw	r30, r24
 76a:	20 83       	st	Z, r18
    TIMSK0 |= (1<<1);		//enable compare interrupt
 76c:	8e e6       	ldi	r24, 0x6E	; 110
 76e:	90 e0       	ldi	r25, 0x00	; 0
 770:	2e e6       	ldi	r18, 0x6E	; 110
 772:	30 e0       	ldi	r19, 0x00	; 0
 774:	f9 01       	movw	r30, r18
 776:	20 81       	ld	r18, Z
 778:	22 60       	ori	r18, 0x02	; 2
 77a:	fc 01       	movw	r30, r24
 77c:	20 83       	st	Z, r18
}
 77e:	00 00       	nop
 780:	df 91       	pop	r29
 782:	cf 91       	pop	r28
 784:	08 95       	ret

00000786 <USART_Init>:
void USART_Init() {
 786:	cf 93       	push	r28
 788:	df 93       	push	r29
 78a:	cd b7       	in	r28, 0x3d	; 61
 78c:	de b7       	in	r29, 0x3e	; 62
    /* Set baud rate */
    UBRR0 = 103;
 78e:	84 ec       	ldi	r24, 0xC4	; 196
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	27 e6       	ldi	r18, 0x67	; 103
 794:	30 e0       	ldi	r19, 0x00	; 0
 796:	fc 01       	movw	r30, r24
 798:	31 83       	std	Z+1, r19	; 0x01
 79a:	20 83       	st	Z, r18
    /* Enable receiver and transmitter */
    UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0)|(1<<TXCIE0);
 79c:	81 ec       	ldi	r24, 0xC1	; 193
 79e:	90 e0       	ldi	r25, 0x00	; 0
 7a0:	28 ed       	ldi	r18, 0xD8	; 216
 7a2:	fc 01       	movw	r30, r24
 7a4:	20 83       	st	Z, r18
    /* Set frame format: 8data, 1stop bit */
    UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
 7a6:	82 ec       	ldi	r24, 0xC2	; 194
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	26 e0       	ldi	r18, 0x06	; 6
 7ac:	fc 01       	movw	r30, r24
 7ae:	20 83       	st	Z, r18
    UCSR0C &= ~(1<<USBS0);
 7b0:	82 ec       	ldi	r24, 0xC2	; 194
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	22 ec       	ldi	r18, 0xC2	; 194
 7b6:	30 e0       	ldi	r19, 0x00	; 0
 7b8:	f9 01       	movw	r30, r18
 7ba:	20 81       	ld	r18, Z
 7bc:	27 7f       	andi	r18, 0xF7	; 247
 7be:	fc 01       	movw	r30, r24
 7c0:	20 83       	st	Z, r18
 7c2:	00 00       	nop
 7c4:	df 91       	pop	r29
 7c6:	cf 91       	pop	r28
 7c8:	08 95       	ret

000007ca <__divsf3>:
 7ca:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <__divsf3x>
 7ce:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_round>
 7d2:	0e 94 a4 04 	call	0x948	; 0x948 <__fp_pscB>
 7d6:	58 f0       	brcs	.+22     	; 0x7ee <__divsf3+0x24>
 7d8:	0e 94 9d 04 	call	0x93a	; 0x93a <__fp_pscA>
 7dc:	40 f0       	brcs	.+16     	; 0x7ee <__divsf3+0x24>
 7de:	29 f4       	brne	.+10     	; 0x7ea <__divsf3+0x20>
 7e0:	5f 3f       	cpi	r21, 0xFF	; 255
 7e2:	29 f0       	breq	.+10     	; 0x7ee <__divsf3+0x24>
 7e4:	0c 94 94 04 	jmp	0x928	; 0x928 <__fp_inf>
 7e8:	51 11       	cpse	r21, r1
 7ea:	0c 94 df 04 	jmp	0x9be	; 0x9be <__fp_szero>
 7ee:	0c 94 9a 04 	jmp	0x934	; 0x934 <__fp_nan>

000007f2 <__divsf3x>:
 7f2:	0e 94 bc 04 	call	0x978	; 0x978 <__fp_split3>
 7f6:	68 f3       	brcs	.-38     	; 0x7d2 <__divsf3+0x8>

000007f8 <__divsf3_pse>:
 7f8:	99 23       	and	r25, r25
 7fa:	b1 f3       	breq	.-20     	; 0x7e8 <__divsf3+0x1e>
 7fc:	55 23       	and	r21, r21
 7fe:	91 f3       	breq	.-28     	; 0x7e4 <__divsf3+0x1a>
 800:	95 1b       	sub	r25, r21
 802:	55 0b       	sbc	r21, r21
 804:	bb 27       	eor	r27, r27
 806:	aa 27       	eor	r26, r26
 808:	62 17       	cp	r22, r18
 80a:	73 07       	cpc	r23, r19
 80c:	84 07       	cpc	r24, r20
 80e:	38 f0       	brcs	.+14     	; 0x81e <__divsf3_pse+0x26>
 810:	9f 5f       	subi	r25, 0xFF	; 255
 812:	5f 4f       	sbci	r21, 0xFF	; 255
 814:	22 0f       	add	r18, r18
 816:	33 1f       	adc	r19, r19
 818:	44 1f       	adc	r20, r20
 81a:	aa 1f       	adc	r26, r26
 81c:	a9 f3       	breq	.-22     	; 0x808 <__divsf3_pse+0x10>
 81e:	35 d0       	rcall	.+106    	; 0x88a <__divsf3_pse+0x92>
 820:	0e 2e       	mov	r0, r30
 822:	3a f0       	brmi	.+14     	; 0x832 <__divsf3_pse+0x3a>
 824:	e0 e8       	ldi	r30, 0x80	; 128
 826:	32 d0       	rcall	.+100    	; 0x88c <__divsf3_pse+0x94>
 828:	91 50       	subi	r25, 0x01	; 1
 82a:	50 40       	sbci	r21, 0x00	; 0
 82c:	e6 95       	lsr	r30
 82e:	00 1c       	adc	r0, r0
 830:	ca f7       	brpl	.-14     	; 0x824 <__divsf3_pse+0x2c>
 832:	2b d0       	rcall	.+86     	; 0x88a <__divsf3_pse+0x92>
 834:	fe 2f       	mov	r31, r30
 836:	29 d0       	rcall	.+82     	; 0x88a <__divsf3_pse+0x92>
 838:	66 0f       	add	r22, r22
 83a:	77 1f       	adc	r23, r23
 83c:	88 1f       	adc	r24, r24
 83e:	bb 1f       	adc	r27, r27
 840:	26 17       	cp	r18, r22
 842:	37 07       	cpc	r19, r23
 844:	48 07       	cpc	r20, r24
 846:	ab 07       	cpc	r26, r27
 848:	b0 e8       	ldi	r27, 0x80	; 128
 84a:	09 f0       	breq	.+2      	; 0x84e <__divsf3_pse+0x56>
 84c:	bb 0b       	sbc	r27, r27
 84e:	80 2d       	mov	r24, r0
 850:	bf 01       	movw	r22, r30
 852:	ff 27       	eor	r31, r31
 854:	93 58       	subi	r25, 0x83	; 131
 856:	5f 4f       	sbci	r21, 0xFF	; 255
 858:	3a f0       	brmi	.+14     	; 0x868 <__divsf3_pse+0x70>
 85a:	9e 3f       	cpi	r25, 0xFE	; 254
 85c:	51 05       	cpc	r21, r1
 85e:	78 f0       	brcs	.+30     	; 0x87e <__divsf3_pse+0x86>
 860:	0c 94 94 04 	jmp	0x928	; 0x928 <__fp_inf>
 864:	0c 94 df 04 	jmp	0x9be	; 0x9be <__fp_szero>
 868:	5f 3f       	cpi	r21, 0xFF	; 255
 86a:	e4 f3       	brlt	.-8      	; 0x864 <__divsf3_pse+0x6c>
 86c:	98 3e       	cpi	r25, 0xE8	; 232
 86e:	d4 f3       	brlt	.-12     	; 0x864 <__divsf3_pse+0x6c>
 870:	86 95       	lsr	r24
 872:	77 95       	ror	r23
 874:	67 95       	ror	r22
 876:	b7 95       	ror	r27
 878:	f7 95       	ror	r31
 87a:	9f 5f       	subi	r25, 0xFF	; 255
 87c:	c9 f7       	brne	.-14     	; 0x870 <__divsf3_pse+0x78>
 87e:	88 0f       	add	r24, r24
 880:	91 1d       	adc	r25, r1
 882:	96 95       	lsr	r25
 884:	87 95       	ror	r24
 886:	97 f9       	bld	r25, 7
 888:	08 95       	ret
 88a:	e1 e0       	ldi	r30, 0x01	; 1
 88c:	66 0f       	add	r22, r22
 88e:	77 1f       	adc	r23, r23
 890:	88 1f       	adc	r24, r24
 892:	bb 1f       	adc	r27, r27
 894:	62 17       	cp	r22, r18
 896:	73 07       	cpc	r23, r19
 898:	84 07       	cpc	r24, r20
 89a:	ba 07       	cpc	r27, r26
 89c:	20 f0       	brcs	.+8      	; 0x8a6 <__divsf3_pse+0xae>
 89e:	62 1b       	sub	r22, r18
 8a0:	73 0b       	sbc	r23, r19
 8a2:	84 0b       	sbc	r24, r20
 8a4:	ba 0b       	sbc	r27, r26
 8a6:	ee 1f       	adc	r30, r30
 8a8:	88 f7       	brcc	.-30     	; 0x88c <__divsf3_pse+0x94>
 8aa:	e0 95       	com	r30
 8ac:	08 95       	ret

000008ae <__floatunsisf>:
 8ae:	e8 94       	clt
 8b0:	09 c0       	rjmp	.+18     	; 0x8c4 <__floatsisf+0x12>

000008b2 <__floatsisf>:
 8b2:	97 fb       	bst	r25, 7
 8b4:	3e f4       	brtc	.+14     	; 0x8c4 <__floatsisf+0x12>
 8b6:	90 95       	com	r25
 8b8:	80 95       	com	r24
 8ba:	70 95       	com	r23
 8bc:	61 95       	neg	r22
 8be:	7f 4f       	sbci	r23, 0xFF	; 255
 8c0:	8f 4f       	sbci	r24, 0xFF	; 255
 8c2:	9f 4f       	sbci	r25, 0xFF	; 255
 8c4:	99 23       	and	r25, r25
 8c6:	a9 f0       	breq	.+42     	; 0x8f2 <__floatsisf+0x40>
 8c8:	f9 2f       	mov	r31, r25
 8ca:	96 e9       	ldi	r25, 0x96	; 150
 8cc:	bb 27       	eor	r27, r27
 8ce:	93 95       	inc	r25
 8d0:	f6 95       	lsr	r31
 8d2:	87 95       	ror	r24
 8d4:	77 95       	ror	r23
 8d6:	67 95       	ror	r22
 8d8:	b7 95       	ror	r27
 8da:	f1 11       	cpse	r31, r1
 8dc:	f8 cf       	rjmp	.-16     	; 0x8ce <__floatsisf+0x1c>
 8de:	fa f4       	brpl	.+62     	; 0x91e <__floatsisf+0x6c>
 8e0:	bb 0f       	add	r27, r27
 8e2:	11 f4       	brne	.+4      	; 0x8e8 <__floatsisf+0x36>
 8e4:	60 ff       	sbrs	r22, 0
 8e6:	1b c0       	rjmp	.+54     	; 0x91e <__floatsisf+0x6c>
 8e8:	6f 5f       	subi	r22, 0xFF	; 255
 8ea:	7f 4f       	sbci	r23, 0xFF	; 255
 8ec:	8f 4f       	sbci	r24, 0xFF	; 255
 8ee:	9f 4f       	sbci	r25, 0xFF	; 255
 8f0:	16 c0       	rjmp	.+44     	; 0x91e <__floatsisf+0x6c>
 8f2:	88 23       	and	r24, r24
 8f4:	11 f0       	breq	.+4      	; 0x8fa <__floatsisf+0x48>
 8f6:	96 e9       	ldi	r25, 0x96	; 150
 8f8:	11 c0       	rjmp	.+34     	; 0x91c <__floatsisf+0x6a>
 8fa:	77 23       	and	r23, r23
 8fc:	21 f0       	breq	.+8      	; 0x906 <__floatsisf+0x54>
 8fe:	9e e8       	ldi	r25, 0x8E	; 142
 900:	87 2f       	mov	r24, r23
 902:	76 2f       	mov	r23, r22
 904:	05 c0       	rjmp	.+10     	; 0x910 <__floatsisf+0x5e>
 906:	66 23       	and	r22, r22
 908:	71 f0       	breq	.+28     	; 0x926 <__floatsisf+0x74>
 90a:	96 e8       	ldi	r25, 0x86	; 134
 90c:	86 2f       	mov	r24, r22
 90e:	70 e0       	ldi	r23, 0x00	; 0
 910:	60 e0       	ldi	r22, 0x00	; 0
 912:	2a f0       	brmi	.+10     	; 0x91e <__floatsisf+0x6c>
 914:	9a 95       	dec	r25
 916:	66 0f       	add	r22, r22
 918:	77 1f       	adc	r23, r23
 91a:	88 1f       	adc	r24, r24
 91c:	da f7       	brpl	.-10     	; 0x914 <__floatsisf+0x62>
 91e:	88 0f       	add	r24, r24
 920:	96 95       	lsr	r25
 922:	87 95       	ror	r24
 924:	97 f9       	bld	r25, 7
 926:	08 95       	ret

00000928 <__fp_inf>:
 928:	97 f9       	bld	r25, 7
 92a:	9f 67       	ori	r25, 0x7F	; 127
 92c:	80 e8       	ldi	r24, 0x80	; 128
 92e:	70 e0       	ldi	r23, 0x00	; 0
 930:	60 e0       	ldi	r22, 0x00	; 0
 932:	08 95       	ret

00000934 <__fp_nan>:
 934:	9f ef       	ldi	r25, 0xFF	; 255
 936:	80 ec       	ldi	r24, 0xC0	; 192
 938:	08 95       	ret

0000093a <__fp_pscA>:
 93a:	00 24       	eor	r0, r0
 93c:	0a 94       	dec	r0
 93e:	16 16       	cp	r1, r22
 940:	17 06       	cpc	r1, r23
 942:	18 06       	cpc	r1, r24
 944:	09 06       	cpc	r0, r25
 946:	08 95       	ret

00000948 <__fp_pscB>:
 948:	00 24       	eor	r0, r0
 94a:	0a 94       	dec	r0
 94c:	12 16       	cp	r1, r18
 94e:	13 06       	cpc	r1, r19
 950:	14 06       	cpc	r1, r20
 952:	05 06       	cpc	r0, r21
 954:	08 95       	ret

00000956 <__fp_round>:
 956:	09 2e       	mov	r0, r25
 958:	03 94       	inc	r0
 95a:	00 0c       	add	r0, r0
 95c:	11 f4       	brne	.+4      	; 0x962 <__fp_round+0xc>
 95e:	88 23       	and	r24, r24
 960:	52 f0       	brmi	.+20     	; 0x976 <__fp_round+0x20>
 962:	bb 0f       	add	r27, r27
 964:	40 f4       	brcc	.+16     	; 0x976 <__fp_round+0x20>
 966:	bf 2b       	or	r27, r31
 968:	11 f4       	brne	.+4      	; 0x96e <__fp_round+0x18>
 96a:	60 ff       	sbrs	r22, 0
 96c:	04 c0       	rjmp	.+8      	; 0x976 <__fp_round+0x20>
 96e:	6f 5f       	subi	r22, 0xFF	; 255
 970:	7f 4f       	sbci	r23, 0xFF	; 255
 972:	8f 4f       	sbci	r24, 0xFF	; 255
 974:	9f 4f       	sbci	r25, 0xFF	; 255
 976:	08 95       	ret

00000978 <__fp_split3>:
 978:	57 fd       	sbrc	r21, 7
 97a:	90 58       	subi	r25, 0x80	; 128
 97c:	44 0f       	add	r20, r20
 97e:	55 1f       	adc	r21, r21
 980:	59 f0       	breq	.+22     	; 0x998 <__fp_splitA+0x10>
 982:	5f 3f       	cpi	r21, 0xFF	; 255
 984:	71 f0       	breq	.+28     	; 0x9a2 <__fp_splitA+0x1a>
 986:	47 95       	ror	r20

00000988 <__fp_splitA>:
 988:	88 0f       	add	r24, r24
 98a:	97 fb       	bst	r25, 7
 98c:	99 1f       	adc	r25, r25
 98e:	61 f0       	breq	.+24     	; 0x9a8 <__fp_splitA+0x20>
 990:	9f 3f       	cpi	r25, 0xFF	; 255
 992:	79 f0       	breq	.+30     	; 0x9b2 <__fp_splitA+0x2a>
 994:	87 95       	ror	r24
 996:	08 95       	ret
 998:	12 16       	cp	r1, r18
 99a:	13 06       	cpc	r1, r19
 99c:	14 06       	cpc	r1, r20
 99e:	55 1f       	adc	r21, r21
 9a0:	f2 cf       	rjmp	.-28     	; 0x986 <__fp_split3+0xe>
 9a2:	46 95       	lsr	r20
 9a4:	f1 df       	rcall	.-30     	; 0x988 <__fp_splitA>
 9a6:	08 c0       	rjmp	.+16     	; 0x9b8 <__fp_splitA+0x30>
 9a8:	16 16       	cp	r1, r22
 9aa:	17 06       	cpc	r1, r23
 9ac:	18 06       	cpc	r1, r24
 9ae:	99 1f       	adc	r25, r25
 9b0:	f1 cf       	rjmp	.-30     	; 0x994 <__fp_splitA+0xc>
 9b2:	86 95       	lsr	r24
 9b4:	71 05       	cpc	r23, r1
 9b6:	61 05       	cpc	r22, r1
 9b8:	08 94       	sec
 9ba:	08 95       	ret

000009bc <__fp_zero>:
 9bc:	e8 94       	clt

000009be <__fp_szero>:
 9be:	bb 27       	eor	r27, r27
 9c0:	66 27       	eor	r22, r22
 9c2:	77 27       	eor	r23, r23
 9c4:	cb 01       	movw	r24, r22
 9c6:	97 f9       	bld	r25, 7
 9c8:	08 95       	ret

000009ca <__gesf2>:
 9ca:	0e 94 57 05 	call	0xaae	; 0xaae <__fp_cmp>
 9ce:	08 f4       	brcc	.+2      	; 0x9d2 <__gesf2+0x8>
 9d0:	8f ef       	ldi	r24, 0xFF	; 255
 9d2:	08 95       	ret

000009d4 <__mulsf3>:
 9d4:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__mulsf3x>
 9d8:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_round>
 9dc:	0e 94 9d 04 	call	0x93a	; 0x93a <__fp_pscA>
 9e0:	38 f0       	brcs	.+14     	; 0x9f0 <__mulsf3+0x1c>
 9e2:	0e 94 a4 04 	call	0x948	; 0x948 <__fp_pscB>
 9e6:	20 f0       	brcs	.+8      	; 0x9f0 <__mulsf3+0x1c>
 9e8:	95 23       	and	r25, r21
 9ea:	11 f0       	breq	.+4      	; 0x9f0 <__mulsf3+0x1c>
 9ec:	0c 94 94 04 	jmp	0x928	; 0x928 <__fp_inf>
 9f0:	0c 94 9a 04 	jmp	0x934	; 0x934 <__fp_nan>
 9f4:	11 24       	eor	r1, r1
 9f6:	0c 94 df 04 	jmp	0x9be	; 0x9be <__fp_szero>

000009fa <__mulsf3x>:
 9fa:	0e 94 bc 04 	call	0x978	; 0x978 <__fp_split3>
 9fe:	70 f3       	brcs	.-36     	; 0x9dc <__mulsf3+0x8>

00000a00 <__mulsf3_pse>:
 a00:	95 9f       	mul	r25, r21
 a02:	c1 f3       	breq	.-16     	; 0x9f4 <__mulsf3+0x20>
 a04:	95 0f       	add	r25, r21
 a06:	50 e0       	ldi	r21, 0x00	; 0
 a08:	55 1f       	adc	r21, r21
 a0a:	62 9f       	mul	r22, r18
 a0c:	f0 01       	movw	r30, r0
 a0e:	72 9f       	mul	r23, r18
 a10:	bb 27       	eor	r27, r27
 a12:	f0 0d       	add	r31, r0
 a14:	b1 1d       	adc	r27, r1
 a16:	63 9f       	mul	r22, r19
 a18:	aa 27       	eor	r26, r26
 a1a:	f0 0d       	add	r31, r0
 a1c:	b1 1d       	adc	r27, r1
 a1e:	aa 1f       	adc	r26, r26
 a20:	64 9f       	mul	r22, r20
 a22:	66 27       	eor	r22, r22
 a24:	b0 0d       	add	r27, r0
 a26:	a1 1d       	adc	r26, r1
 a28:	66 1f       	adc	r22, r22
 a2a:	82 9f       	mul	r24, r18
 a2c:	22 27       	eor	r18, r18
 a2e:	b0 0d       	add	r27, r0
 a30:	a1 1d       	adc	r26, r1
 a32:	62 1f       	adc	r22, r18
 a34:	73 9f       	mul	r23, r19
 a36:	b0 0d       	add	r27, r0
 a38:	a1 1d       	adc	r26, r1
 a3a:	62 1f       	adc	r22, r18
 a3c:	83 9f       	mul	r24, r19
 a3e:	a0 0d       	add	r26, r0
 a40:	61 1d       	adc	r22, r1
 a42:	22 1f       	adc	r18, r18
 a44:	74 9f       	mul	r23, r20
 a46:	33 27       	eor	r19, r19
 a48:	a0 0d       	add	r26, r0
 a4a:	61 1d       	adc	r22, r1
 a4c:	23 1f       	adc	r18, r19
 a4e:	84 9f       	mul	r24, r20
 a50:	60 0d       	add	r22, r0
 a52:	21 1d       	adc	r18, r1
 a54:	82 2f       	mov	r24, r18
 a56:	76 2f       	mov	r23, r22
 a58:	6a 2f       	mov	r22, r26
 a5a:	11 24       	eor	r1, r1
 a5c:	9f 57       	subi	r25, 0x7F	; 127
 a5e:	50 40       	sbci	r21, 0x00	; 0
 a60:	9a f0       	brmi	.+38     	; 0xa88 <__mulsf3_pse+0x88>
 a62:	f1 f0       	breq	.+60     	; 0xaa0 <__mulsf3_pse+0xa0>
 a64:	88 23       	and	r24, r24
 a66:	4a f0       	brmi	.+18     	; 0xa7a <__mulsf3_pse+0x7a>
 a68:	ee 0f       	add	r30, r30
 a6a:	ff 1f       	adc	r31, r31
 a6c:	bb 1f       	adc	r27, r27
 a6e:	66 1f       	adc	r22, r22
 a70:	77 1f       	adc	r23, r23
 a72:	88 1f       	adc	r24, r24
 a74:	91 50       	subi	r25, 0x01	; 1
 a76:	50 40       	sbci	r21, 0x00	; 0
 a78:	a9 f7       	brne	.-22     	; 0xa64 <__mulsf3_pse+0x64>
 a7a:	9e 3f       	cpi	r25, 0xFE	; 254
 a7c:	51 05       	cpc	r21, r1
 a7e:	80 f0       	brcs	.+32     	; 0xaa0 <__mulsf3_pse+0xa0>
 a80:	0c 94 94 04 	jmp	0x928	; 0x928 <__fp_inf>
 a84:	0c 94 df 04 	jmp	0x9be	; 0x9be <__fp_szero>
 a88:	5f 3f       	cpi	r21, 0xFF	; 255
 a8a:	e4 f3       	brlt	.-8      	; 0xa84 <__mulsf3_pse+0x84>
 a8c:	98 3e       	cpi	r25, 0xE8	; 232
 a8e:	d4 f3       	brlt	.-12     	; 0xa84 <__mulsf3_pse+0x84>
 a90:	86 95       	lsr	r24
 a92:	77 95       	ror	r23
 a94:	67 95       	ror	r22
 a96:	b7 95       	ror	r27
 a98:	f7 95       	ror	r31
 a9a:	e7 95       	ror	r30
 a9c:	9f 5f       	subi	r25, 0xFF	; 255
 a9e:	c1 f7       	brne	.-16     	; 0xa90 <__mulsf3_pse+0x90>
 aa0:	fe 2b       	or	r31, r30
 aa2:	88 0f       	add	r24, r24
 aa4:	91 1d       	adc	r25, r1
 aa6:	96 95       	lsr	r25
 aa8:	87 95       	ror	r24
 aaa:	97 f9       	bld	r25, 7
 aac:	08 95       	ret

00000aae <__fp_cmp>:
 aae:	99 0f       	add	r25, r25
 ab0:	00 08       	sbc	r0, r0
 ab2:	55 0f       	add	r21, r21
 ab4:	aa 0b       	sbc	r26, r26
 ab6:	e0 e8       	ldi	r30, 0x80	; 128
 ab8:	fe ef       	ldi	r31, 0xFE	; 254
 aba:	16 16       	cp	r1, r22
 abc:	17 06       	cpc	r1, r23
 abe:	e8 07       	cpc	r30, r24
 ac0:	f9 07       	cpc	r31, r25
 ac2:	c0 f0       	brcs	.+48     	; 0xaf4 <__fp_cmp+0x46>
 ac4:	12 16       	cp	r1, r18
 ac6:	13 06       	cpc	r1, r19
 ac8:	e4 07       	cpc	r30, r20
 aca:	f5 07       	cpc	r31, r21
 acc:	98 f0       	brcs	.+38     	; 0xaf4 <__fp_cmp+0x46>
 ace:	62 1b       	sub	r22, r18
 ad0:	73 0b       	sbc	r23, r19
 ad2:	84 0b       	sbc	r24, r20
 ad4:	95 0b       	sbc	r25, r21
 ad6:	39 f4       	brne	.+14     	; 0xae6 <__fp_cmp+0x38>
 ad8:	0a 26       	eor	r0, r26
 ada:	61 f0       	breq	.+24     	; 0xaf4 <__fp_cmp+0x46>
 adc:	23 2b       	or	r18, r19
 ade:	24 2b       	or	r18, r20
 ae0:	25 2b       	or	r18, r21
 ae2:	21 f4       	brne	.+8      	; 0xaec <__fp_cmp+0x3e>
 ae4:	08 95       	ret
 ae6:	0a 26       	eor	r0, r26
 ae8:	09 f4       	brne	.+2      	; 0xaec <__fp_cmp+0x3e>
 aea:	a1 40       	sbci	r26, 0x01	; 1
 aec:	a6 95       	lsr	r26
 aee:	8f ef       	ldi	r24, 0xFF	; 255
 af0:	81 1d       	adc	r24, r1
 af2:	81 1d       	adc	r24, r1
 af4:	08 95       	ret

00000af6 <__tablejump2__>:
 af6:	ee 0f       	add	r30, r30
 af8:	ff 1f       	adc	r31, r31
 afa:	05 90       	lpm	r0, Z+
 afc:	f4 91       	lpm	r31, Z
 afe:	e0 2d       	mov	r30, r0
 b00:	09 94       	ijmp

00000b02 <_exit>:
 b02:	f8 94       	cli

00000b04 <__stop_program>:
 b04:	ff cf       	rjmp	.-2      	; 0xb04 <__stop_program>
