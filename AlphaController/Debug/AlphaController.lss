
AlphaController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000004c6  00800100  00000810  000008a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000810  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  008005c6  008005c6  00000d6a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d6a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000ddc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000101f  00000000  00000000  00000eac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000095d  00000000  00000000  00001ecb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000634  00000000  00000000  00002828  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000244  00000000  00000000  00002e5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f4  00000000  00000000  000030a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004e7  00000000  00000000  00003694  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00003b7b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 45 00 	jmp	0x8a	; 0x8a <__ctors_end>
   4:	0c 94 34 01 	jmp	0x268	; 0x268 <__vector_1>
   8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
   c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  10:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  14:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  18:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  1c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  20:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  24:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  28:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  2c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  30:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  34:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  38:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  3c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  40:	0c 94 68 01 	jmp	0x2d0	; 0x2d0 <__vector_16>
  44:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  48:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  4c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  50:	0c 94 7f 01 	jmp	0x2fe	; 0x2fe <__vector_20>
  54:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  58:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  5c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  60:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  64:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  68:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  6c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  70:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  74:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  78:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  7c:	de 00       	.word	0x00de	; ????
  7e:	d6 00       	.word	0x00d6	; ????
  80:	17 01       	movw	r2, r14
  82:	fe 00       	.word	0x00fe	; ????
  84:	a0 00       	.word	0x00a0	; ????
  86:	e0 00       	.word	0x00e0	; ????
  88:	d8 00       	.word	0x00d8	; ????

0000008a <__ctors_end>:
  8a:	11 24       	eor	r1, r1
  8c:	1f be       	out	0x3f, r1	; 63
  8e:	cf ef       	ldi	r28, 0xFF	; 255
  90:	d0 e1       	ldi	r29, 0x10	; 16
  92:	de bf       	out	0x3e, r29	; 62
  94:	cd bf       	out	0x3d, r28	; 61

00000096 <__do_copy_data>:
  96:	15 e0       	ldi	r17, 0x05	; 5
  98:	a0 e0       	ldi	r26, 0x00	; 0
  9a:	b1 e0       	ldi	r27, 0x01	; 1
  9c:	e0 e1       	ldi	r30, 0x10	; 16
  9e:	f8 e0       	ldi	r31, 0x08	; 8
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <__do_copy_data+0x10>
  a2:	05 90       	lpm	r0, Z+
  a4:	0d 92       	st	X+, r0
  a6:	a6 3c       	cpi	r26, 0xC6	; 198
  a8:	b1 07       	cpc	r27, r17
  aa:	d9 f7       	brne	.-10     	; 0xa2 <__do_copy_data+0xc>

000000ac <__do_clear_bss>:
  ac:	25 e0       	ldi	r18, 0x05	; 5
  ae:	a6 ec       	ldi	r26, 0xC6	; 198
  b0:	b5 e0       	ldi	r27, 0x05	; 5
  b2:	01 c0       	rjmp	.+2      	; 0xb6 <.do_clear_bss_start>

000000b4 <.do_clear_bss_loop>:
  b4:	1d 92       	st	X+, r1

000000b6 <.do_clear_bss_start>:
  b6:	a8 3d       	cpi	r26, 0xD8	; 216
  b8:	b2 07       	cpc	r27, r18
  ba:	e1 f7       	brne	.-8      	; 0xb4 <.do_clear_bss_loop>
  bc:	0e 94 64 00 	call	0xc8	; 0xc8 <main>
  c0:	0c 94 06 04 	jmp	0x80c	; 0x80c <_exit>

000000c4 <__bad_interrupt>:
  c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c8 <main>:
	}

	// Noch ein '\0' anhängen um einen Standard
	// C-String daraus zu machen
	*Buffer = '\0';
}
  c8:	78 94       	sei
  ca:	e8 9a       	sbi	0x1d, 0	; 29
  cc:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
  d0:	81 60       	ori	r24, 0x01	; 1
  d2:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	90 93 cd 05 	sts	0x05CD, r25	; 0x8005cd <intCounter+0x1>
  de:	80 93 cc 05 	sts	0x05CC, r24	; 0x8005cc <intCounter>
  e2:	10 92 cf 05 	sts	0x05CF, r1	; 0x8005cf <burstCounter+0x1>
  e6:	10 92 ce 05 	sts	0x05CE, r1	; 0x8005ce <burstCounter>
  ea:	82 e0       	ldi	r24, 0x02	; 2
  ec:	84 bd       	out	0x24, r24	; 36
  ee:	85 b5       	in	r24, 0x25	; 37
  f0:	82 60       	ori	r24, 0x02	; 2
  f2:	85 bd       	out	0x25, r24	; 37
  f4:	83 e6       	ldi	r24, 0x63	; 99
  f6:	87 bd       	out	0x27, r24	; 39
  f8:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
  fc:	82 60       	ori	r24, 0x02	; 2
  fe:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
 102:	87 e6       	ldi	r24, 0x67	; 103
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 10a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 10e:	88 ed       	ldi	r24, 0xD8	; 216
 110:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 114:	86 e0       	ldi	r24, 0x06	; 6
 116:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 11a:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 11e:	87 7f       	andi	r24, 0xF7	; 247
 120:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 124:	8f ef       	ldi	r24, 0xFF	; 255
 126:	84 b9       	out	0x04, r24	; 4
 128:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
 12c:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
 130:	31 97       	sbiw	r30, 0x01	; 1
 132:	e7 30       	cpi	r30, 0x07	; 7
 134:	f1 05       	cpc	r31, r1
 136:	e8 f7       	brcc	.-6      	; 0x132 <main+0x6a>
 138:	e2 5c       	subi	r30, 0xC2	; 194
 13a:	ff 4f       	sbci	r31, 0xFF	; 255
 13c:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__tablejump2__>
 140:	60 91 ca 05 	lds	r22, 0x05CA	; 0x8005ca <timerCounter>
 144:	70 91 cb 05 	lds	r23, 0x05CB	; 0x8005cb <timerCounter+0x1>
 148:	6f 5f       	subi	r22, 0xFF	; 255
 14a:	7f 4f       	sbci	r23, 0xFF	; 255
 14c:	07 2e       	mov	r0, r23
 14e:	00 0c       	add	r0, r0
 150:	88 0b       	sbc	r24, r24
 152:	99 0b       	sbc	r25, r25
 154:	0e 94 8c 02 	call	0x518	; 0x518 <__floatsisf>
 158:	6b 01       	movw	r12, r22
 15a:	7c 01       	movw	r14, r24
 15c:	c0 91 d6 05 	lds	r28, 0x05D6	; 0x8005d6 <ctrlVal1>
 160:	d0 91 d7 05 	lds	r29, 0x05D7	; 0x8005d7 <ctrlVal1+0x1>
 164:	cc 0f       	add	r28, r28
 166:	dd 1f       	adc	r29, r29
 168:	cc 0f       	add	r28, r28
 16a:	dd 1f       	adc	r29, r29
 16c:	c8 56       	subi	r28, 0x68	; 104
 16e:	dd 4f       	sbci	r29, 0xFD	; 253
 170:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <netzT>
 174:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <netzT+0x1>
 178:	07 2e       	mov	r0, r23
 17a:	00 0c       	add	r0, r0
 17c:	88 0b       	sbc	r24, r24
 17e:	99 0b       	sbc	r25, r25
 180:	0e 94 8c 02 	call	0x518	; 0x518 <__floatsisf>
 184:	28 81       	ld	r18, Y
 186:	39 81       	ldd	r19, Y+1	; 0x01
 188:	4a 81       	ldd	r20, Y+2	; 0x02
 18a:	5b 81       	ldd	r21, Y+3	; 0x03
 18c:	0e 94 1d 03 	call	0x63a	; 0x63a <__mulsf3>
 190:	20 e0       	ldi	r18, 0x00	; 0
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	48 e4       	ldi	r20, 0x48	; 72
 196:	52 e4       	ldi	r21, 0x42	; 66
 198:	0e 94 18 02 	call	0x430	; 0x430 <__divsf3>
 19c:	9b 01       	movw	r18, r22
 19e:	ac 01       	movw	r20, r24
 1a0:	c7 01       	movw	r24, r14
 1a2:	b6 01       	movw	r22, r12
 1a4:	0e 94 18 03 	call	0x630	; 0x630 <__gesf2>
 1a8:	18 16       	cp	r1, r24
 1aa:	44 f4       	brge	.+16     	; 0x1bc <main+0xf4>
 1ac:	28 9a       	sbi	0x05, 0	; 5
 1ae:	bc cf       	rjmp	.-136    	; 0x128 <main+0x60>
 1b0:	80 91 c8 05 	lds	r24, 0x05C8	; 0x8005c8 <pinStatus>
 1b4:	90 91 c9 05 	lds	r25, 0x05C9	; 0x8005c9 <pinStatus+0x1>
 1b8:	89 2b       	or	r24, r25
 1ba:	c1 f7       	brne	.-16     	; 0x1ac <main+0xe4>
 1bc:	28 98       	cbi	0x05, 0	; 5
 1be:	b4 cf       	rjmp	.-152    	; 0x128 <main+0x60>
 1c0:	80 91 d6 05 	lds	r24, 0x05D6	; 0x8005d6 <ctrlVal1>
 1c4:	90 91 d7 05 	lds	r25, 0x05D7	; 0x8005d7 <ctrlVal1+0x1>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	20 91 cc 05 	lds	r18, 0x05CC	; 0x8005cc <intCounter>
 1d0:	30 91 cd 05 	lds	r19, 0x05CD	; 0x8005cd <intCounter+0x1>
 1d4:	28 17       	cp	r18, r24
 1d6:	39 07       	cpc	r19, r25
 1d8:	0c f4       	brge	.+2      	; 0x1dc <main+0x114>
 1da:	44 c0       	rjmp	.+136    	; 0x264 <main+0x19c>
 1dc:	28 98       	cbi	0x05, 0	; 5
 1de:	80 91 d4 05 	lds	r24, 0x05D4	; 0x8005d4 <ctrlVal2>
 1e2:	90 91 d5 05 	lds	r25, 0x05D5	; 0x8005d5 <ctrlVal2+0x1>
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	20 91 cc 05 	lds	r18, 0x05CC	; 0x8005cc <intCounter>
 1ee:	30 91 cd 05 	lds	r19, 0x05CD	; 0x8005cd <intCounter+0x1>
 1f2:	28 17       	cp	r18, r24
 1f4:	39 07       	cpc	r19, r25
 1f6:	a4 f1       	brlt	.+104    	; 0x260 <main+0x198>
 1f8:	29 98       	cbi	0x05, 1	; 5
 1fa:	96 cf       	rjmp	.-212    	; 0x128 <main+0x60>
 1fc:	60 91 ca 05 	lds	r22, 0x05CA	; 0x8005ca <timerCounter>
 200:	70 91 cb 05 	lds	r23, 0x05CB	; 0x8005cb <timerCounter+0x1>
 204:	6f 5f       	subi	r22, 0xFF	; 255
 206:	7f 4f       	sbci	r23, 0xFF	; 255
 208:	07 2e       	mov	r0, r23
 20a:	00 0c       	add	r0, r0
 20c:	88 0b       	sbc	r24, r24
 20e:	99 0b       	sbc	r25, r25
 210:	0e 94 8c 02 	call	0x518	; 0x518 <__floatsisf>
 214:	6b 01       	movw	r12, r22
 216:	7c 01       	movw	r14, r24
 218:	c0 91 d6 05 	lds	r28, 0x05D6	; 0x8005d6 <ctrlVal1>
 21c:	d0 91 d7 05 	lds	r29, 0x05D7	; 0x8005d7 <ctrlVal1+0x1>
 220:	cc 0f       	add	r28, r28
 222:	dd 1f       	adc	r29, r29
 224:	cc 0f       	add	r28, r28
 226:	dd 1f       	adc	r29, r29
 228:	cc 5f       	subi	r28, 0xFC	; 252
 22a:	de 4f       	sbci	r29, 0xFE	; 254
 22c:	a1 cf       	rjmp	.-190    	; 0x170 <main+0xa8>
 22e:	60 91 ca 05 	lds	r22, 0x05CA	; 0x8005ca <timerCounter>
 232:	70 91 cb 05 	lds	r23, 0x05CB	; 0x8005cb <timerCounter+0x1>
 236:	6f 5f       	subi	r22, 0xFF	; 255
 238:	7f 4f       	sbci	r23, 0xFF	; 255
 23a:	07 2e       	mov	r0, r23
 23c:	00 0c       	add	r0, r0
 23e:	88 0b       	sbc	r24, r24
 240:	99 0b       	sbc	r25, r25
 242:	0e 94 8c 02 	call	0x518	; 0x518 <__floatsisf>
 246:	6b 01       	movw	r12, r22
 248:	7c 01       	movw	r14, r24
 24a:	c0 91 d6 05 	lds	r28, 0x05D6	; 0x8005d6 <ctrlVal1>
 24e:	d0 91 d7 05 	lds	r29, 0x05D7	; 0x8005d7 <ctrlVal1+0x1>
 252:	cc 0f       	add	r28, r28
 254:	dd 1f       	adc	r29, r29
 256:	cc 0f       	add	r28, r28
 258:	dd 1f       	adc	r29, r29
 25a:	c4 5d       	subi	r28, 0xD4	; 212
 25c:	db 4f       	sbci	r29, 0xFB	; 251
 25e:	88 cf       	rjmp	.-240    	; 0x170 <main+0xa8>
 260:	29 9a       	sbi	0x05, 1	; 5
 262:	62 cf       	rjmp	.-316    	; 0x128 <main+0x60>
 264:	28 9a       	sbi	0x05, 0	; 5
 266:	bb cf       	rjmp	.-138    	; 0x1de <main+0x116>

00000268 <__vector_1>:
 268:	1f 92       	push	r1
 26a:	0f 92       	push	r0
 26c:	0f b6       	in	r0, 0x3f	; 63
 26e:	0f 92       	push	r0
 270:	11 24       	eor	r1, r1
 272:	8f 93       	push	r24
 274:	9f 93       	push	r25
 276:	ef 93       	push	r30
 278:	ff 93       	push	r31
 27a:	10 92 cb 05 	sts	0x05CB, r1	; 0x8005cb <timerCounter+0x1>
 27e:	10 92 ca 05 	sts	0x05CA, r1	; 0x8005ca <timerCounter>
 282:	16 bc       	out	0x26, r1	; 38
 284:	80 91 cc 05 	lds	r24, 0x05CC	; 0x8005cc <intCounter>
 288:	90 91 cd 05 	lds	r25, 0x05CD	; 0x8005cd <intCounter+0x1>
 28c:	01 96       	adiw	r24, 0x01	; 1
 28e:	87 3c       	cpi	r24, 0xC7	; 199
 290:	91 05       	cpc	r25, r1
 292:	69 f0       	breq	.+26     	; 0x2ae <__vector_1+0x46>
 294:	90 93 cd 05 	sts	0x05CD, r25	; 0x8005cd <intCounter+0x1>
 298:	80 93 cc 05 	sts	0x05CC, r24	; 0x8005cc <intCounter>
 29c:	ff 91       	pop	r31
 29e:	ef 91       	pop	r30
 2a0:	9f 91       	pop	r25
 2a2:	8f 91       	pop	r24
 2a4:	0f 90       	pop	r0
 2a6:	0f be       	out	0x3f, r0	; 63
 2a8:	0f 90       	pop	r0
 2aa:	1f 90       	pop	r1
 2ac:	18 95       	reti
 2ae:	10 92 cd 05 	sts	0x05CD, r1	; 0x8005cd <intCounter+0x1>
 2b2:	10 92 cc 05 	sts	0x05CC, r1	; 0x8005cc <intCounter>
 2b6:	e1 ec       	ldi	r30, 0xC1	; 193
 2b8:	f5 e0       	ldi	r31, 0x05	; 5
 2ba:	92 e5       	ldi	r25, 0x52	; 82
 2bc:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 2c0:	85 ff       	sbrs	r24, 5
 2c2:	fc cf       	rjmp	.-8      	; 0x2bc <__vector_1+0x54>
 2c4:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 2c8:	91 91       	ld	r25, Z+
 2ca:	91 11       	cpse	r25, r1
 2cc:	f7 cf       	rjmp	.-18     	; 0x2bc <__vector_1+0x54>
 2ce:	e6 cf       	rjmp	.-52     	; 0x29c <__vector_1+0x34>

000002d0 <__vector_16>:
 2d0:	1f 92       	push	r1
 2d2:	0f 92       	push	r0
 2d4:	0f b6       	in	r0, 0x3f	; 63
 2d6:	0f 92       	push	r0
 2d8:	11 24       	eor	r1, r1
 2da:	8f 93       	push	r24
 2dc:	9f 93       	push	r25
 2de:	80 91 ca 05 	lds	r24, 0x05CA	; 0x8005ca <timerCounter>
 2e2:	90 91 cb 05 	lds	r25, 0x05CB	; 0x8005cb <timerCounter+0x1>
 2e6:	01 96       	adiw	r24, 0x01	; 1
 2e8:	90 93 cb 05 	sts	0x05CB, r25	; 0x8005cb <timerCounter+0x1>
 2ec:	80 93 ca 05 	sts	0x05CA, r24	; 0x8005ca <timerCounter>
 2f0:	9f 91       	pop	r25
 2f2:	8f 91       	pop	r24
 2f4:	0f 90       	pop	r0
 2f6:	0f be       	out	0x3f, r0	; 63
 2f8:	0f 90       	pop	r0
 2fa:	1f 90       	pop	r1
 2fc:	18 95       	reti

000002fe <__vector_20>:

ISR(USART0_RX_vect){ //Wenn empfangen->wird das ausgeführt
 2fe:	1f 92       	push	r1
 300:	0f 92       	push	r0
 302:	0f b6       	in	r0, 0x3f	; 63
 304:	0f 92       	push	r0
 306:	11 24       	eor	r1, r1
 308:	2f 93       	push	r18
 30a:	3f 93       	push	r19
 30c:	4f 93       	push	r20
 30e:	5f 93       	push	r21
 310:	6f 93       	push	r22
 312:	7f 93       	push	r23
 314:	8f 93       	push	r24
 316:	9f 93       	push	r25
 318:	af 93       	push	r26
 31a:	bf 93       	push	r27
 31c:	ef 93       	push	r30
 31e:	ff 93       	push	r31
 320:	cf 93       	push	r28
 322:	df 93       	push	r29
 324:	cd b7       	in	r28, 0x3d	; 61
 326:	de b7       	in	r29, 0x3e	; 62
 328:	e2 97       	sbiw	r28, 0x32	; 50
 32a:	de bf       	out	0x3e, r29	; 62
 32c:	cd bf       	out	0x3d, r28	; 61
}

unsigned char uart_getc()
{
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)))
 32e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 332:	87 ff       	sbrs	r24, 7
 334:	fc cf       	rjmp	.-8      	; 0x32e <__vector_20+0x30>
	{

	}
	/* Get and return received data from buffer */
	return UDR0;
 336:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	NextChar = uart_getc();         // Warte auf und empfange das nächste Zeichen

	// Sammle solange Zeichen, bis:
	// * entweder das String Ende Zeichen kam
	// * oder das aufnehmende Array voll ist
	while( NextChar != endChar && StringLen < MaxLen - 1 ) {
 33a:	ae 01       	movw	r20, r28
 33c:	4f 5f       	subi	r20, 0xFF	; 255
 33e:	5f 4f       	sbci	r21, 0xFF	; 255
 340:	fa 01       	movw	r30, r20
 342:	93 32       	cpi	r25, 0x23	; 35
 344:	91 f0       	breq	.+36     	; 0x36a <__vector_20+0x6c>
 346:	9e 01       	movw	r18, r28
 348:	2e 5c       	subi	r18, 0xCE	; 206
 34a:	3f 4f       	sbci	r19, 0xFF	; 255
		*Buffer++ = NextChar;
 34c:	31 96       	adiw	r30, 0x01	; 1
 34e:	df 01       	movw	r26, r30
 350:	11 97       	sbiw	r26, 0x01	; 1
 352:	9c 93       	st	X, r25
}

unsigned char uart_getc()
{
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)))
 354:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 358:	97 ff       	sbrs	r25, 7
 35a:	fc cf       	rjmp	.-8      	; 0x354 <__vector_20+0x56>
	{

	}
	/* Get and return received data from buffer */
	return UDR0;
 35c:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	NextChar = uart_getc();         // Warte auf und empfange das nächste Zeichen

	// Sammle solange Zeichen, bis:
	// * entweder das String Ende Zeichen kam
	// * oder das aufnehmende Array voll ist
	while( NextChar != endChar && StringLen < MaxLen - 1 ) {
 360:	93 32       	cpi	r25, 0x23	; 35
 362:	19 f0       	breq	.+6      	; 0x36a <__vector_20+0x6c>
 364:	e2 17       	cp	r30, r18
 366:	f3 07       	cpc	r31, r19
 368:	89 f7       	brne	.-30     	; 0x34c <__vector_20+0x4e>
		NextChar = uart_getc();
	}

	// Noch ein '\0' anhängen um einen Standard
	// C-String daraus zu machen
	*Buffer = '\0';
 36a:	10 82       	st	Z, r1


/* puts ist unabhaengig vom Controllertyp */
void uart_sends (char *s)
{
    while (*s)
 36c:	29 81       	ldd	r18, Y+1	; 0x01
 36e:	22 23       	and	r18, r18
 370:	59 f0       	breq	.+22     	; 0x388 <__vector_20+0x8a>
 372:	fe 01       	movw	r30, r28
 374:	32 96       	adiw	r30, 0x02	; 2
	ctrlVal3 = atoi(token);	
}

int uart_sendc(unsigned char c)
{
	while (!(UCSR0A & (1<<UDRE0)))  /* warten bis Senden moeglich */
 376:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 37a:	95 ff       	sbrs	r25, 5
 37c:	fc cf       	rjmp	.-8      	; 0x376 <__vector_20+0x78>
	{
	}

	UDR0 = c;                      /* sende Zeichen */
 37e:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>


/* puts ist unabhaengig vom Controllertyp */
void uart_sends (char *s)
{
    while (*s)
 382:	21 91       	ld	r18, Z+
 384:	21 11       	cpse	r18, r1
 386:	f7 cf       	rjmp	.-18     	; 0x376 <__vector_20+0x78>
	char input[50];
	int buffer[100];
	uart_gets(input, sizeof(input),'#');
	uart_sends(input);
	//received STRING EX. "1-0-100-099-098"
	char* token = strtok(input, "-");
 388:	64 ec       	ldi	r22, 0xC4	; 196
 38a:	75 e0       	ldi	r23, 0x05	; 5
 38c:	ca 01       	movw	r24, r20
 38e:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <strtok>
	mode = atoi(token);
 392:	0e 94 b4 03 	call	0x768	; 0x768 <atoi>
 396:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 39a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	token = strtok(0, "-");
 39e:	64 ec       	ldi	r22, 0xC4	; 196
 3a0:	75 e0       	ldi	r23, 0x05	; 5
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <strtok>
	ctrlAdc = atoi(token);
 3aa:	0e 94 b4 03 	call	0x768	; 0x768 <atoi>
 3ae:	90 93 d1 05 	sts	0x05D1, r25	; 0x8005d1 <ctrlAdc+0x1>
 3b2:	80 93 d0 05 	sts	0x05D0, r24	; 0x8005d0 <ctrlAdc>
	token = strtok(0, "-");
 3b6:	64 ec       	ldi	r22, 0xC4	; 196
 3b8:	75 e0       	ldi	r23, 0x05	; 5
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <strtok>
	ctrlVal1 = atoi(token);
 3c2:	0e 94 b4 03 	call	0x768	; 0x768 <atoi>
 3c6:	90 93 d7 05 	sts	0x05D7, r25	; 0x8005d7 <ctrlVal1+0x1>
 3ca:	80 93 d6 05 	sts	0x05D6, r24	; 0x8005d6 <ctrlVal1>
	token = strtok(0, "-");
 3ce:	64 ec       	ldi	r22, 0xC4	; 196
 3d0:	75 e0       	ldi	r23, 0x05	; 5
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <strtok>
	ctrlVal2 = atoi(token);
 3da:	0e 94 b4 03 	call	0x768	; 0x768 <atoi>
 3de:	90 93 d5 05 	sts	0x05D5, r25	; 0x8005d5 <ctrlVal2+0x1>
 3e2:	80 93 d4 05 	sts	0x05D4, r24	; 0x8005d4 <ctrlVal2>
	token = strtok(0, "-");
 3e6:	64 ec       	ldi	r22, 0xC4	; 196
 3e8:	75 e0       	ldi	r23, 0x05	; 5
 3ea:	80 e0       	ldi	r24, 0x00	; 0
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <strtok>
	ctrlVal3 = atoi(token);	
 3f2:	0e 94 b4 03 	call	0x768	; 0x768 <atoi>
 3f6:	90 93 d3 05 	sts	0x05D3, r25	; 0x8005d3 <ctrlVal3+0x1>
 3fa:	80 93 d2 05 	sts	0x05D2, r24	; 0x8005d2 <ctrlVal3>
}
 3fe:	e2 96       	adiw	r28, 0x32	; 50
 400:	0f b6       	in	r0, 0x3f	; 63
 402:	f8 94       	cli
 404:	de bf       	out	0x3e, r29	; 62
 406:	0f be       	out	0x3f, r0	; 63
 408:	cd bf       	out	0x3d, r28	; 61
 40a:	df 91       	pop	r29
 40c:	cf 91       	pop	r28
 40e:	ff 91       	pop	r31
 410:	ef 91       	pop	r30
 412:	bf 91       	pop	r27
 414:	af 91       	pop	r26
 416:	9f 91       	pop	r25
 418:	8f 91       	pop	r24
 41a:	7f 91       	pop	r23
 41c:	6f 91       	pop	r22
 41e:	5f 91       	pop	r21
 420:	4f 91       	pop	r20
 422:	3f 91       	pop	r19
 424:	2f 91       	pop	r18
 426:	0f 90       	pop	r0
 428:	0f be       	out	0x3f, r0	; 63
 42a:	0f 90       	pop	r0
 42c:	1f 90       	pop	r1
 42e:	18 95       	reti

00000430 <__divsf3>:
 430:	0e 94 2c 02 	call	0x458	; 0x458 <__divsf3x>
 434:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_round>
 438:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__fp_pscB>
 43c:	58 f0       	brcs	.+22     	; 0x454 <__divsf3+0x24>
 43e:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__fp_pscA>
 442:	40 f0       	brcs	.+16     	; 0x454 <__divsf3+0x24>
 444:	29 f4       	brne	.+10     	; 0x450 <__divsf3+0x20>
 446:	5f 3f       	cpi	r21, 0xFF	; 255
 448:	29 f0       	breq	.+10     	; 0x454 <__divsf3+0x24>
 44a:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__fp_inf>
 44e:	51 11       	cpse	r21, r1
 450:	0c 94 12 03 	jmp	0x624	; 0x624 <__fp_szero>
 454:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__fp_nan>

00000458 <__divsf3x>:
 458:	0e 94 ef 02 	call	0x5de	; 0x5de <__fp_split3>
 45c:	68 f3       	brcs	.-38     	; 0x438 <__divsf3+0x8>

0000045e <__divsf3_pse>:
 45e:	99 23       	and	r25, r25
 460:	b1 f3       	breq	.-20     	; 0x44e <__divsf3+0x1e>
 462:	55 23       	and	r21, r21
 464:	91 f3       	breq	.-28     	; 0x44a <__divsf3+0x1a>
 466:	95 1b       	sub	r25, r21
 468:	55 0b       	sbc	r21, r21
 46a:	bb 27       	eor	r27, r27
 46c:	aa 27       	eor	r26, r26
 46e:	62 17       	cp	r22, r18
 470:	73 07       	cpc	r23, r19
 472:	84 07       	cpc	r24, r20
 474:	38 f0       	brcs	.+14     	; 0x484 <__divsf3_pse+0x26>
 476:	9f 5f       	subi	r25, 0xFF	; 255
 478:	5f 4f       	sbci	r21, 0xFF	; 255
 47a:	22 0f       	add	r18, r18
 47c:	33 1f       	adc	r19, r19
 47e:	44 1f       	adc	r20, r20
 480:	aa 1f       	adc	r26, r26
 482:	a9 f3       	breq	.-22     	; 0x46e <__divsf3_pse+0x10>
 484:	35 d0       	rcall	.+106    	; 0x4f0 <__divsf3_pse+0x92>
 486:	0e 2e       	mov	r0, r30
 488:	3a f0       	brmi	.+14     	; 0x498 <__divsf3_pse+0x3a>
 48a:	e0 e8       	ldi	r30, 0x80	; 128
 48c:	32 d0       	rcall	.+100    	; 0x4f2 <__divsf3_pse+0x94>
 48e:	91 50       	subi	r25, 0x01	; 1
 490:	50 40       	sbci	r21, 0x00	; 0
 492:	e6 95       	lsr	r30
 494:	00 1c       	adc	r0, r0
 496:	ca f7       	brpl	.-14     	; 0x48a <__divsf3_pse+0x2c>
 498:	2b d0       	rcall	.+86     	; 0x4f0 <__divsf3_pse+0x92>
 49a:	fe 2f       	mov	r31, r30
 49c:	29 d0       	rcall	.+82     	; 0x4f0 <__divsf3_pse+0x92>
 49e:	66 0f       	add	r22, r22
 4a0:	77 1f       	adc	r23, r23
 4a2:	88 1f       	adc	r24, r24
 4a4:	bb 1f       	adc	r27, r27
 4a6:	26 17       	cp	r18, r22
 4a8:	37 07       	cpc	r19, r23
 4aa:	48 07       	cpc	r20, r24
 4ac:	ab 07       	cpc	r26, r27
 4ae:	b0 e8       	ldi	r27, 0x80	; 128
 4b0:	09 f0       	breq	.+2      	; 0x4b4 <__divsf3_pse+0x56>
 4b2:	bb 0b       	sbc	r27, r27
 4b4:	80 2d       	mov	r24, r0
 4b6:	bf 01       	movw	r22, r30
 4b8:	ff 27       	eor	r31, r31
 4ba:	93 58       	subi	r25, 0x83	; 131
 4bc:	5f 4f       	sbci	r21, 0xFF	; 255
 4be:	3a f0       	brmi	.+14     	; 0x4ce <__divsf3_pse+0x70>
 4c0:	9e 3f       	cpi	r25, 0xFE	; 254
 4c2:	51 05       	cpc	r21, r1
 4c4:	78 f0       	brcs	.+30     	; 0x4e4 <__divsf3_pse+0x86>
 4c6:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__fp_inf>
 4ca:	0c 94 12 03 	jmp	0x624	; 0x624 <__fp_szero>
 4ce:	5f 3f       	cpi	r21, 0xFF	; 255
 4d0:	e4 f3       	brlt	.-8      	; 0x4ca <__divsf3_pse+0x6c>
 4d2:	98 3e       	cpi	r25, 0xE8	; 232
 4d4:	d4 f3       	brlt	.-12     	; 0x4ca <__divsf3_pse+0x6c>
 4d6:	86 95       	lsr	r24
 4d8:	77 95       	ror	r23
 4da:	67 95       	ror	r22
 4dc:	b7 95       	ror	r27
 4de:	f7 95       	ror	r31
 4e0:	9f 5f       	subi	r25, 0xFF	; 255
 4e2:	c9 f7       	brne	.-14     	; 0x4d6 <__divsf3_pse+0x78>
 4e4:	88 0f       	add	r24, r24
 4e6:	91 1d       	adc	r25, r1
 4e8:	96 95       	lsr	r25
 4ea:	87 95       	ror	r24
 4ec:	97 f9       	bld	r25, 7
 4ee:	08 95       	ret
 4f0:	e1 e0       	ldi	r30, 0x01	; 1
 4f2:	66 0f       	add	r22, r22
 4f4:	77 1f       	adc	r23, r23
 4f6:	88 1f       	adc	r24, r24
 4f8:	bb 1f       	adc	r27, r27
 4fa:	62 17       	cp	r22, r18
 4fc:	73 07       	cpc	r23, r19
 4fe:	84 07       	cpc	r24, r20
 500:	ba 07       	cpc	r27, r26
 502:	20 f0       	brcs	.+8      	; 0x50c <__divsf3_pse+0xae>
 504:	62 1b       	sub	r22, r18
 506:	73 0b       	sbc	r23, r19
 508:	84 0b       	sbc	r24, r20
 50a:	ba 0b       	sbc	r27, r26
 50c:	ee 1f       	adc	r30, r30
 50e:	88 f7       	brcc	.-30     	; 0x4f2 <__divsf3_pse+0x94>
 510:	e0 95       	com	r30
 512:	08 95       	ret

00000514 <__floatunsisf>:
 514:	e8 94       	clt
 516:	09 c0       	rjmp	.+18     	; 0x52a <__floatsisf+0x12>

00000518 <__floatsisf>:
 518:	97 fb       	bst	r25, 7
 51a:	3e f4       	brtc	.+14     	; 0x52a <__floatsisf+0x12>
 51c:	90 95       	com	r25
 51e:	80 95       	com	r24
 520:	70 95       	com	r23
 522:	61 95       	neg	r22
 524:	7f 4f       	sbci	r23, 0xFF	; 255
 526:	8f 4f       	sbci	r24, 0xFF	; 255
 528:	9f 4f       	sbci	r25, 0xFF	; 255
 52a:	99 23       	and	r25, r25
 52c:	a9 f0       	breq	.+42     	; 0x558 <__floatsisf+0x40>
 52e:	f9 2f       	mov	r31, r25
 530:	96 e9       	ldi	r25, 0x96	; 150
 532:	bb 27       	eor	r27, r27
 534:	93 95       	inc	r25
 536:	f6 95       	lsr	r31
 538:	87 95       	ror	r24
 53a:	77 95       	ror	r23
 53c:	67 95       	ror	r22
 53e:	b7 95       	ror	r27
 540:	f1 11       	cpse	r31, r1
 542:	f8 cf       	rjmp	.-16     	; 0x534 <__floatsisf+0x1c>
 544:	fa f4       	brpl	.+62     	; 0x584 <__floatsisf+0x6c>
 546:	bb 0f       	add	r27, r27
 548:	11 f4       	brne	.+4      	; 0x54e <__floatsisf+0x36>
 54a:	60 ff       	sbrs	r22, 0
 54c:	1b c0       	rjmp	.+54     	; 0x584 <__floatsisf+0x6c>
 54e:	6f 5f       	subi	r22, 0xFF	; 255
 550:	7f 4f       	sbci	r23, 0xFF	; 255
 552:	8f 4f       	sbci	r24, 0xFF	; 255
 554:	9f 4f       	sbci	r25, 0xFF	; 255
 556:	16 c0       	rjmp	.+44     	; 0x584 <__floatsisf+0x6c>
 558:	88 23       	and	r24, r24
 55a:	11 f0       	breq	.+4      	; 0x560 <__floatsisf+0x48>
 55c:	96 e9       	ldi	r25, 0x96	; 150
 55e:	11 c0       	rjmp	.+34     	; 0x582 <__floatsisf+0x6a>
 560:	77 23       	and	r23, r23
 562:	21 f0       	breq	.+8      	; 0x56c <__floatsisf+0x54>
 564:	9e e8       	ldi	r25, 0x8E	; 142
 566:	87 2f       	mov	r24, r23
 568:	76 2f       	mov	r23, r22
 56a:	05 c0       	rjmp	.+10     	; 0x576 <__floatsisf+0x5e>
 56c:	66 23       	and	r22, r22
 56e:	71 f0       	breq	.+28     	; 0x58c <__floatsisf+0x74>
 570:	96 e8       	ldi	r25, 0x86	; 134
 572:	86 2f       	mov	r24, r22
 574:	70 e0       	ldi	r23, 0x00	; 0
 576:	60 e0       	ldi	r22, 0x00	; 0
 578:	2a f0       	brmi	.+10     	; 0x584 <__floatsisf+0x6c>
 57a:	9a 95       	dec	r25
 57c:	66 0f       	add	r22, r22
 57e:	77 1f       	adc	r23, r23
 580:	88 1f       	adc	r24, r24
 582:	da f7       	brpl	.-10     	; 0x57a <__floatsisf+0x62>
 584:	88 0f       	add	r24, r24
 586:	96 95       	lsr	r25
 588:	87 95       	ror	r24
 58a:	97 f9       	bld	r25, 7
 58c:	08 95       	ret

0000058e <__fp_inf>:
 58e:	97 f9       	bld	r25, 7
 590:	9f 67       	ori	r25, 0x7F	; 127
 592:	80 e8       	ldi	r24, 0x80	; 128
 594:	70 e0       	ldi	r23, 0x00	; 0
 596:	60 e0       	ldi	r22, 0x00	; 0
 598:	08 95       	ret

0000059a <__fp_nan>:
 59a:	9f ef       	ldi	r25, 0xFF	; 255
 59c:	80 ec       	ldi	r24, 0xC0	; 192
 59e:	08 95       	ret

000005a0 <__fp_pscA>:
 5a0:	00 24       	eor	r0, r0
 5a2:	0a 94       	dec	r0
 5a4:	16 16       	cp	r1, r22
 5a6:	17 06       	cpc	r1, r23
 5a8:	18 06       	cpc	r1, r24
 5aa:	09 06       	cpc	r0, r25
 5ac:	08 95       	ret

000005ae <__fp_pscB>:
 5ae:	00 24       	eor	r0, r0
 5b0:	0a 94       	dec	r0
 5b2:	12 16       	cp	r1, r18
 5b4:	13 06       	cpc	r1, r19
 5b6:	14 06       	cpc	r1, r20
 5b8:	05 06       	cpc	r0, r21
 5ba:	08 95       	ret

000005bc <__fp_round>:
 5bc:	09 2e       	mov	r0, r25
 5be:	03 94       	inc	r0
 5c0:	00 0c       	add	r0, r0
 5c2:	11 f4       	brne	.+4      	; 0x5c8 <__fp_round+0xc>
 5c4:	88 23       	and	r24, r24
 5c6:	52 f0       	brmi	.+20     	; 0x5dc <__fp_round+0x20>
 5c8:	bb 0f       	add	r27, r27
 5ca:	40 f4       	brcc	.+16     	; 0x5dc <__fp_round+0x20>
 5cc:	bf 2b       	or	r27, r31
 5ce:	11 f4       	brne	.+4      	; 0x5d4 <__fp_round+0x18>
 5d0:	60 ff       	sbrs	r22, 0
 5d2:	04 c0       	rjmp	.+8      	; 0x5dc <__fp_round+0x20>
 5d4:	6f 5f       	subi	r22, 0xFF	; 255
 5d6:	7f 4f       	sbci	r23, 0xFF	; 255
 5d8:	8f 4f       	sbci	r24, 0xFF	; 255
 5da:	9f 4f       	sbci	r25, 0xFF	; 255
 5dc:	08 95       	ret

000005de <__fp_split3>:
 5de:	57 fd       	sbrc	r21, 7
 5e0:	90 58       	subi	r25, 0x80	; 128
 5e2:	44 0f       	add	r20, r20
 5e4:	55 1f       	adc	r21, r21
 5e6:	59 f0       	breq	.+22     	; 0x5fe <__fp_splitA+0x10>
 5e8:	5f 3f       	cpi	r21, 0xFF	; 255
 5ea:	71 f0       	breq	.+28     	; 0x608 <__fp_splitA+0x1a>
 5ec:	47 95       	ror	r20

000005ee <__fp_splitA>:
 5ee:	88 0f       	add	r24, r24
 5f0:	97 fb       	bst	r25, 7
 5f2:	99 1f       	adc	r25, r25
 5f4:	61 f0       	breq	.+24     	; 0x60e <__fp_splitA+0x20>
 5f6:	9f 3f       	cpi	r25, 0xFF	; 255
 5f8:	79 f0       	breq	.+30     	; 0x618 <__fp_splitA+0x2a>
 5fa:	87 95       	ror	r24
 5fc:	08 95       	ret
 5fe:	12 16       	cp	r1, r18
 600:	13 06       	cpc	r1, r19
 602:	14 06       	cpc	r1, r20
 604:	55 1f       	adc	r21, r21
 606:	f2 cf       	rjmp	.-28     	; 0x5ec <__fp_split3+0xe>
 608:	46 95       	lsr	r20
 60a:	f1 df       	rcall	.-30     	; 0x5ee <__fp_splitA>
 60c:	08 c0       	rjmp	.+16     	; 0x61e <__fp_splitA+0x30>
 60e:	16 16       	cp	r1, r22
 610:	17 06       	cpc	r1, r23
 612:	18 06       	cpc	r1, r24
 614:	99 1f       	adc	r25, r25
 616:	f1 cf       	rjmp	.-30     	; 0x5fa <__fp_splitA+0xc>
 618:	86 95       	lsr	r24
 61a:	71 05       	cpc	r23, r1
 61c:	61 05       	cpc	r22, r1
 61e:	08 94       	sec
 620:	08 95       	ret

00000622 <__fp_zero>:
 622:	e8 94       	clt

00000624 <__fp_szero>:
 624:	bb 27       	eor	r27, r27
 626:	66 27       	eor	r22, r22
 628:	77 27       	eor	r23, r23
 62a:	cb 01       	movw	r24, r22
 62c:	97 f9       	bld	r25, 7
 62e:	08 95       	ret

00000630 <__gesf2>:
 630:	0e 94 8a 03 	call	0x714	; 0x714 <__fp_cmp>
 634:	08 f4       	brcc	.+2      	; 0x638 <__gesf2+0x8>
 636:	8f ef       	ldi	r24, 0xFF	; 255
 638:	08 95       	ret

0000063a <__mulsf3>:
 63a:	0e 94 30 03 	call	0x660	; 0x660 <__mulsf3x>
 63e:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_round>
 642:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__fp_pscA>
 646:	38 f0       	brcs	.+14     	; 0x656 <__mulsf3+0x1c>
 648:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__fp_pscB>
 64c:	20 f0       	brcs	.+8      	; 0x656 <__mulsf3+0x1c>
 64e:	95 23       	and	r25, r21
 650:	11 f0       	breq	.+4      	; 0x656 <__mulsf3+0x1c>
 652:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__fp_inf>
 656:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__fp_nan>
 65a:	11 24       	eor	r1, r1
 65c:	0c 94 12 03 	jmp	0x624	; 0x624 <__fp_szero>

00000660 <__mulsf3x>:
 660:	0e 94 ef 02 	call	0x5de	; 0x5de <__fp_split3>
 664:	70 f3       	brcs	.-36     	; 0x642 <__mulsf3+0x8>

00000666 <__mulsf3_pse>:
 666:	95 9f       	mul	r25, r21
 668:	c1 f3       	breq	.-16     	; 0x65a <__mulsf3+0x20>
 66a:	95 0f       	add	r25, r21
 66c:	50 e0       	ldi	r21, 0x00	; 0
 66e:	55 1f       	adc	r21, r21
 670:	62 9f       	mul	r22, r18
 672:	f0 01       	movw	r30, r0
 674:	72 9f       	mul	r23, r18
 676:	bb 27       	eor	r27, r27
 678:	f0 0d       	add	r31, r0
 67a:	b1 1d       	adc	r27, r1
 67c:	63 9f       	mul	r22, r19
 67e:	aa 27       	eor	r26, r26
 680:	f0 0d       	add	r31, r0
 682:	b1 1d       	adc	r27, r1
 684:	aa 1f       	adc	r26, r26
 686:	64 9f       	mul	r22, r20
 688:	66 27       	eor	r22, r22
 68a:	b0 0d       	add	r27, r0
 68c:	a1 1d       	adc	r26, r1
 68e:	66 1f       	adc	r22, r22
 690:	82 9f       	mul	r24, r18
 692:	22 27       	eor	r18, r18
 694:	b0 0d       	add	r27, r0
 696:	a1 1d       	adc	r26, r1
 698:	62 1f       	adc	r22, r18
 69a:	73 9f       	mul	r23, r19
 69c:	b0 0d       	add	r27, r0
 69e:	a1 1d       	adc	r26, r1
 6a0:	62 1f       	adc	r22, r18
 6a2:	83 9f       	mul	r24, r19
 6a4:	a0 0d       	add	r26, r0
 6a6:	61 1d       	adc	r22, r1
 6a8:	22 1f       	adc	r18, r18
 6aa:	74 9f       	mul	r23, r20
 6ac:	33 27       	eor	r19, r19
 6ae:	a0 0d       	add	r26, r0
 6b0:	61 1d       	adc	r22, r1
 6b2:	23 1f       	adc	r18, r19
 6b4:	84 9f       	mul	r24, r20
 6b6:	60 0d       	add	r22, r0
 6b8:	21 1d       	adc	r18, r1
 6ba:	82 2f       	mov	r24, r18
 6bc:	76 2f       	mov	r23, r22
 6be:	6a 2f       	mov	r22, r26
 6c0:	11 24       	eor	r1, r1
 6c2:	9f 57       	subi	r25, 0x7F	; 127
 6c4:	50 40       	sbci	r21, 0x00	; 0
 6c6:	9a f0       	brmi	.+38     	; 0x6ee <__mulsf3_pse+0x88>
 6c8:	f1 f0       	breq	.+60     	; 0x706 <__mulsf3_pse+0xa0>
 6ca:	88 23       	and	r24, r24
 6cc:	4a f0       	brmi	.+18     	; 0x6e0 <__mulsf3_pse+0x7a>
 6ce:	ee 0f       	add	r30, r30
 6d0:	ff 1f       	adc	r31, r31
 6d2:	bb 1f       	adc	r27, r27
 6d4:	66 1f       	adc	r22, r22
 6d6:	77 1f       	adc	r23, r23
 6d8:	88 1f       	adc	r24, r24
 6da:	91 50       	subi	r25, 0x01	; 1
 6dc:	50 40       	sbci	r21, 0x00	; 0
 6de:	a9 f7       	brne	.-22     	; 0x6ca <__mulsf3_pse+0x64>
 6e0:	9e 3f       	cpi	r25, 0xFE	; 254
 6e2:	51 05       	cpc	r21, r1
 6e4:	80 f0       	brcs	.+32     	; 0x706 <__mulsf3_pse+0xa0>
 6e6:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__fp_inf>
 6ea:	0c 94 12 03 	jmp	0x624	; 0x624 <__fp_szero>
 6ee:	5f 3f       	cpi	r21, 0xFF	; 255
 6f0:	e4 f3       	brlt	.-8      	; 0x6ea <__mulsf3_pse+0x84>
 6f2:	98 3e       	cpi	r25, 0xE8	; 232
 6f4:	d4 f3       	brlt	.-12     	; 0x6ea <__mulsf3_pse+0x84>
 6f6:	86 95       	lsr	r24
 6f8:	77 95       	ror	r23
 6fa:	67 95       	ror	r22
 6fc:	b7 95       	ror	r27
 6fe:	f7 95       	ror	r31
 700:	e7 95       	ror	r30
 702:	9f 5f       	subi	r25, 0xFF	; 255
 704:	c1 f7       	brne	.-16     	; 0x6f6 <__mulsf3_pse+0x90>
 706:	fe 2b       	or	r31, r30
 708:	88 0f       	add	r24, r24
 70a:	91 1d       	adc	r25, r1
 70c:	96 95       	lsr	r25
 70e:	87 95       	ror	r24
 710:	97 f9       	bld	r25, 7
 712:	08 95       	ret

00000714 <__fp_cmp>:
 714:	99 0f       	add	r25, r25
 716:	00 08       	sbc	r0, r0
 718:	55 0f       	add	r21, r21
 71a:	aa 0b       	sbc	r26, r26
 71c:	e0 e8       	ldi	r30, 0x80	; 128
 71e:	fe ef       	ldi	r31, 0xFE	; 254
 720:	16 16       	cp	r1, r22
 722:	17 06       	cpc	r1, r23
 724:	e8 07       	cpc	r30, r24
 726:	f9 07       	cpc	r31, r25
 728:	c0 f0       	brcs	.+48     	; 0x75a <__fp_cmp+0x46>
 72a:	12 16       	cp	r1, r18
 72c:	13 06       	cpc	r1, r19
 72e:	e4 07       	cpc	r30, r20
 730:	f5 07       	cpc	r31, r21
 732:	98 f0       	brcs	.+38     	; 0x75a <__fp_cmp+0x46>
 734:	62 1b       	sub	r22, r18
 736:	73 0b       	sbc	r23, r19
 738:	84 0b       	sbc	r24, r20
 73a:	95 0b       	sbc	r25, r21
 73c:	39 f4       	brne	.+14     	; 0x74c <__fp_cmp+0x38>
 73e:	0a 26       	eor	r0, r26
 740:	61 f0       	breq	.+24     	; 0x75a <__fp_cmp+0x46>
 742:	23 2b       	or	r18, r19
 744:	24 2b       	or	r18, r20
 746:	25 2b       	or	r18, r21
 748:	21 f4       	brne	.+8      	; 0x752 <__fp_cmp+0x3e>
 74a:	08 95       	ret
 74c:	0a 26       	eor	r0, r26
 74e:	09 f4       	brne	.+2      	; 0x752 <__fp_cmp+0x3e>
 750:	a1 40       	sbci	r26, 0x01	; 1
 752:	a6 95       	lsr	r26
 754:	8f ef       	ldi	r24, 0xFF	; 255
 756:	81 1d       	adc	r24, r1
 758:	81 1d       	adc	r24, r1
 75a:	08 95       	ret

0000075c <__tablejump2__>:
 75c:	ee 0f       	add	r30, r30
 75e:	ff 1f       	adc	r31, r31
 760:	05 90       	lpm	r0, Z+
 762:	f4 91       	lpm	r31, Z
 764:	e0 2d       	mov	r30, r0
 766:	09 94       	ijmp

00000768 <atoi>:
 768:	fc 01       	movw	r30, r24
 76a:	88 27       	eor	r24, r24
 76c:	99 27       	eor	r25, r25
 76e:	e8 94       	clt
 770:	21 91       	ld	r18, Z+
 772:	20 32       	cpi	r18, 0x20	; 32
 774:	e9 f3       	breq	.-6      	; 0x770 <atoi+0x8>
 776:	29 30       	cpi	r18, 0x09	; 9
 778:	10 f0       	brcs	.+4      	; 0x77e <atoi+0x16>
 77a:	2e 30       	cpi	r18, 0x0E	; 14
 77c:	c8 f3       	brcs	.-14     	; 0x770 <atoi+0x8>
 77e:	2b 32       	cpi	r18, 0x2B	; 43
 780:	41 f0       	breq	.+16     	; 0x792 <atoi+0x2a>
 782:	2d 32       	cpi	r18, 0x2D	; 45
 784:	39 f4       	brne	.+14     	; 0x794 <atoi+0x2c>
 786:	68 94       	set
 788:	04 c0       	rjmp	.+8      	; 0x792 <atoi+0x2a>
 78a:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__mulhi_const_10>
 78e:	82 0f       	add	r24, r18
 790:	91 1d       	adc	r25, r1
 792:	21 91       	ld	r18, Z+
 794:	20 53       	subi	r18, 0x30	; 48
 796:	2a 30       	cpi	r18, 0x0A	; 10
 798:	c0 f3       	brcs	.-16     	; 0x78a <atoi+0x22>
 79a:	1e f4       	brtc	.+6      	; 0x7a2 <atoi+0x3a>
 79c:	90 95       	com	r25
 79e:	81 95       	neg	r24
 7a0:	9f 4f       	sbci	r25, 0xFF	; 255
 7a2:	08 95       	ret

000007a4 <strtok>:
 7a4:	46 ec       	ldi	r20, 0xC6	; 198
 7a6:	55 e0       	ldi	r21, 0x05	; 5
 7a8:	0e 94 d7 03 	call	0x7ae	; 0x7ae <strtok_r>
 7ac:	08 95       	ret

000007ae <strtok_r>:
 7ae:	fa 01       	movw	r30, r20
 7b0:	a1 91       	ld	r26, Z+
 7b2:	b0 81       	ld	r27, Z
 7b4:	00 97       	sbiw	r24, 0x00	; 0
 7b6:	19 f4       	brne	.+6      	; 0x7be <strtok_r+0x10>
 7b8:	10 97       	sbiw	r26, 0x00	; 0
 7ba:	e1 f0       	breq	.+56     	; 0x7f4 <strtok_r+0x46>
 7bc:	cd 01       	movw	r24, r26
 7be:	dc 01       	movw	r26, r24
 7c0:	cd 01       	movw	r24, r26
 7c2:	0d 90       	ld	r0, X+
 7c4:	00 20       	and	r0, r0
 7c6:	11 f4       	brne	.+4      	; 0x7cc <strtok_r+0x1e>
 7c8:	c0 01       	movw	r24, r0
 7ca:	13 c0       	rjmp	.+38     	; 0x7f2 <strtok_r+0x44>
 7cc:	fb 01       	movw	r30, r22
 7ce:	21 91       	ld	r18, Z+
 7d0:	22 23       	and	r18, r18
 7d2:	19 f0       	breq	.+6      	; 0x7da <strtok_r+0x2c>
 7d4:	20 15       	cp	r18, r0
 7d6:	d9 f7       	brne	.-10     	; 0x7ce <strtok_r+0x20>
 7d8:	f3 cf       	rjmp	.-26     	; 0x7c0 <strtok_r+0x12>
 7da:	fb 01       	movw	r30, r22
 7dc:	21 91       	ld	r18, Z+
 7de:	20 15       	cp	r18, r0
 7e0:	19 f4       	brne	.+6      	; 0x7e8 <strtok_r+0x3a>
 7e2:	1e 92       	st	-X, r1
 7e4:	11 96       	adiw	r26, 0x01	; 1
 7e6:	06 c0       	rjmp	.+12     	; 0x7f4 <strtok_r+0x46>
 7e8:	22 23       	and	r18, r18
 7ea:	c1 f7       	brne	.-16     	; 0x7dc <strtok_r+0x2e>
 7ec:	0d 90       	ld	r0, X+
 7ee:	00 20       	and	r0, r0
 7f0:	a1 f7       	brne	.-24     	; 0x7da <strtok_r+0x2c>
 7f2:	d0 01       	movw	r26, r0
 7f4:	fa 01       	movw	r30, r20
 7f6:	a1 93       	st	Z+, r26
 7f8:	b0 83       	st	Z, r27
 7fa:	08 95       	ret

000007fc <__mulhi_const_10>:
 7fc:	7a e0       	ldi	r23, 0x0A	; 10
 7fe:	97 9f       	mul	r25, r23
 800:	90 2d       	mov	r25, r0
 802:	87 9f       	mul	r24, r23
 804:	80 2d       	mov	r24, r0
 806:	91 0d       	add	r25, r1
 808:	11 24       	eor	r1, r1
 80a:	08 95       	ret

0000080c <_exit>:
 80c:	f8 94       	cli

0000080e <__stop_program>:
 80e:	ff cf       	rjmp	.-2      	; 0x80e <__stop_program>
