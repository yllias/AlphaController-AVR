
AlphaController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000004c2  00800100  000005e4  00000678  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  008005c2  008005c2  00000b3a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b3a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b6c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000bac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bee  00000000  00000000  00000c5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000853  00000000  00000000  0000184a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004ab  00000000  00000000  0000209d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000194  00000000  00000000  00002548  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000560  00000000  00000000  000026dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000193  00000000  00000000  00002c3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00002dcf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 45 00 	jmp	0x8a	; 0x8a <__ctors_end>
   4:	0c 94 1b 01 	jmp	0x236	; 0x236 <__vector_1>
   8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
   c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  10:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  14:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  18:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  1c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  20:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  24:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  28:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  2c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  30:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  34:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  38:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  3c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  40:	0c 94 3d 01 	jmp	0x27a	; 0x27a <__vector_16>
  44:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  48:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  4c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  50:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  54:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  58:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  5c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  60:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  64:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  68:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  6c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  70:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  74:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  78:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  7c:	dc 00       	.word	0x00dc	; ????
  7e:	d4 00       	.word	0x00d4	; ????
  80:	04 01       	movw	r0, r8
  82:	ed 00       	.word	0x00ed	; ????
  84:	a0 00       	.word	0x00a0	; ????
  86:	de 00       	.word	0x00de	; ????
  88:	d6 00       	.word	0x00d6	; ????

0000008a <__ctors_end>:
  8a:	11 24       	eor	r1, r1
  8c:	1f be       	out	0x3f, r1	; 63
  8e:	cf ef       	ldi	r28, 0xFF	; 255
  90:	d0 e1       	ldi	r29, 0x10	; 16
  92:	de bf       	out	0x3e, r29	; 62
  94:	cd bf       	out	0x3d, r28	; 61

00000096 <__do_copy_data>:
  96:	15 e0       	ldi	r17, 0x05	; 5
  98:	a0 e0       	ldi	r26, 0x00	; 0
  9a:	b1 e0       	ldi	r27, 0x01	; 1
  9c:	e4 ee       	ldi	r30, 0xE4	; 228
  9e:	f5 e0       	ldi	r31, 0x05	; 5
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <__do_copy_data+0x10>
  a2:	05 90       	lpm	r0, Z+
  a4:	0d 92       	st	X+, r0
  a6:	a2 3c       	cpi	r26, 0xC2	; 194
  a8:	b1 07       	cpc	r27, r17
  aa:	d9 f7       	brne	.-10     	; 0xa2 <__do_copy_data+0xc>

000000ac <__do_clear_bss>:
  ac:	25 e0       	ldi	r18, 0x05	; 5
  ae:	a2 ec       	ldi	r26, 0xC2	; 194
  b0:	b5 e0       	ldi	r27, 0x05	; 5
  b2:	01 c0       	rjmp	.+2      	; 0xb6 <.do_clear_bss_start>

000000b4 <.do_clear_bss_loop>:
  b4:	1d 92       	st	X+, r1

000000b6 <.do_clear_bss_start>:
  b6:	aa 3c       	cpi	r26, 0xCA	; 202
  b8:	b2 07       	cpc	r27, r18
  ba:	e1 f7       	brne	.-8      	; 0xb4 <.do_clear_bss_loop>
  bc:	0e 94 64 00 	call	0xc8	; 0xc8 <main>
  c0:	0c 94 f0 02 	jmp	0x5e0	; 0x5e0 <_exit>

000000c4 <__bad_interrupt>:
  c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c8 <main>:
void calcBurstVals();


int main(void)
{
	sei();
  c8:	78 94       	sei
ISR (TIMER0_COMPA_vect){
	timerCounter++;
}

void Init_Int0(){
	EIMSK |= (1<<0);
  ca:	e8 9a       	sbi	0x1d, 0	; 29
	EICRA |= (1<<ISC00);
  cc:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
  d0:	81 60       	ori	r24, 0x01	; 1
  d2:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	intCounter = 1;
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	90 93 c7 05 	sts	0x05C7, r25	; 0x8005c7 <intCounter+0x1>
  de:	80 93 c6 05 	sts	0x05C6, r24	; 0x8005c6 <intCounter>
	burstCounter = 0;
  e2:	10 92 c9 05 	sts	0x05C9, r1	; 0x8005c9 <burstCounter+0x1>
  e6:	10 92 c8 05 	sts	0x05C8, r1	; 0x8005c8 <burstCounter>
}

void Init_Timer_0(){
	TCCR0A = (1<<WGM01);	//ctc mode
  ea:	82 e0       	ldi	r24, 0x02	; 2
  ec:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<CS01);	//prescaler 8
  ee:	85 b5       	in	r24, 0x25	; 37
  f0:	82 60       	ori	r24, 0x02	; 2
  f2:	85 bd       	out	0x25, r24	; 37
	OCR0A = 0x63;			//fill OCR0A with 99 for 50us angle steps
  f4:	83 e6       	ldi	r24, 0x63	; 99
  f6:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<1);		//enable compare interrupt
  f8:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
  fc:	82 60       	ori	r24, 0x02	; 2
  fe:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
}

void USART_Init()
{
	/* Set baud rate */
	UBRR0 = 103;
 102:	87 e6       	ldi	r24, 0x67	; 103
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 10a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 10e:	88 e1       	ldi	r24, 0x18	; 24
 110:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	/* Set frame format: 8data, 1stop bit */
	UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
 114:	86 e0       	ldi	r24, 0x06	; 6
 116:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0C &= ~(1<<USBS0);
 11a:	80 91 c2 00 	lds	r24, 0x00C2	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 11e:	87 7f       	andi	r24, 0xF7	; 247
 120:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
{
	sei();
    Init_Int0();
	Init_Timer_0();
	USART_Init();
	DDRB = 0xFF;
 124:	8f ef       	ldi	r24, 0xFF	; 255
 126:	84 b9       	out	0x04, r24	; 4
 128:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <mode>
 12c:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <mode+0x1>
 130:	31 97       	sbiw	r30, 0x01	; 1
	
	while(1){
		switch(mode){
 132:	e7 30       	cpi	r30, 0x07	; 7
 134:	f1 05       	cpc	r31, r1
 136:	e8 f7       	brcc	.-6      	; 0x132 <main+0x6a>
 138:	e2 5c       	subi	r30, 0xC2	; 194
 13a:	ff 4f       	sbci	r31, 0xFF	; 255
 13c:	0c 94 ea 02 	jmp	0x5d4	; 0x5d4 <__tablejump2__>
				}else{
					SSR1on();
				}
			break;
			case 5: //phase angle effective voltage
				if(timerCounter > (fireAngleTableV[ctrlVal1]*netzT)/50){
 140:	60 91 c4 05 	lds	r22, 0x05C4	; 0x8005c4 <timerCounter>
 144:	70 91 c5 05 	lds	r23, 0x05C5	; 0x8005c5 <timerCounter+0x1>
 148:	07 2e       	mov	r0, r23
 14a:	00 0c       	add	r0, r0
 14c:	88 0b       	sbc	r24, r24
 14e:	99 0b       	sbc	r25, r25
 150:	0e 94 c8 01 	call	0x390	; 0x390 <__floatsisf>
 154:	6b 01       	movw	r12, r22
 156:	7c 01       	movw	r14, r24
 158:	c0 91 00 01 	lds	r28, 0x0100	; 0x800100 <__data_start>
 15c:	d0 91 01 01 	lds	r29, 0x0101	; 0x800101 <__data_start+0x1>
 160:	cc 0f       	add	r28, r28
 162:	dd 1f       	adc	r29, r29
 164:	cc 0f       	add	r28, r28
 166:	dd 1f       	adc	r29, r29
 168:	c6 56       	subi	r28, 0x66	; 102
 16a:	dd 4f       	sbci	r29, 0xFD	; 253
 16c:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <netzT>
 170:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <netzT+0x1>
 174:	07 2e       	mov	r0, r23
 176:	00 0c       	add	r0, r0
 178:	88 0b       	sbc	r24, r24
 17a:	99 0b       	sbc	r25, r25
 17c:	0e 94 c8 01 	call	0x390	; 0x390 <__floatsisf>
 180:	28 81       	ld	r18, Y
 182:	39 81       	ldd	r19, Y+1	; 0x01
 184:	4a 81       	ldd	r20, Y+2	; 0x02
 186:	5b 81       	ldd	r21, Y+3	; 0x03
 188:	0e 94 59 02 	call	0x4b2	; 0x4b2 <__mulsf3>
 18c:	20 e0       	ldi	r18, 0x00	; 0
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	48 e4       	ldi	r20, 0x48	; 72
 192:	52 e4       	ldi	r21, 0x42	; 66
 194:	0e 94 54 01 	call	0x2a8	; 0x2a8 <__divsf3>
 198:	9b 01       	movw	r18, r22
 19a:	ac 01       	movw	r20, r24
 19c:	c7 01       	movw	r24, r14
 19e:	b6 01       	movw	r22, r12
 1a0:	0e 94 54 02 	call	0x4a8	; 0x4a8 <__gesf2>
 1a4:	18 16       	cp	r1, r24
 1a6:	44 f0       	brlt	.+16     	; 0x1b8 <main+0xf0>
	OCR0A = 0x63;			//fill OCR0A with 99 for 50us angle steps
	TIMSK0 |= (1<<1);		//enable compare interrupt
}

void SSR1on (){
	PORTB |= (1<<PB0);		//set PB0 HIGH
 1a8:	28 9a       	sbi	0x05, 0	; 5
 1aa:	be cf       	rjmp	.-132    	; 0x128 <main+0x60>
				}else{
					SSR1on();
				}
			break;
			case 7: //burst fire high momentum
				if(pinStatus){
 1ac:	80 91 c2 05 	lds	r24, 0x05C2	; 0x8005c2 <__data_end>
 1b0:	90 91 c3 05 	lds	r25, 0x05C3	; 0x8005c3 <__data_end+0x1>
 1b4:	89 2b       	or	r24, r25
 1b6:	c1 f7       	brne	.-16     	; 0x1a8 <main+0xe0>
void SSR1on (){
	PORTB |= (1<<PB0);		//set PB0 HIGH
}

void SSR1off (){
	PORTB &= ~(1<<PB0);		//clear PB0 aka.  set PB0 LOW
 1b8:	28 98       	cbi	0x05, 0	; 5
 1ba:	b6 cf       	rjmp	.-148    	; 0x128 <main+0x60>
				}else{
					SSR1on();
				}
			break;
			case 6: //burst fire low momentum 
				if(intCounter > 2*ctrlVal1){
 1bc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1c0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	20 91 c6 05 	lds	r18, 0x05C6	; 0x8005c6 <intCounter>
 1cc:	30 91 c7 05 	lds	r19, 0x05C7	; 0x8005c7 <intCounter+0x1>
 1d0:	82 17       	cp	r24, r18
 1d2:	93 07       	cpc	r25, r19
 1d4:	4c f7       	brge	.-46     	; 0x1a8 <main+0xe0>
void SSR1on (){
	PORTB |= (1<<PB0);		//set PB0 HIGH
}

void SSR1off (){
	PORTB &= ~(1<<PB0);		//clear PB0 aka.  set PB0 LOW
 1d6:	28 98       	cbi	0x05, 0	; 5
 1d8:	a7 cf       	rjmp	.-178    	; 0x128 <main+0x60>
				}else{
					SSR1on();
				}
			break;
			case 4: //phase angle power
				if(timerCounter > (fireAngleTableP[ctrlVal1]*netzT)/50){
 1da:	60 91 c4 05 	lds	r22, 0x05C4	; 0x8005c4 <timerCounter>
 1de:	70 91 c5 05 	lds	r23, 0x05C5	; 0x8005c5 <timerCounter+0x1>
 1e2:	07 2e       	mov	r0, r23
 1e4:	00 0c       	add	r0, r0
 1e6:	88 0b       	sbc	r24, r24
 1e8:	99 0b       	sbc	r25, r25
 1ea:	0e 94 c8 01 	call	0x390	; 0x390 <__floatsisf>
 1ee:	6b 01       	movw	r12, r22
 1f0:	7c 01       	movw	r14, r24
 1f2:	c0 91 00 01 	lds	r28, 0x0100	; 0x800100 <__data_start>
 1f6:	d0 91 01 01 	lds	r29, 0x0101	; 0x800101 <__data_start+0x1>
 1fa:	cc 0f       	add	r28, r28
 1fc:	dd 1f       	adc	r29, r29
 1fe:	cc 0f       	add	r28, r28
 200:	dd 1f       	adc	r29, r29
 202:	ca 5f       	subi	r28, 0xFA	; 250
 204:	de 4f       	sbci	r29, 0xFE	; 254
 206:	b2 cf       	rjmp	.-156    	; 0x16c <main+0xa4>
			break;
			case 2: //permanent HIGH
				SSR1on();
			break;
			case 3: //uncorrected phase angle
				if(timerCounter > (fireAngleTable[ctrlVal1]*netzT)/50){
 208:	60 91 c4 05 	lds	r22, 0x05C4	; 0x8005c4 <timerCounter>
 20c:	70 91 c5 05 	lds	r23, 0x05C5	; 0x8005c5 <timerCounter+0x1>
 210:	07 2e       	mov	r0, r23
 212:	00 0c       	add	r0, r0
 214:	88 0b       	sbc	r24, r24
 216:	99 0b       	sbc	r25, r25
 218:	0e 94 c8 01 	call	0x390	; 0x390 <__floatsisf>
 21c:	6b 01       	movw	r12, r22
 21e:	7c 01       	movw	r14, r24
 220:	c0 91 00 01 	lds	r28, 0x0100	; 0x800100 <__data_start>
 224:	d0 91 01 01 	lds	r29, 0x0101	; 0x800101 <__data_start+0x1>
 228:	cc 0f       	add	r28, r28
 22a:	dd 1f       	adc	r29, r29
 22c:	cc 0f       	add	r28, r28
 22e:	dd 1f       	adc	r29, r29
 230:	c2 5d       	subi	r28, 0xD2	; 210
 232:	db 4f       	sbci	r29, 0xFB	; 251
 234:	9b cf       	rjmp	.-202    	; 0x16c <main+0xa4>

00000236 <__vector_1>:
			break;
		}
	}
}

ISR (INT0_vect){
 236:	1f 92       	push	r1
 238:	0f 92       	push	r0
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	0f 92       	push	r0
 23e:	11 24       	eor	r1, r1
 240:	8f 93       	push	r24
 242:	9f 93       	push	r25
	intCounter++;
 244:	80 91 c6 05 	lds	r24, 0x05C6	; 0x8005c6 <intCounter>
 248:	90 91 c7 05 	lds	r25, 0x05C7	; 0x8005c7 <intCounter+0x1>
 24c:	01 96       	adiw	r24, 0x01	; 1
 24e:	90 93 c7 05 	sts	0x05C7, r25	; 0x8005c7 <intCounter+0x1>
 252:	80 93 c6 05 	sts	0x05C6, r24	; 0x8005c6 <intCounter>
	timerCounter = 0;
 256:	10 92 c5 05 	sts	0x05C5, r1	; 0x8005c5 <timerCounter+0x1>
 25a:	10 92 c4 05 	sts	0x05C4, r1	; 0x8005c4 <timerCounter>
		if (intCounter == 200){
 25e:	88 3c       	cpi	r24, 0xC8	; 200
 260:	91 05       	cpc	r25, r1
 262:	21 f4       	brne	.+8      	; 0x26c <__vector_1+0x36>
			intCounter = 0;
 264:	10 92 c7 05 	sts	0x05C7, r1	; 0x8005c7 <intCounter+0x1>
 268:	10 92 c6 05 	sts	0x05C6, r1	; 0x8005c6 <intCounter>
			//getControlVals();
			//getAdcVals();
			//calcBurstVals();
		}	
}
 26c:	9f 91       	pop	r25
 26e:	8f 91       	pop	r24
 270:	0f 90       	pop	r0
 272:	0f be       	out	0x3f, r0	; 63
 274:	0f 90       	pop	r0
 276:	1f 90       	pop	r1
 278:	18 95       	reti

0000027a <__vector_16>:

ISR (TIMER0_COMPA_vect){
 27a:	1f 92       	push	r1
 27c:	0f 92       	push	r0
 27e:	0f b6       	in	r0, 0x3f	; 63
 280:	0f 92       	push	r0
 282:	11 24       	eor	r1, r1
 284:	8f 93       	push	r24
 286:	9f 93       	push	r25
	timerCounter++;
 288:	80 91 c4 05 	lds	r24, 0x05C4	; 0x8005c4 <timerCounter>
 28c:	90 91 c5 05 	lds	r25, 0x05C5	; 0x8005c5 <timerCounter+0x1>
 290:	01 96       	adiw	r24, 0x01	; 1
 292:	90 93 c5 05 	sts	0x05C5, r25	; 0x8005c5 <timerCounter+0x1>
 296:	80 93 c4 05 	sts	0x05C4, r24	; 0x8005c4 <timerCounter>
}
 29a:	9f 91       	pop	r25
 29c:	8f 91       	pop	r24
 29e:	0f 90       	pop	r0
 2a0:	0f be       	out	0x3f, r0	; 63
 2a2:	0f 90       	pop	r0
 2a4:	1f 90       	pop	r1
 2a6:	18 95       	reti

000002a8 <__divsf3>:
 2a8:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__divsf3x>
 2ac:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_round>
 2b0:	0e 94 13 02 	call	0x426	; 0x426 <__fp_pscB>
 2b4:	58 f0       	brcs	.+22     	; 0x2cc <__divsf3+0x24>
 2b6:	0e 94 0c 02 	call	0x418	; 0x418 <__fp_pscA>
 2ba:	40 f0       	brcs	.+16     	; 0x2cc <__divsf3+0x24>
 2bc:	29 f4       	brne	.+10     	; 0x2c8 <__divsf3+0x20>
 2be:	5f 3f       	cpi	r21, 0xFF	; 255
 2c0:	29 f0       	breq	.+10     	; 0x2cc <__divsf3+0x24>
 2c2:	0c 94 03 02 	jmp	0x406	; 0x406 <__fp_inf>
 2c6:	51 11       	cpse	r21, r1
 2c8:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__fp_szero>
 2cc:	0c 94 09 02 	jmp	0x412	; 0x412 <__fp_nan>

000002d0 <__divsf3x>:
 2d0:	0e 94 2b 02 	call	0x456	; 0x456 <__fp_split3>
 2d4:	68 f3       	brcs	.-38     	; 0x2b0 <__divsf3+0x8>

000002d6 <__divsf3_pse>:
 2d6:	99 23       	and	r25, r25
 2d8:	b1 f3       	breq	.-20     	; 0x2c6 <__divsf3+0x1e>
 2da:	55 23       	and	r21, r21
 2dc:	91 f3       	breq	.-28     	; 0x2c2 <__divsf3+0x1a>
 2de:	95 1b       	sub	r25, r21
 2e0:	55 0b       	sbc	r21, r21
 2e2:	bb 27       	eor	r27, r27
 2e4:	aa 27       	eor	r26, r26
 2e6:	62 17       	cp	r22, r18
 2e8:	73 07       	cpc	r23, r19
 2ea:	84 07       	cpc	r24, r20
 2ec:	38 f0       	brcs	.+14     	; 0x2fc <__divsf3_pse+0x26>
 2ee:	9f 5f       	subi	r25, 0xFF	; 255
 2f0:	5f 4f       	sbci	r21, 0xFF	; 255
 2f2:	22 0f       	add	r18, r18
 2f4:	33 1f       	adc	r19, r19
 2f6:	44 1f       	adc	r20, r20
 2f8:	aa 1f       	adc	r26, r26
 2fa:	a9 f3       	breq	.-22     	; 0x2e6 <__divsf3_pse+0x10>
 2fc:	35 d0       	rcall	.+106    	; 0x368 <__divsf3_pse+0x92>
 2fe:	0e 2e       	mov	r0, r30
 300:	3a f0       	brmi	.+14     	; 0x310 <__divsf3_pse+0x3a>
 302:	e0 e8       	ldi	r30, 0x80	; 128
 304:	32 d0       	rcall	.+100    	; 0x36a <__divsf3_pse+0x94>
 306:	91 50       	subi	r25, 0x01	; 1
 308:	50 40       	sbci	r21, 0x00	; 0
 30a:	e6 95       	lsr	r30
 30c:	00 1c       	adc	r0, r0
 30e:	ca f7       	brpl	.-14     	; 0x302 <__divsf3_pse+0x2c>
 310:	2b d0       	rcall	.+86     	; 0x368 <__divsf3_pse+0x92>
 312:	fe 2f       	mov	r31, r30
 314:	29 d0       	rcall	.+82     	; 0x368 <__divsf3_pse+0x92>
 316:	66 0f       	add	r22, r22
 318:	77 1f       	adc	r23, r23
 31a:	88 1f       	adc	r24, r24
 31c:	bb 1f       	adc	r27, r27
 31e:	26 17       	cp	r18, r22
 320:	37 07       	cpc	r19, r23
 322:	48 07       	cpc	r20, r24
 324:	ab 07       	cpc	r26, r27
 326:	b0 e8       	ldi	r27, 0x80	; 128
 328:	09 f0       	breq	.+2      	; 0x32c <__divsf3_pse+0x56>
 32a:	bb 0b       	sbc	r27, r27
 32c:	80 2d       	mov	r24, r0
 32e:	bf 01       	movw	r22, r30
 330:	ff 27       	eor	r31, r31
 332:	93 58       	subi	r25, 0x83	; 131
 334:	5f 4f       	sbci	r21, 0xFF	; 255
 336:	3a f0       	brmi	.+14     	; 0x346 <__divsf3_pse+0x70>
 338:	9e 3f       	cpi	r25, 0xFE	; 254
 33a:	51 05       	cpc	r21, r1
 33c:	78 f0       	brcs	.+30     	; 0x35c <__divsf3_pse+0x86>
 33e:	0c 94 03 02 	jmp	0x406	; 0x406 <__fp_inf>
 342:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__fp_szero>
 346:	5f 3f       	cpi	r21, 0xFF	; 255
 348:	e4 f3       	brlt	.-8      	; 0x342 <__divsf3_pse+0x6c>
 34a:	98 3e       	cpi	r25, 0xE8	; 232
 34c:	d4 f3       	brlt	.-12     	; 0x342 <__divsf3_pse+0x6c>
 34e:	86 95       	lsr	r24
 350:	77 95       	ror	r23
 352:	67 95       	ror	r22
 354:	b7 95       	ror	r27
 356:	f7 95       	ror	r31
 358:	9f 5f       	subi	r25, 0xFF	; 255
 35a:	c9 f7       	brne	.-14     	; 0x34e <__divsf3_pse+0x78>
 35c:	88 0f       	add	r24, r24
 35e:	91 1d       	adc	r25, r1
 360:	96 95       	lsr	r25
 362:	87 95       	ror	r24
 364:	97 f9       	bld	r25, 7
 366:	08 95       	ret
 368:	e1 e0       	ldi	r30, 0x01	; 1
 36a:	66 0f       	add	r22, r22
 36c:	77 1f       	adc	r23, r23
 36e:	88 1f       	adc	r24, r24
 370:	bb 1f       	adc	r27, r27
 372:	62 17       	cp	r22, r18
 374:	73 07       	cpc	r23, r19
 376:	84 07       	cpc	r24, r20
 378:	ba 07       	cpc	r27, r26
 37a:	20 f0       	brcs	.+8      	; 0x384 <__divsf3_pse+0xae>
 37c:	62 1b       	sub	r22, r18
 37e:	73 0b       	sbc	r23, r19
 380:	84 0b       	sbc	r24, r20
 382:	ba 0b       	sbc	r27, r26
 384:	ee 1f       	adc	r30, r30
 386:	88 f7       	brcc	.-30     	; 0x36a <__divsf3_pse+0x94>
 388:	e0 95       	com	r30
 38a:	08 95       	ret

0000038c <__floatunsisf>:
 38c:	e8 94       	clt
 38e:	09 c0       	rjmp	.+18     	; 0x3a2 <__floatsisf+0x12>

00000390 <__floatsisf>:
 390:	97 fb       	bst	r25, 7
 392:	3e f4       	brtc	.+14     	; 0x3a2 <__floatsisf+0x12>
 394:	90 95       	com	r25
 396:	80 95       	com	r24
 398:	70 95       	com	r23
 39a:	61 95       	neg	r22
 39c:	7f 4f       	sbci	r23, 0xFF	; 255
 39e:	8f 4f       	sbci	r24, 0xFF	; 255
 3a0:	9f 4f       	sbci	r25, 0xFF	; 255
 3a2:	99 23       	and	r25, r25
 3a4:	a9 f0       	breq	.+42     	; 0x3d0 <__floatsisf+0x40>
 3a6:	f9 2f       	mov	r31, r25
 3a8:	96 e9       	ldi	r25, 0x96	; 150
 3aa:	bb 27       	eor	r27, r27
 3ac:	93 95       	inc	r25
 3ae:	f6 95       	lsr	r31
 3b0:	87 95       	ror	r24
 3b2:	77 95       	ror	r23
 3b4:	67 95       	ror	r22
 3b6:	b7 95       	ror	r27
 3b8:	f1 11       	cpse	r31, r1
 3ba:	f8 cf       	rjmp	.-16     	; 0x3ac <__floatsisf+0x1c>
 3bc:	fa f4       	brpl	.+62     	; 0x3fc <__floatsisf+0x6c>
 3be:	bb 0f       	add	r27, r27
 3c0:	11 f4       	brne	.+4      	; 0x3c6 <__floatsisf+0x36>
 3c2:	60 ff       	sbrs	r22, 0
 3c4:	1b c0       	rjmp	.+54     	; 0x3fc <__floatsisf+0x6c>
 3c6:	6f 5f       	subi	r22, 0xFF	; 255
 3c8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ca:	8f 4f       	sbci	r24, 0xFF	; 255
 3cc:	9f 4f       	sbci	r25, 0xFF	; 255
 3ce:	16 c0       	rjmp	.+44     	; 0x3fc <__floatsisf+0x6c>
 3d0:	88 23       	and	r24, r24
 3d2:	11 f0       	breq	.+4      	; 0x3d8 <__floatsisf+0x48>
 3d4:	96 e9       	ldi	r25, 0x96	; 150
 3d6:	11 c0       	rjmp	.+34     	; 0x3fa <__floatsisf+0x6a>
 3d8:	77 23       	and	r23, r23
 3da:	21 f0       	breq	.+8      	; 0x3e4 <__floatsisf+0x54>
 3dc:	9e e8       	ldi	r25, 0x8E	; 142
 3de:	87 2f       	mov	r24, r23
 3e0:	76 2f       	mov	r23, r22
 3e2:	05 c0       	rjmp	.+10     	; 0x3ee <__floatsisf+0x5e>
 3e4:	66 23       	and	r22, r22
 3e6:	71 f0       	breq	.+28     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3e8:	96 e8       	ldi	r25, 0x86	; 134
 3ea:	86 2f       	mov	r24, r22
 3ec:	70 e0       	ldi	r23, 0x00	; 0
 3ee:	60 e0       	ldi	r22, 0x00	; 0
 3f0:	2a f0       	brmi	.+10     	; 0x3fc <__floatsisf+0x6c>
 3f2:	9a 95       	dec	r25
 3f4:	66 0f       	add	r22, r22
 3f6:	77 1f       	adc	r23, r23
 3f8:	88 1f       	adc	r24, r24
 3fa:	da f7       	brpl	.-10     	; 0x3f2 <__floatsisf+0x62>
 3fc:	88 0f       	add	r24, r24
 3fe:	96 95       	lsr	r25
 400:	87 95       	ror	r24
 402:	97 f9       	bld	r25, 7
 404:	08 95       	ret

00000406 <__fp_inf>:
 406:	97 f9       	bld	r25, 7
 408:	9f 67       	ori	r25, 0x7F	; 127
 40a:	80 e8       	ldi	r24, 0x80	; 128
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	60 e0       	ldi	r22, 0x00	; 0
 410:	08 95       	ret

00000412 <__fp_nan>:
 412:	9f ef       	ldi	r25, 0xFF	; 255
 414:	80 ec       	ldi	r24, 0xC0	; 192
 416:	08 95       	ret

00000418 <__fp_pscA>:
 418:	00 24       	eor	r0, r0
 41a:	0a 94       	dec	r0
 41c:	16 16       	cp	r1, r22
 41e:	17 06       	cpc	r1, r23
 420:	18 06       	cpc	r1, r24
 422:	09 06       	cpc	r0, r25
 424:	08 95       	ret

00000426 <__fp_pscB>:
 426:	00 24       	eor	r0, r0
 428:	0a 94       	dec	r0
 42a:	12 16       	cp	r1, r18
 42c:	13 06       	cpc	r1, r19
 42e:	14 06       	cpc	r1, r20
 430:	05 06       	cpc	r0, r21
 432:	08 95       	ret

00000434 <__fp_round>:
 434:	09 2e       	mov	r0, r25
 436:	03 94       	inc	r0
 438:	00 0c       	add	r0, r0
 43a:	11 f4       	brne	.+4      	; 0x440 <__fp_round+0xc>
 43c:	88 23       	and	r24, r24
 43e:	52 f0       	brmi	.+20     	; 0x454 <__fp_round+0x20>
 440:	bb 0f       	add	r27, r27
 442:	40 f4       	brcc	.+16     	; 0x454 <__fp_round+0x20>
 444:	bf 2b       	or	r27, r31
 446:	11 f4       	brne	.+4      	; 0x44c <__fp_round+0x18>
 448:	60 ff       	sbrs	r22, 0
 44a:	04 c0       	rjmp	.+8      	; 0x454 <__fp_round+0x20>
 44c:	6f 5f       	subi	r22, 0xFF	; 255
 44e:	7f 4f       	sbci	r23, 0xFF	; 255
 450:	8f 4f       	sbci	r24, 0xFF	; 255
 452:	9f 4f       	sbci	r25, 0xFF	; 255
 454:	08 95       	ret

00000456 <__fp_split3>:
 456:	57 fd       	sbrc	r21, 7
 458:	90 58       	subi	r25, 0x80	; 128
 45a:	44 0f       	add	r20, r20
 45c:	55 1f       	adc	r21, r21
 45e:	59 f0       	breq	.+22     	; 0x476 <__fp_splitA+0x10>
 460:	5f 3f       	cpi	r21, 0xFF	; 255
 462:	71 f0       	breq	.+28     	; 0x480 <__fp_splitA+0x1a>
 464:	47 95       	ror	r20

00000466 <__fp_splitA>:
 466:	88 0f       	add	r24, r24
 468:	97 fb       	bst	r25, 7
 46a:	99 1f       	adc	r25, r25
 46c:	61 f0       	breq	.+24     	; 0x486 <__fp_splitA+0x20>
 46e:	9f 3f       	cpi	r25, 0xFF	; 255
 470:	79 f0       	breq	.+30     	; 0x490 <__fp_splitA+0x2a>
 472:	87 95       	ror	r24
 474:	08 95       	ret
 476:	12 16       	cp	r1, r18
 478:	13 06       	cpc	r1, r19
 47a:	14 06       	cpc	r1, r20
 47c:	55 1f       	adc	r21, r21
 47e:	f2 cf       	rjmp	.-28     	; 0x464 <__fp_split3+0xe>
 480:	46 95       	lsr	r20
 482:	f1 df       	rcall	.-30     	; 0x466 <__fp_splitA>
 484:	08 c0       	rjmp	.+16     	; 0x496 <__fp_splitA+0x30>
 486:	16 16       	cp	r1, r22
 488:	17 06       	cpc	r1, r23
 48a:	18 06       	cpc	r1, r24
 48c:	99 1f       	adc	r25, r25
 48e:	f1 cf       	rjmp	.-30     	; 0x472 <__fp_splitA+0xc>
 490:	86 95       	lsr	r24
 492:	71 05       	cpc	r23, r1
 494:	61 05       	cpc	r22, r1
 496:	08 94       	sec
 498:	08 95       	ret

0000049a <__fp_zero>:
 49a:	e8 94       	clt

0000049c <__fp_szero>:
 49c:	bb 27       	eor	r27, r27
 49e:	66 27       	eor	r22, r22
 4a0:	77 27       	eor	r23, r23
 4a2:	cb 01       	movw	r24, r22
 4a4:	97 f9       	bld	r25, 7
 4a6:	08 95       	ret

000004a8 <__gesf2>:
 4a8:	0e 94 c6 02 	call	0x58c	; 0x58c <__fp_cmp>
 4ac:	08 f4       	brcc	.+2      	; 0x4b0 <__gesf2+0x8>
 4ae:	8f ef       	ldi	r24, 0xFF	; 255
 4b0:	08 95       	ret

000004b2 <__mulsf3>:
 4b2:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <__mulsf3x>
 4b6:	0c 94 1a 02 	jmp	0x434	; 0x434 <__fp_round>
 4ba:	0e 94 0c 02 	call	0x418	; 0x418 <__fp_pscA>
 4be:	38 f0       	brcs	.+14     	; 0x4ce <__mulsf3+0x1c>
 4c0:	0e 94 13 02 	call	0x426	; 0x426 <__fp_pscB>
 4c4:	20 f0       	brcs	.+8      	; 0x4ce <__mulsf3+0x1c>
 4c6:	95 23       	and	r25, r21
 4c8:	11 f0       	breq	.+4      	; 0x4ce <__mulsf3+0x1c>
 4ca:	0c 94 03 02 	jmp	0x406	; 0x406 <__fp_inf>
 4ce:	0c 94 09 02 	jmp	0x412	; 0x412 <__fp_nan>
 4d2:	11 24       	eor	r1, r1
 4d4:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__fp_szero>

000004d8 <__mulsf3x>:
 4d8:	0e 94 2b 02 	call	0x456	; 0x456 <__fp_split3>
 4dc:	70 f3       	brcs	.-36     	; 0x4ba <__mulsf3+0x8>

000004de <__mulsf3_pse>:
 4de:	95 9f       	mul	r25, r21
 4e0:	c1 f3       	breq	.-16     	; 0x4d2 <__mulsf3+0x20>
 4e2:	95 0f       	add	r25, r21
 4e4:	50 e0       	ldi	r21, 0x00	; 0
 4e6:	55 1f       	adc	r21, r21
 4e8:	62 9f       	mul	r22, r18
 4ea:	f0 01       	movw	r30, r0
 4ec:	72 9f       	mul	r23, r18
 4ee:	bb 27       	eor	r27, r27
 4f0:	f0 0d       	add	r31, r0
 4f2:	b1 1d       	adc	r27, r1
 4f4:	63 9f       	mul	r22, r19
 4f6:	aa 27       	eor	r26, r26
 4f8:	f0 0d       	add	r31, r0
 4fa:	b1 1d       	adc	r27, r1
 4fc:	aa 1f       	adc	r26, r26
 4fe:	64 9f       	mul	r22, r20
 500:	66 27       	eor	r22, r22
 502:	b0 0d       	add	r27, r0
 504:	a1 1d       	adc	r26, r1
 506:	66 1f       	adc	r22, r22
 508:	82 9f       	mul	r24, r18
 50a:	22 27       	eor	r18, r18
 50c:	b0 0d       	add	r27, r0
 50e:	a1 1d       	adc	r26, r1
 510:	62 1f       	adc	r22, r18
 512:	73 9f       	mul	r23, r19
 514:	b0 0d       	add	r27, r0
 516:	a1 1d       	adc	r26, r1
 518:	62 1f       	adc	r22, r18
 51a:	83 9f       	mul	r24, r19
 51c:	a0 0d       	add	r26, r0
 51e:	61 1d       	adc	r22, r1
 520:	22 1f       	adc	r18, r18
 522:	74 9f       	mul	r23, r20
 524:	33 27       	eor	r19, r19
 526:	a0 0d       	add	r26, r0
 528:	61 1d       	adc	r22, r1
 52a:	23 1f       	adc	r18, r19
 52c:	84 9f       	mul	r24, r20
 52e:	60 0d       	add	r22, r0
 530:	21 1d       	adc	r18, r1
 532:	82 2f       	mov	r24, r18
 534:	76 2f       	mov	r23, r22
 536:	6a 2f       	mov	r22, r26
 538:	11 24       	eor	r1, r1
 53a:	9f 57       	subi	r25, 0x7F	; 127
 53c:	50 40       	sbci	r21, 0x00	; 0
 53e:	9a f0       	brmi	.+38     	; 0x566 <__mulsf3_pse+0x88>
 540:	f1 f0       	breq	.+60     	; 0x57e <__mulsf3_pse+0xa0>
 542:	88 23       	and	r24, r24
 544:	4a f0       	brmi	.+18     	; 0x558 <__mulsf3_pse+0x7a>
 546:	ee 0f       	add	r30, r30
 548:	ff 1f       	adc	r31, r31
 54a:	bb 1f       	adc	r27, r27
 54c:	66 1f       	adc	r22, r22
 54e:	77 1f       	adc	r23, r23
 550:	88 1f       	adc	r24, r24
 552:	91 50       	subi	r25, 0x01	; 1
 554:	50 40       	sbci	r21, 0x00	; 0
 556:	a9 f7       	brne	.-22     	; 0x542 <__mulsf3_pse+0x64>
 558:	9e 3f       	cpi	r25, 0xFE	; 254
 55a:	51 05       	cpc	r21, r1
 55c:	80 f0       	brcs	.+32     	; 0x57e <__mulsf3_pse+0xa0>
 55e:	0c 94 03 02 	jmp	0x406	; 0x406 <__fp_inf>
 562:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__fp_szero>
 566:	5f 3f       	cpi	r21, 0xFF	; 255
 568:	e4 f3       	brlt	.-8      	; 0x562 <__mulsf3_pse+0x84>
 56a:	98 3e       	cpi	r25, 0xE8	; 232
 56c:	d4 f3       	brlt	.-12     	; 0x562 <__mulsf3_pse+0x84>
 56e:	86 95       	lsr	r24
 570:	77 95       	ror	r23
 572:	67 95       	ror	r22
 574:	b7 95       	ror	r27
 576:	f7 95       	ror	r31
 578:	e7 95       	ror	r30
 57a:	9f 5f       	subi	r25, 0xFF	; 255
 57c:	c1 f7       	brne	.-16     	; 0x56e <__mulsf3_pse+0x90>
 57e:	fe 2b       	or	r31, r30
 580:	88 0f       	add	r24, r24
 582:	91 1d       	adc	r25, r1
 584:	96 95       	lsr	r25
 586:	87 95       	ror	r24
 588:	97 f9       	bld	r25, 7
 58a:	08 95       	ret

0000058c <__fp_cmp>:
 58c:	99 0f       	add	r25, r25
 58e:	00 08       	sbc	r0, r0
 590:	55 0f       	add	r21, r21
 592:	aa 0b       	sbc	r26, r26
 594:	e0 e8       	ldi	r30, 0x80	; 128
 596:	fe ef       	ldi	r31, 0xFE	; 254
 598:	16 16       	cp	r1, r22
 59a:	17 06       	cpc	r1, r23
 59c:	e8 07       	cpc	r30, r24
 59e:	f9 07       	cpc	r31, r25
 5a0:	c0 f0       	brcs	.+48     	; 0x5d2 <__fp_cmp+0x46>
 5a2:	12 16       	cp	r1, r18
 5a4:	13 06       	cpc	r1, r19
 5a6:	e4 07       	cpc	r30, r20
 5a8:	f5 07       	cpc	r31, r21
 5aa:	98 f0       	brcs	.+38     	; 0x5d2 <__fp_cmp+0x46>
 5ac:	62 1b       	sub	r22, r18
 5ae:	73 0b       	sbc	r23, r19
 5b0:	84 0b       	sbc	r24, r20
 5b2:	95 0b       	sbc	r25, r21
 5b4:	39 f4       	brne	.+14     	; 0x5c4 <__fp_cmp+0x38>
 5b6:	0a 26       	eor	r0, r26
 5b8:	61 f0       	breq	.+24     	; 0x5d2 <__fp_cmp+0x46>
 5ba:	23 2b       	or	r18, r19
 5bc:	24 2b       	or	r18, r20
 5be:	25 2b       	or	r18, r21
 5c0:	21 f4       	brne	.+8      	; 0x5ca <__fp_cmp+0x3e>
 5c2:	08 95       	ret
 5c4:	0a 26       	eor	r0, r26
 5c6:	09 f4       	brne	.+2      	; 0x5ca <__fp_cmp+0x3e>
 5c8:	a1 40       	sbci	r26, 0x01	; 1
 5ca:	a6 95       	lsr	r26
 5cc:	8f ef       	ldi	r24, 0xFF	; 255
 5ce:	81 1d       	adc	r24, r1
 5d0:	81 1d       	adc	r24, r1
 5d2:	08 95       	ret

000005d4 <__tablejump2__>:
 5d4:	ee 0f       	add	r30, r30
 5d6:	ff 1f       	adc	r31, r31
 5d8:	05 90       	lpm	r0, Z+
 5da:	f4 91       	lpm	r31, Z
 5dc:	e0 2d       	mov	r30, r0
 5de:	09 94       	ijmp

000005e0 <_exit>:
 5e0:	f8 94       	cli

000005e2 <__stop_program>:
 5e2:	ff cf       	rjmp	.-2      	; 0x5e2 <__stop_program>
