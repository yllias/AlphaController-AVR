
AlphaController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000004c4  00800100  000005ea  0000067e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005ea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008005c4  008005c4  00000b42  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b42  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b74  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000bb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000935  00000000  00000000  00000c04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000073e  00000000  00000000  00001539  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000032d  00000000  00000000  00001c77  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00001fa4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000046b  00000000  00000000  00002064  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000c6  00000000  00000000  000024cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002595  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 45 00 	jmp	0x8a	; 0x8a <__ctors_end>
   4:	0c 94 07 01 	jmp	0x20e	; 0x20e <__vector_1>
   8:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
   c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  10:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  14:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  18:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  1c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  20:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  24:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  28:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  2c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  30:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  34:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  38:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  3c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  40:	0c 94 40 01 	jmp	0x280	; 0x280 <__vector_16>
  44:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  48:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  4c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  50:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  54:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  58:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  5c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  60:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  64:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  68:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  6c:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  70:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  74:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  78:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__bad_interrupt>
  7c:	ca 00       	.word	0x00ca	; ????
  7e:	c2 00       	.word	0x00c2	; ????
  80:	f0 00       	.word	0x00f0	; ????
  82:	d9 00       	.word	0x00d9	; ????
  84:	8e 00       	.word	0x008e	; ????
  86:	cc 00       	.word	0x00cc	; ????
  88:	c4 00       	.word	0x00c4	; ????

0000008a <__ctors_end>:
  8a:	11 24       	eor	r1, r1
  8c:	1f be       	out	0x3f, r1	; 63
  8e:	cf ef       	ldi	r28, 0xFF	; 255
  90:	d0 e1       	ldi	r29, 0x10	; 16
  92:	de bf       	out	0x3e, r29	; 62
  94:	cd bf       	out	0x3d, r28	; 61

00000096 <__do_copy_data>:
  96:	15 e0       	ldi	r17, 0x05	; 5
  98:	a0 e0       	ldi	r26, 0x00	; 0
  9a:	b1 e0       	ldi	r27, 0x01	; 1
  9c:	ea ee       	ldi	r30, 0xEA	; 234
  9e:	f5 e0       	ldi	r31, 0x05	; 5
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <__do_copy_data+0x10>
  a2:	05 90       	lpm	r0, Z+
  a4:	0d 92       	st	X+, r0
  a6:	a4 3c       	cpi	r26, 0xC4	; 196
  a8:	b1 07       	cpc	r27, r17
  aa:	d9 f7       	brne	.-10     	; 0xa2 <__do_copy_data+0xc>

000000ac <__do_clear_bss>:
  ac:	25 e0       	ldi	r18, 0x05	; 5
  ae:	a4 ec       	ldi	r26, 0xC4	; 196
  b0:	b5 e0       	ldi	r27, 0x05	; 5
  b2:	01 c0       	rjmp	.+2      	; 0xb6 <.do_clear_bss_start>

000000b4 <.do_clear_bss_loop>:
  b4:	1d 92       	st	X+, r1

000000b6 <.do_clear_bss_start>:
  b6:	aa 3c       	cpi	r26, 0xCA	; 202
  b8:	b2 07       	cpc	r27, r18
  ba:	e1 f7       	brne	.-8      	; 0xb4 <.do_clear_bss_loop>
  bc:	0e 94 64 00 	call	0xc8	; 0xc8 <main>
  c0:	0c 94 f3 02 	jmp	0x5e6	; 0x5e6 <_exit>

000000c4 <__bad_interrupt>:
  c4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c8 <main>:
void Init_Timer_0();


int main(void)
{
	sei();
  c8:	78 94       	sei
ISR (TIMER0_COMPA_vect){
	timerCounter++;
}

void Init_Int0(){
	EIMSK |= (1<<0);
  ca:	e8 9a       	sbi	0x1d, 0	; 29
	EICRA |= (1<<ISC00);
  cc:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
  d0:	81 60       	ori	r24, 0x01	; 1
  d2:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	intCounter = 1;
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
  de:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	burstCounter = 0;
  e2:	10 92 c9 05 	sts	0x05C9, r1	; 0x8005c9 <burstCounter+0x1>
  e6:	10 92 c8 05 	sts	0x05C8, r1	; 0x8005c8 <burstCounter>
}

void Init_Timer_0(){
	TCCR0A = (1<<WGM01);	//ctc mode
  ea:	82 e0       	ldi	r24, 0x02	; 2
  ec:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<CS01);	//prescaler 8
  ee:	85 b5       	in	r24, 0x25	; 37
  f0:	82 60       	ori	r24, 0x02	; 2
  f2:	85 bd       	out	0x25, r24	; 37
	OCR0A = 0x63;			//fill OCR0A with 99 for 50us angle steps
  f4:	83 e6       	ldi	r24, 0x63	; 99
  f6:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<1);		//enable compare interrupt
  f8:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
  fc:	82 60       	ori	r24, 0x02	; 2
  fe:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
int main(void)
{
	sei();
    Init_Int0();
	Init_Timer_0();
	DDRB = 0xFF;
 102:	8f ef       	ldi	r24, 0xFF	; 255
 104:	84 b9       	out	0x04, r24	; 4
 106:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <mode>
 10a:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <mode+0x1>
	
	while(1){
		switch(mode){
 10e:	e7 30       	cpi	r30, 0x07	; 7
 110:	f1 05       	cpc	r31, r1
 112:	e8 f7       	brcc	.-6      	; 0x10e <main+0x46>
 114:	e2 5c       	subi	r30, 0xC2	; 194
 116:	ff 4f       	sbci	r31, 0xFF	; 255
 118:	0c 94 ed 02 	jmp	0x5da	; 0x5da <__tablejump2__>
				}else{
					SSRon();
				}
			break;
			case 0x04: //phase angle effective voltage
				if(timerCounter > (fireAngleTableV[steuerWert]*netzT)/50){
 11c:	60 91 c6 05 	lds	r22, 0x05C6	; 0x8005c6 <timerCounter>
 120:	70 91 c7 05 	lds	r23, 0x05C7	; 0x8005c7 <timerCounter+0x1>
 124:	07 2e       	mov	r0, r23
 126:	00 0c       	add	r0, r0
 128:	88 0b       	sbc	r24, r24
 12a:	99 0b       	sbc	r25, r25
 12c:	0e 94 cb 01 	call	0x396	; 0x396 <__floatsisf>
 130:	6b 01       	movw	r12, r22
 132:	7c 01       	movw	r14, r24
 134:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <steuerWert>
 138:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <steuerWert+0x1>
 13c:	cc 0f       	add	r28, r28
 13e:	dd 1f       	adc	r29, r29
 140:	cc 0f       	add	r28, r28
 142:	dd 1f       	adc	r29, r29
 144:	c4 56       	subi	r28, 0x64	; 100
 146:	dd 4f       	sbci	r29, 0xFD	; 253
 148:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <netzT>
 14c:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <netzT+0x1>
 150:	07 2e       	mov	r0, r23
 152:	00 0c       	add	r0, r0
 154:	88 0b       	sbc	r24, r24
 156:	99 0b       	sbc	r25, r25
 158:	0e 94 cb 01 	call	0x396	; 0x396 <__floatsisf>
 15c:	28 81       	ld	r18, Y
 15e:	39 81       	ldd	r19, Y+1	; 0x01
 160:	4a 81       	ldd	r20, Y+2	; 0x02
 162:	5b 81       	ldd	r21, Y+3	; 0x03
 164:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__mulsf3>
 168:	20 e0       	ldi	r18, 0x00	; 0
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	48 e4       	ldi	r20, 0x48	; 72
 16e:	52 e4       	ldi	r21, 0x42	; 66
 170:	0e 94 57 01 	call	0x2ae	; 0x2ae <__divsf3>
 174:	9b 01       	movw	r18, r22
 176:	ac 01       	movw	r20, r24
 178:	c7 01       	movw	r24, r14
 17a:	b6 01       	movw	r22, r12
 17c:	0e 94 57 02 	call	0x4ae	; 0x4ae <__gesf2>
 180:	18 16       	cp	r1, r24
 182:	44 f0       	brlt	.+16     	; 0x194 <main+0xcc>
	OCR0A = 0x63;			//fill OCR0A with 99 for 50us angle steps
	TIMSK0 |= (1<<1);		//enable compare interrupt
}

void SSRon (){
	PORTB |= (1<<PB0);		//set PB0 HIGH
 184:	28 9a       	sbi	0x05, 0	; 5
 186:	bf cf       	rjmp	.-130    	; 0x106 <main+0x3e>
				}else{
					SSRon();
				}
			break;
			case 0x06: //burst fire high momentum
				if(pinStatus){
 188:	80 91 c4 05 	lds	r24, 0x05C4	; 0x8005c4 <__data_end>
 18c:	90 91 c5 05 	lds	r25, 0x05C5	; 0x8005c5 <__data_end+0x1>
 190:	89 2b       	or	r24, r25
 192:	c1 f7       	brne	.-16     	; 0x184 <main+0xbc>
void SSRon (){
	PORTB |= (1<<PB0);		//set PB0 HIGH
}

void SSRoff (){
	PORTB &= ~(1<<PB0);		//clear PB0 aka.  set PB0 LOW
 194:	28 98       	cbi	0x05, 0	; 5
 196:	b7 cf       	rjmp	.-146    	; 0x106 <main+0x3e>
				}else{
					SSRon();
				}
			break;
			case 0x05: //burst fire low momentum 
				if(burstCounter > steuerWert){
 198:	20 91 c8 05 	lds	r18, 0x05C8	; 0x8005c8 <burstCounter>
 19c:	30 91 c9 05 	lds	r19, 0x05C9	; 0x8005c9 <burstCounter+0x1>
 1a0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <steuerWert>
 1a4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <steuerWert+0x1>
 1a8:	82 17       	cp	r24, r18
 1aa:	93 07       	cpc	r25, r19
 1ac:	5c f7       	brge	.-42     	; 0x184 <main+0xbc>
void SSRon (){
	PORTB |= (1<<PB0);		//set PB0 HIGH
}

void SSRoff (){
	PORTB &= ~(1<<PB0);		//clear PB0 aka.  set PB0 LOW
 1ae:	28 98       	cbi	0x05, 0	; 5
 1b0:	aa cf       	rjmp	.-172    	; 0x106 <main+0x3e>
				}else{
					SSRon();
				}
			break;
			case 0x03: //phase angle power
				if(timerCounter > (fireAngleTableP[steuerWert]*netzT)/50){
 1b2:	60 91 c6 05 	lds	r22, 0x05C6	; 0x8005c6 <timerCounter>
 1b6:	70 91 c7 05 	lds	r23, 0x05C7	; 0x8005c7 <timerCounter+0x1>
 1ba:	07 2e       	mov	r0, r23
 1bc:	00 0c       	add	r0, r0
 1be:	88 0b       	sbc	r24, r24
 1c0:	99 0b       	sbc	r25, r25
 1c2:	0e 94 cb 01 	call	0x396	; 0x396 <__floatsisf>
 1c6:	6b 01       	movw	r12, r22
 1c8:	7c 01       	movw	r14, r24
 1ca:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <steuerWert>
 1ce:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <steuerWert+0x1>
 1d2:	cc 0f       	add	r28, r28
 1d4:	dd 1f       	adc	r29, r29
 1d6:	cc 0f       	add	r28, r28
 1d8:	dd 1f       	adc	r29, r29
 1da:	c8 5f       	subi	r28, 0xF8	; 248
 1dc:	de 4f       	sbci	r29, 0xFE	; 254
 1de:	b4 cf       	rjmp	.-152    	; 0x148 <main+0x80>
			break;
			case 0x01: //permanent HIGH
				SSRon();
			break;
			case 0x02: //uncorrected phase angle
				if(timerCounter > (fireAngleTable[steuerWert]*netzT)/50){
 1e0:	60 91 c6 05 	lds	r22, 0x05C6	; 0x8005c6 <timerCounter>
 1e4:	70 91 c7 05 	lds	r23, 0x05C7	; 0x8005c7 <timerCounter+0x1>
 1e8:	07 2e       	mov	r0, r23
 1ea:	00 0c       	add	r0, r0
 1ec:	88 0b       	sbc	r24, r24
 1ee:	99 0b       	sbc	r25, r25
 1f0:	0e 94 cb 01 	call	0x396	; 0x396 <__floatsisf>
 1f4:	6b 01       	movw	r12, r22
 1f6:	7c 01       	movw	r14, r24
 1f8:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <steuerWert>
 1fc:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <steuerWert+0x1>
 200:	cc 0f       	add	r28, r28
 202:	dd 1f       	adc	r29, r29
 204:	cc 0f       	add	r28, r28
 206:	dd 1f       	adc	r29, r29
 208:	c0 5d       	subi	r28, 0xD0	; 208
 20a:	db 4f       	sbci	r29, 0xFB	; 251
 20c:	9d cf       	rjmp	.-198    	; 0x148 <main+0x80>

0000020e <__vector_1>:
		}
		
	}
}

ISR (INT0_vect){
 20e:	1f 92       	push	r1
 210:	0f 92       	push	r0
 212:	0f b6       	in	r0, 0x3f	; 63
 214:	0f 92       	push	r0
 216:	11 24       	eor	r1, r1
 218:	2f 93       	push	r18
 21a:	3f 93       	push	r19
 21c:	4f 93       	push	r20
 21e:	5f 93       	push	r21
 220:	8f 93       	push	r24
 222:	9f 93       	push	r25
		if (intCounter == 200){
 224:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 228:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 22c:	28 3c       	cpi	r18, 0xC8	; 200
 22e:	31 05       	cpc	r19, r1
 230:	01 f1       	breq	.+64     	; 0x272 <__vector_1+0x64>
 232:	a9 01       	movw	r20, r18
 234:	4f 5f       	subi	r20, 0xFF	; 255
 236:	5f 4f       	sbci	r21, 0xFF	; 255
 238:	c9 01       	movw	r24, r18
 23a:	02 96       	adiw	r24, 0x02	; 2
 23c:	97 fd       	sbrc	r25, 7
 23e:	1e c0       	rjmp	.+60     	; 0x27c <__vector_1+0x6e>
 240:	95 95       	asr	r25
 242:	87 95       	ror	r24
			intCounter = 0;
		}
		intCounter++;
 244:	50 93 01 01 	sts	0x0101, r21	; 0x800101 <__data_start+0x1>
 248:	40 93 00 01 	sts	0x0100, r20	; 0x800100 <__data_start>
		burstCounter = (intCounter+1)/2;
 24c:	90 93 c9 05 	sts	0x05C9, r25	; 0x8005c9 <burstCounter+0x1>
 250:	80 93 c8 05 	sts	0x05C8, r24	; 0x8005c8 <burstCounter>
	timerCounter = 0;
 254:	10 92 c7 05 	sts	0x05C7, r1	; 0x8005c7 <timerCounter+0x1>
 258:	10 92 c6 05 	sts	0x05C6, r1	; 0x8005c6 <timerCounter>
	
}
 25c:	9f 91       	pop	r25
 25e:	8f 91       	pop	r24
 260:	5f 91       	pop	r21
 262:	4f 91       	pop	r20
 264:	3f 91       	pop	r19
 266:	2f 91       	pop	r18
 268:	0f 90       	pop	r0
 26a:	0f be       	out	0x3f, r0	; 63
 26c:	0f 90       	pop	r0
 26e:	1f 90       	pop	r1
 270:	18 95       	reti
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	41 e0       	ldi	r20, 0x01	; 1
 278:	50 e0       	ldi	r21, 0x00	; 0
 27a:	e4 cf       	rjmp	.-56     	; 0x244 <__vector_1+0x36>
 27c:	01 96       	adiw	r24, 0x01	; 1
 27e:	e0 cf       	rjmp	.-64     	; 0x240 <__vector_1+0x32>

00000280 <__vector_16>:

ISR (TIMER0_COMPA_vect){
 280:	1f 92       	push	r1
 282:	0f 92       	push	r0
 284:	0f b6       	in	r0, 0x3f	; 63
 286:	0f 92       	push	r0
 288:	11 24       	eor	r1, r1
 28a:	8f 93       	push	r24
 28c:	9f 93       	push	r25
	timerCounter++;
 28e:	80 91 c6 05 	lds	r24, 0x05C6	; 0x8005c6 <timerCounter>
 292:	90 91 c7 05 	lds	r25, 0x05C7	; 0x8005c7 <timerCounter+0x1>
 296:	01 96       	adiw	r24, 0x01	; 1
 298:	90 93 c7 05 	sts	0x05C7, r25	; 0x8005c7 <timerCounter+0x1>
 29c:	80 93 c6 05 	sts	0x05C6, r24	; 0x8005c6 <timerCounter>
}
 2a0:	9f 91       	pop	r25
 2a2:	8f 91       	pop	r24
 2a4:	0f 90       	pop	r0
 2a6:	0f be       	out	0x3f, r0	; 63
 2a8:	0f 90       	pop	r0
 2aa:	1f 90       	pop	r1
 2ac:	18 95       	reti

000002ae <__divsf3>:
 2ae:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <__divsf3x>
 2b2:	0c 94 1d 02 	jmp	0x43a	; 0x43a <__fp_round>
 2b6:	0e 94 16 02 	call	0x42c	; 0x42c <__fp_pscB>
 2ba:	58 f0       	brcs	.+22     	; 0x2d2 <__divsf3+0x24>
 2bc:	0e 94 0f 02 	call	0x41e	; 0x41e <__fp_pscA>
 2c0:	40 f0       	brcs	.+16     	; 0x2d2 <__divsf3+0x24>
 2c2:	29 f4       	brne	.+10     	; 0x2ce <__divsf3+0x20>
 2c4:	5f 3f       	cpi	r21, 0xFF	; 255
 2c6:	29 f0       	breq	.+10     	; 0x2d2 <__divsf3+0x24>
 2c8:	0c 94 06 02 	jmp	0x40c	; 0x40c <__fp_inf>
 2cc:	51 11       	cpse	r21, r1
 2ce:	0c 94 51 02 	jmp	0x4a2	; 0x4a2 <__fp_szero>
 2d2:	0c 94 0c 02 	jmp	0x418	; 0x418 <__fp_nan>

000002d6 <__divsf3x>:
 2d6:	0e 94 2e 02 	call	0x45c	; 0x45c <__fp_split3>
 2da:	68 f3       	brcs	.-38     	; 0x2b6 <__divsf3+0x8>

000002dc <__divsf3_pse>:
 2dc:	99 23       	and	r25, r25
 2de:	b1 f3       	breq	.-20     	; 0x2cc <__divsf3+0x1e>
 2e0:	55 23       	and	r21, r21
 2e2:	91 f3       	breq	.-28     	; 0x2c8 <__divsf3+0x1a>
 2e4:	95 1b       	sub	r25, r21
 2e6:	55 0b       	sbc	r21, r21
 2e8:	bb 27       	eor	r27, r27
 2ea:	aa 27       	eor	r26, r26
 2ec:	62 17       	cp	r22, r18
 2ee:	73 07       	cpc	r23, r19
 2f0:	84 07       	cpc	r24, r20
 2f2:	38 f0       	brcs	.+14     	; 0x302 <__divsf3_pse+0x26>
 2f4:	9f 5f       	subi	r25, 0xFF	; 255
 2f6:	5f 4f       	sbci	r21, 0xFF	; 255
 2f8:	22 0f       	add	r18, r18
 2fa:	33 1f       	adc	r19, r19
 2fc:	44 1f       	adc	r20, r20
 2fe:	aa 1f       	adc	r26, r26
 300:	a9 f3       	breq	.-22     	; 0x2ec <__divsf3_pse+0x10>
 302:	35 d0       	rcall	.+106    	; 0x36e <__divsf3_pse+0x92>
 304:	0e 2e       	mov	r0, r30
 306:	3a f0       	brmi	.+14     	; 0x316 <__divsf3_pse+0x3a>
 308:	e0 e8       	ldi	r30, 0x80	; 128
 30a:	32 d0       	rcall	.+100    	; 0x370 <__divsf3_pse+0x94>
 30c:	91 50       	subi	r25, 0x01	; 1
 30e:	50 40       	sbci	r21, 0x00	; 0
 310:	e6 95       	lsr	r30
 312:	00 1c       	adc	r0, r0
 314:	ca f7       	brpl	.-14     	; 0x308 <__divsf3_pse+0x2c>
 316:	2b d0       	rcall	.+86     	; 0x36e <__divsf3_pse+0x92>
 318:	fe 2f       	mov	r31, r30
 31a:	29 d0       	rcall	.+82     	; 0x36e <__divsf3_pse+0x92>
 31c:	66 0f       	add	r22, r22
 31e:	77 1f       	adc	r23, r23
 320:	88 1f       	adc	r24, r24
 322:	bb 1f       	adc	r27, r27
 324:	26 17       	cp	r18, r22
 326:	37 07       	cpc	r19, r23
 328:	48 07       	cpc	r20, r24
 32a:	ab 07       	cpc	r26, r27
 32c:	b0 e8       	ldi	r27, 0x80	; 128
 32e:	09 f0       	breq	.+2      	; 0x332 <__divsf3_pse+0x56>
 330:	bb 0b       	sbc	r27, r27
 332:	80 2d       	mov	r24, r0
 334:	bf 01       	movw	r22, r30
 336:	ff 27       	eor	r31, r31
 338:	93 58       	subi	r25, 0x83	; 131
 33a:	5f 4f       	sbci	r21, 0xFF	; 255
 33c:	3a f0       	brmi	.+14     	; 0x34c <__divsf3_pse+0x70>
 33e:	9e 3f       	cpi	r25, 0xFE	; 254
 340:	51 05       	cpc	r21, r1
 342:	78 f0       	brcs	.+30     	; 0x362 <__divsf3_pse+0x86>
 344:	0c 94 06 02 	jmp	0x40c	; 0x40c <__fp_inf>
 348:	0c 94 51 02 	jmp	0x4a2	; 0x4a2 <__fp_szero>
 34c:	5f 3f       	cpi	r21, 0xFF	; 255
 34e:	e4 f3       	brlt	.-8      	; 0x348 <__divsf3_pse+0x6c>
 350:	98 3e       	cpi	r25, 0xE8	; 232
 352:	d4 f3       	brlt	.-12     	; 0x348 <__divsf3_pse+0x6c>
 354:	86 95       	lsr	r24
 356:	77 95       	ror	r23
 358:	67 95       	ror	r22
 35a:	b7 95       	ror	r27
 35c:	f7 95       	ror	r31
 35e:	9f 5f       	subi	r25, 0xFF	; 255
 360:	c9 f7       	brne	.-14     	; 0x354 <__divsf3_pse+0x78>
 362:	88 0f       	add	r24, r24
 364:	91 1d       	adc	r25, r1
 366:	96 95       	lsr	r25
 368:	87 95       	ror	r24
 36a:	97 f9       	bld	r25, 7
 36c:	08 95       	ret
 36e:	e1 e0       	ldi	r30, 0x01	; 1
 370:	66 0f       	add	r22, r22
 372:	77 1f       	adc	r23, r23
 374:	88 1f       	adc	r24, r24
 376:	bb 1f       	adc	r27, r27
 378:	62 17       	cp	r22, r18
 37a:	73 07       	cpc	r23, r19
 37c:	84 07       	cpc	r24, r20
 37e:	ba 07       	cpc	r27, r26
 380:	20 f0       	brcs	.+8      	; 0x38a <__divsf3_pse+0xae>
 382:	62 1b       	sub	r22, r18
 384:	73 0b       	sbc	r23, r19
 386:	84 0b       	sbc	r24, r20
 388:	ba 0b       	sbc	r27, r26
 38a:	ee 1f       	adc	r30, r30
 38c:	88 f7       	brcc	.-30     	; 0x370 <__divsf3_pse+0x94>
 38e:	e0 95       	com	r30
 390:	08 95       	ret

00000392 <__floatunsisf>:
 392:	e8 94       	clt
 394:	09 c0       	rjmp	.+18     	; 0x3a8 <__floatsisf+0x12>

00000396 <__floatsisf>:
 396:	97 fb       	bst	r25, 7
 398:	3e f4       	brtc	.+14     	; 0x3a8 <__floatsisf+0x12>
 39a:	90 95       	com	r25
 39c:	80 95       	com	r24
 39e:	70 95       	com	r23
 3a0:	61 95       	neg	r22
 3a2:	7f 4f       	sbci	r23, 0xFF	; 255
 3a4:	8f 4f       	sbci	r24, 0xFF	; 255
 3a6:	9f 4f       	sbci	r25, 0xFF	; 255
 3a8:	99 23       	and	r25, r25
 3aa:	a9 f0       	breq	.+42     	; 0x3d6 <__floatsisf+0x40>
 3ac:	f9 2f       	mov	r31, r25
 3ae:	96 e9       	ldi	r25, 0x96	; 150
 3b0:	bb 27       	eor	r27, r27
 3b2:	93 95       	inc	r25
 3b4:	f6 95       	lsr	r31
 3b6:	87 95       	ror	r24
 3b8:	77 95       	ror	r23
 3ba:	67 95       	ror	r22
 3bc:	b7 95       	ror	r27
 3be:	f1 11       	cpse	r31, r1
 3c0:	f8 cf       	rjmp	.-16     	; 0x3b2 <__floatsisf+0x1c>
 3c2:	fa f4       	brpl	.+62     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3c4:	bb 0f       	add	r27, r27
 3c6:	11 f4       	brne	.+4      	; 0x3cc <__floatsisf+0x36>
 3c8:	60 ff       	sbrs	r22, 0
 3ca:	1b c0       	rjmp	.+54     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3cc:	6f 5f       	subi	r22, 0xFF	; 255
 3ce:	7f 4f       	sbci	r23, 0xFF	; 255
 3d0:	8f 4f       	sbci	r24, 0xFF	; 255
 3d2:	9f 4f       	sbci	r25, 0xFF	; 255
 3d4:	16 c0       	rjmp	.+44     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3d6:	88 23       	and	r24, r24
 3d8:	11 f0       	breq	.+4      	; 0x3de <__floatsisf+0x48>
 3da:	96 e9       	ldi	r25, 0x96	; 150
 3dc:	11 c0       	rjmp	.+34     	; 0x400 <__LOCK_REGION_LENGTH__>
 3de:	77 23       	and	r23, r23
 3e0:	21 f0       	breq	.+8      	; 0x3ea <__floatsisf+0x54>
 3e2:	9e e8       	ldi	r25, 0x8E	; 142
 3e4:	87 2f       	mov	r24, r23
 3e6:	76 2f       	mov	r23, r22
 3e8:	05 c0       	rjmp	.+10     	; 0x3f4 <__floatsisf+0x5e>
 3ea:	66 23       	and	r22, r22
 3ec:	71 f0       	breq	.+28     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3ee:	96 e8       	ldi	r25, 0x86	; 134
 3f0:	86 2f       	mov	r24, r22
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	60 e0       	ldi	r22, 0x00	; 0
 3f6:	2a f0       	brmi	.+10     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f8:	9a 95       	dec	r25
 3fa:	66 0f       	add	r22, r22
 3fc:	77 1f       	adc	r23, r23
 3fe:	88 1f       	adc	r24, r24
 400:	da f7       	brpl	.-10     	; 0x3f8 <__floatsisf+0x62>
 402:	88 0f       	add	r24, r24
 404:	96 95       	lsr	r25
 406:	87 95       	ror	r24
 408:	97 f9       	bld	r25, 7
 40a:	08 95       	ret

0000040c <__fp_inf>:
 40c:	97 f9       	bld	r25, 7
 40e:	9f 67       	ori	r25, 0x7F	; 127
 410:	80 e8       	ldi	r24, 0x80	; 128
 412:	70 e0       	ldi	r23, 0x00	; 0
 414:	60 e0       	ldi	r22, 0x00	; 0
 416:	08 95       	ret

00000418 <__fp_nan>:
 418:	9f ef       	ldi	r25, 0xFF	; 255
 41a:	80 ec       	ldi	r24, 0xC0	; 192
 41c:	08 95       	ret

0000041e <__fp_pscA>:
 41e:	00 24       	eor	r0, r0
 420:	0a 94       	dec	r0
 422:	16 16       	cp	r1, r22
 424:	17 06       	cpc	r1, r23
 426:	18 06       	cpc	r1, r24
 428:	09 06       	cpc	r0, r25
 42a:	08 95       	ret

0000042c <__fp_pscB>:
 42c:	00 24       	eor	r0, r0
 42e:	0a 94       	dec	r0
 430:	12 16       	cp	r1, r18
 432:	13 06       	cpc	r1, r19
 434:	14 06       	cpc	r1, r20
 436:	05 06       	cpc	r0, r21
 438:	08 95       	ret

0000043a <__fp_round>:
 43a:	09 2e       	mov	r0, r25
 43c:	03 94       	inc	r0
 43e:	00 0c       	add	r0, r0
 440:	11 f4       	brne	.+4      	; 0x446 <__fp_round+0xc>
 442:	88 23       	and	r24, r24
 444:	52 f0       	brmi	.+20     	; 0x45a <__fp_round+0x20>
 446:	bb 0f       	add	r27, r27
 448:	40 f4       	brcc	.+16     	; 0x45a <__fp_round+0x20>
 44a:	bf 2b       	or	r27, r31
 44c:	11 f4       	brne	.+4      	; 0x452 <__fp_round+0x18>
 44e:	60 ff       	sbrs	r22, 0
 450:	04 c0       	rjmp	.+8      	; 0x45a <__fp_round+0x20>
 452:	6f 5f       	subi	r22, 0xFF	; 255
 454:	7f 4f       	sbci	r23, 0xFF	; 255
 456:	8f 4f       	sbci	r24, 0xFF	; 255
 458:	9f 4f       	sbci	r25, 0xFF	; 255
 45a:	08 95       	ret

0000045c <__fp_split3>:
 45c:	57 fd       	sbrc	r21, 7
 45e:	90 58       	subi	r25, 0x80	; 128
 460:	44 0f       	add	r20, r20
 462:	55 1f       	adc	r21, r21
 464:	59 f0       	breq	.+22     	; 0x47c <__fp_splitA+0x10>
 466:	5f 3f       	cpi	r21, 0xFF	; 255
 468:	71 f0       	breq	.+28     	; 0x486 <__fp_splitA+0x1a>
 46a:	47 95       	ror	r20

0000046c <__fp_splitA>:
 46c:	88 0f       	add	r24, r24
 46e:	97 fb       	bst	r25, 7
 470:	99 1f       	adc	r25, r25
 472:	61 f0       	breq	.+24     	; 0x48c <__fp_splitA+0x20>
 474:	9f 3f       	cpi	r25, 0xFF	; 255
 476:	79 f0       	breq	.+30     	; 0x496 <__fp_splitA+0x2a>
 478:	87 95       	ror	r24
 47a:	08 95       	ret
 47c:	12 16       	cp	r1, r18
 47e:	13 06       	cpc	r1, r19
 480:	14 06       	cpc	r1, r20
 482:	55 1f       	adc	r21, r21
 484:	f2 cf       	rjmp	.-28     	; 0x46a <__fp_split3+0xe>
 486:	46 95       	lsr	r20
 488:	f1 df       	rcall	.-30     	; 0x46c <__fp_splitA>
 48a:	08 c0       	rjmp	.+16     	; 0x49c <__fp_splitA+0x30>
 48c:	16 16       	cp	r1, r22
 48e:	17 06       	cpc	r1, r23
 490:	18 06       	cpc	r1, r24
 492:	99 1f       	adc	r25, r25
 494:	f1 cf       	rjmp	.-30     	; 0x478 <__fp_splitA+0xc>
 496:	86 95       	lsr	r24
 498:	71 05       	cpc	r23, r1
 49a:	61 05       	cpc	r22, r1
 49c:	08 94       	sec
 49e:	08 95       	ret

000004a0 <__fp_zero>:
 4a0:	e8 94       	clt

000004a2 <__fp_szero>:
 4a2:	bb 27       	eor	r27, r27
 4a4:	66 27       	eor	r22, r22
 4a6:	77 27       	eor	r23, r23
 4a8:	cb 01       	movw	r24, r22
 4aa:	97 f9       	bld	r25, 7
 4ac:	08 95       	ret

000004ae <__gesf2>:
 4ae:	0e 94 c9 02 	call	0x592	; 0x592 <__fp_cmp>
 4b2:	08 f4       	brcc	.+2      	; 0x4b6 <__gesf2+0x8>
 4b4:	8f ef       	ldi	r24, 0xFF	; 255
 4b6:	08 95       	ret

000004b8 <__mulsf3>:
 4b8:	0e 94 6f 02 	call	0x4de	; 0x4de <__mulsf3x>
 4bc:	0c 94 1d 02 	jmp	0x43a	; 0x43a <__fp_round>
 4c0:	0e 94 0f 02 	call	0x41e	; 0x41e <__fp_pscA>
 4c4:	38 f0       	brcs	.+14     	; 0x4d4 <__mulsf3+0x1c>
 4c6:	0e 94 16 02 	call	0x42c	; 0x42c <__fp_pscB>
 4ca:	20 f0       	brcs	.+8      	; 0x4d4 <__mulsf3+0x1c>
 4cc:	95 23       	and	r25, r21
 4ce:	11 f0       	breq	.+4      	; 0x4d4 <__mulsf3+0x1c>
 4d0:	0c 94 06 02 	jmp	0x40c	; 0x40c <__fp_inf>
 4d4:	0c 94 0c 02 	jmp	0x418	; 0x418 <__fp_nan>
 4d8:	11 24       	eor	r1, r1
 4da:	0c 94 51 02 	jmp	0x4a2	; 0x4a2 <__fp_szero>

000004de <__mulsf3x>:
 4de:	0e 94 2e 02 	call	0x45c	; 0x45c <__fp_split3>
 4e2:	70 f3       	brcs	.-36     	; 0x4c0 <__mulsf3+0x8>

000004e4 <__mulsf3_pse>:
 4e4:	95 9f       	mul	r25, r21
 4e6:	c1 f3       	breq	.-16     	; 0x4d8 <__mulsf3+0x20>
 4e8:	95 0f       	add	r25, r21
 4ea:	50 e0       	ldi	r21, 0x00	; 0
 4ec:	55 1f       	adc	r21, r21
 4ee:	62 9f       	mul	r22, r18
 4f0:	f0 01       	movw	r30, r0
 4f2:	72 9f       	mul	r23, r18
 4f4:	bb 27       	eor	r27, r27
 4f6:	f0 0d       	add	r31, r0
 4f8:	b1 1d       	adc	r27, r1
 4fa:	63 9f       	mul	r22, r19
 4fc:	aa 27       	eor	r26, r26
 4fe:	f0 0d       	add	r31, r0
 500:	b1 1d       	adc	r27, r1
 502:	aa 1f       	adc	r26, r26
 504:	64 9f       	mul	r22, r20
 506:	66 27       	eor	r22, r22
 508:	b0 0d       	add	r27, r0
 50a:	a1 1d       	adc	r26, r1
 50c:	66 1f       	adc	r22, r22
 50e:	82 9f       	mul	r24, r18
 510:	22 27       	eor	r18, r18
 512:	b0 0d       	add	r27, r0
 514:	a1 1d       	adc	r26, r1
 516:	62 1f       	adc	r22, r18
 518:	73 9f       	mul	r23, r19
 51a:	b0 0d       	add	r27, r0
 51c:	a1 1d       	adc	r26, r1
 51e:	62 1f       	adc	r22, r18
 520:	83 9f       	mul	r24, r19
 522:	a0 0d       	add	r26, r0
 524:	61 1d       	adc	r22, r1
 526:	22 1f       	adc	r18, r18
 528:	74 9f       	mul	r23, r20
 52a:	33 27       	eor	r19, r19
 52c:	a0 0d       	add	r26, r0
 52e:	61 1d       	adc	r22, r1
 530:	23 1f       	adc	r18, r19
 532:	84 9f       	mul	r24, r20
 534:	60 0d       	add	r22, r0
 536:	21 1d       	adc	r18, r1
 538:	82 2f       	mov	r24, r18
 53a:	76 2f       	mov	r23, r22
 53c:	6a 2f       	mov	r22, r26
 53e:	11 24       	eor	r1, r1
 540:	9f 57       	subi	r25, 0x7F	; 127
 542:	50 40       	sbci	r21, 0x00	; 0
 544:	9a f0       	brmi	.+38     	; 0x56c <__mulsf3_pse+0x88>
 546:	f1 f0       	breq	.+60     	; 0x584 <__mulsf3_pse+0xa0>
 548:	88 23       	and	r24, r24
 54a:	4a f0       	brmi	.+18     	; 0x55e <__mulsf3_pse+0x7a>
 54c:	ee 0f       	add	r30, r30
 54e:	ff 1f       	adc	r31, r31
 550:	bb 1f       	adc	r27, r27
 552:	66 1f       	adc	r22, r22
 554:	77 1f       	adc	r23, r23
 556:	88 1f       	adc	r24, r24
 558:	91 50       	subi	r25, 0x01	; 1
 55a:	50 40       	sbci	r21, 0x00	; 0
 55c:	a9 f7       	brne	.-22     	; 0x548 <__mulsf3_pse+0x64>
 55e:	9e 3f       	cpi	r25, 0xFE	; 254
 560:	51 05       	cpc	r21, r1
 562:	80 f0       	brcs	.+32     	; 0x584 <__mulsf3_pse+0xa0>
 564:	0c 94 06 02 	jmp	0x40c	; 0x40c <__fp_inf>
 568:	0c 94 51 02 	jmp	0x4a2	; 0x4a2 <__fp_szero>
 56c:	5f 3f       	cpi	r21, 0xFF	; 255
 56e:	e4 f3       	brlt	.-8      	; 0x568 <__mulsf3_pse+0x84>
 570:	98 3e       	cpi	r25, 0xE8	; 232
 572:	d4 f3       	brlt	.-12     	; 0x568 <__mulsf3_pse+0x84>
 574:	86 95       	lsr	r24
 576:	77 95       	ror	r23
 578:	67 95       	ror	r22
 57a:	b7 95       	ror	r27
 57c:	f7 95       	ror	r31
 57e:	e7 95       	ror	r30
 580:	9f 5f       	subi	r25, 0xFF	; 255
 582:	c1 f7       	brne	.-16     	; 0x574 <__mulsf3_pse+0x90>
 584:	fe 2b       	or	r31, r30
 586:	88 0f       	add	r24, r24
 588:	91 1d       	adc	r25, r1
 58a:	96 95       	lsr	r25
 58c:	87 95       	ror	r24
 58e:	97 f9       	bld	r25, 7
 590:	08 95       	ret

00000592 <__fp_cmp>:
 592:	99 0f       	add	r25, r25
 594:	00 08       	sbc	r0, r0
 596:	55 0f       	add	r21, r21
 598:	aa 0b       	sbc	r26, r26
 59a:	e0 e8       	ldi	r30, 0x80	; 128
 59c:	fe ef       	ldi	r31, 0xFE	; 254
 59e:	16 16       	cp	r1, r22
 5a0:	17 06       	cpc	r1, r23
 5a2:	e8 07       	cpc	r30, r24
 5a4:	f9 07       	cpc	r31, r25
 5a6:	c0 f0       	brcs	.+48     	; 0x5d8 <__fp_cmp+0x46>
 5a8:	12 16       	cp	r1, r18
 5aa:	13 06       	cpc	r1, r19
 5ac:	e4 07       	cpc	r30, r20
 5ae:	f5 07       	cpc	r31, r21
 5b0:	98 f0       	brcs	.+38     	; 0x5d8 <__fp_cmp+0x46>
 5b2:	62 1b       	sub	r22, r18
 5b4:	73 0b       	sbc	r23, r19
 5b6:	84 0b       	sbc	r24, r20
 5b8:	95 0b       	sbc	r25, r21
 5ba:	39 f4       	brne	.+14     	; 0x5ca <__fp_cmp+0x38>
 5bc:	0a 26       	eor	r0, r26
 5be:	61 f0       	breq	.+24     	; 0x5d8 <__fp_cmp+0x46>
 5c0:	23 2b       	or	r18, r19
 5c2:	24 2b       	or	r18, r20
 5c4:	25 2b       	or	r18, r21
 5c6:	21 f4       	brne	.+8      	; 0x5d0 <__fp_cmp+0x3e>
 5c8:	08 95       	ret
 5ca:	0a 26       	eor	r0, r26
 5cc:	09 f4       	brne	.+2      	; 0x5d0 <__fp_cmp+0x3e>
 5ce:	a1 40       	sbci	r26, 0x01	; 1
 5d0:	a6 95       	lsr	r26
 5d2:	8f ef       	ldi	r24, 0xFF	; 255
 5d4:	81 1d       	adc	r24, r1
 5d6:	81 1d       	adc	r24, r1
 5d8:	08 95       	ret

000005da <__tablejump2__>:
 5da:	ee 0f       	add	r30, r30
 5dc:	ff 1f       	adc	r31, r31
 5de:	05 90       	lpm	r0, Z+
 5e0:	f4 91       	lpm	r31, Z
 5e2:	e0 2d       	mov	r30, r0
 5e4:	09 94       	ijmp

000005e6 <_exit>:
 5e6:	f8 94       	cli

000005e8 <__stop_program>:
 5e8:	ff cf       	rjmp	.-2      	; 0x5e8 <__stop_program>
